name: lint | test | build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: "npm"
          node-version: 18.14.2
      - name: install
        run: npm ci
      - name: lint
        run: npm run lint

  test:
    name: Test
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: "npm"
          node-version: 18.14.2
      - name: install
        run: npm ci
      - name: test
        run: npm run test:ci

  build:
    name: Build
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: "npm"
          node-version: 18.14.2
      - name: install
        run: npm ci
      - name: build
        run: npm run build
      - uses: actions/upload-artifact@v3
        if: success() && github.ref == 'refs/heads/main'
        with:
          name: package
          path: dist

  publish:
    name: Publish
    if: success() && github.ref == 'refs/heads/main'
    needs: build
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: "npm"
          node-version: 18.14.2
          registry-url: https://registry.npmjs.org/
      - uses: actions/download-artifact@v3
        with:
          name: package
          path: dist
      - name: configure git
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      - name: configure npm
        run: npm config set //registry.npmjs.org/:_authToken ${{secrets.WCP_NPM_TOKEN}}
      - name: release
        run: npx release-it --ci --verbose
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          NODE_AUTH_TOKEN: ${{secrets.WCP_NPM_TOKEN}}

  deploy:
    name: Deploy
    if: success() && github.ref == 'refs/heads/main'
    needs: build
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/configure-pages@v3
      - uses: actions/download-artifact@v3
        with:
          name: package
          path: dist
      - name: Upload
        uses: actions/upload-pages-artifact@v1
        with:
          path: "dist"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
