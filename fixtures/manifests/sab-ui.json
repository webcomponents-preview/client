{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/components/forms/feedback-box/feedback-box.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "The feddback box provides a form to submit feedback of the user.\nIt can be used like any other form element, as it dispatches a submit event if the form is valid.",
          "name": "FeedbackBox",
          "cssProperties": [
            {
              "description": "The width of the feedback box within the disturber.",
              "name": "--sab-feedback-box-width"
            },
            {
              "description": "The outer padding of the feedback box.",
              "name": "--sab-feedback-box-spacing"
            },
            {
              "description": "The spacing between the form elements.",
              "name": "--sab-feedback-box-form-element-spacing"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "form",
              "type": {
                "text": "HTMLFormElement"
              }
            },
            {
              "kind": "field",
              "name": "disturberHeight",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "formValid",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "'true' | 'false'"
              },
              "default": "'false'",
              "attribute": "aria-expanded",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "slogan",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "slogan",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "handleDisturberClick"
            },
            {
              "kind": "method",
              "name": "handleCloseClick",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateDisturberHeight"
            },
            {
              "kind": "method",
              "name": "checkValidity"
            },
            {
              "kind": "method",
              "name": "emitSubmitEvent"
            },
            {
              "kind": "method",
              "name": "handleInput"
            },
            {
              "kind": "method",
              "name": "handleSubmit",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleReset"
            }
          ],
          "attributes": [
            {
              "name": "aria-expanded",
              "type": {
                "text": "'true' | 'false'"
              },
              "default": "'false'",
              "fieldName": "expanded"
            },
            {
              "name": "slogan",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "slogan"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sab-feedback-box",
          "examples": [
            "## Closed feedback box\n```html\n<sab-feedback-box slogan=\"Ihr Feedback zählt!\"></sab-feedback-box>\n```",
            "## Opened feedback box\n```html\n<sab-feedback-box aria-expanded=\"true\" slogan=\"Ihr Feedback zählt!\"></sab-feedback-box>\n```"
          ],
          "readme": "# sab-feedback-box\n\nThe feddback box provides a form to submit feedback of the user.\nIt can be used like any other form element, as it dispatches a submit event if the form is valid.\n\n## Examples\n\n## Closed feedback box\n\n```html\n<sab-feedback-box slogan=\"Ihr Feedback zählt!\"></sab-feedback-box>\n```\n\n## Opened feedback box\n\n```html\n<sab-feedback-box aria-expanded=\"true\" slogan=\"Ihr Feedback zählt!\"></sab-feedback-box>\n```\n\n## Properties\n\n| Property          | Attribute       | Type                  | Default |\n|-------------------|-----------------|-----------------------|---------|\n| `disturberHeight` |                 | `string \\| undefined` |         |\n| `expanded`        | `aria-expanded` | `\"true\" \\| \"false\"`   | \"false\" |\n| `form`            |                 |                       |         |\n| `formValid`       |                 | `boolean`             | false   |\n| `slogan`          | `slogan`        | `string \\| undefined` |         |\n\n## Methods\n\n| Method                  | Type                 |\n|-------------------------|----------------------|\n| `checkValidity`         | `(): any`            |\n| `emitSubmitEvent`       | `(): void`           |\n| `handleCloseClick`      | `(event: any): void` |\n| `handleDisturberClick`  | `(): void`           |\n| `handleInput`           | `(): void`           |\n| `handleReset`           | `(): void`           |\n| `handleSubmit`          | `(event: any): void` |\n| `updateDisturberHeight` | `(): void`           |\n\n## Events\n\n| Event                     | Description                                      |\n|---------------------------|--------------------------------------------------|\n| `sab-feedback-box:submit` | The submit event of the form if the form is valid. |\n\n## CSS Custom Properties\n\n| Property                                  | Description                                      |\n|-------------------------------------------|--------------------------------------------------|\n| `--sab-feedback-box-form-element-spacing` | The spacing between the form elements.           |\n| `--sab-feedback-box-spacing`              | The outer padding of the feedback box.           |\n| `--sab-feedback-box-width`                | The width of the feedback box within the disturber. |\n",
          "groups": [
            "forms"
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FeedbackBox",
          "declaration": {
            "name": "FeedbackBox",
            "module": "src/components/forms/feedback-box/feedback-box.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/forms/input-radio/input-radio.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A radio input element using the SAB style. Fully form aware.",
          "name": "InputRadio",
          "cssProperties": [
            {
              "description": "The font size of the label.",
              "name": "--sab-input-radio-label-size"
            },
            {
              "description": "The leading distance of the label to the input.",
              "name": "--sab-input-radio-label-spacing"
            },
            {
              "description": "The size of the radio input.",
              "name": "--sab-input-radio-size"
            },
            {
              "description": "The background color of the radio input.",
              "name": "--sab-input-radio-background"
            },
            {
              "description": "The border color of the radio input.",
              "name": "--sab-input-radio-border"
            },
            {
              "description": "The fill color of the radio input when not checked.",
              "name": "--sab-input-radio-passive-color"
            },
            {
              "description": "The fill color of the radio input when checked.",
              "name": "--sab-input-radio-active-color"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "readonly": true,
              "default": "true"
            },
            {
              "kind": "field",
              "name": "#internals",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "initialChecked",
              "type": {
                "text": "boolean"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "label",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "'radio'",
              "attribute": "name",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "required",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "checked",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "'on'",
              "attribute": "value",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "formResetCallback"
            },
            {
              "kind": "method",
              "name": "checkValidity",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleInput",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "label"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "'radio'",
              "fieldName": "name"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required"
            },
            {
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "checked"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "'on'",
              "fieldName": "value"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sab-input-radio",
          "examples": [
            "## With optinal label\n```html\n<sab-input-radio label=\"With optional label\"></sab-input-radio>\n```",
            "## With initial value\n```html\n<sab-input-radio checked label=\"With optional initial value\"></sab-input-radio>\n```",
            "## Used within a form\n```html\n<form>\n  <sab-input-radio label=\"Fully form enabled component\"></sab-input-radio>\n  <button type=\"submit\">Submit</button>\n  <button type=\"reset\">Reset</button>\n</form>\n```"
          ],
          "readme": "# sab-input-radio\n\nA radio input element using the SAB style. Fully form aware.\n\n## Examples\n\n## With optinal label\n\n```html\n<sab-input-radio label=\"With optional label\"></sab-input-radio>\n```\n\n## With initial value\n\n```html\n<sab-input-radio checked label=\"With optional initial value\"></sab-input-radio>\n```\n\n## Used within a form\n\n```html\n<form>\n  <sab-input-radio label=\"Fully form enabled component\"></sab-input-radio>\n  <button type=\"submit\">Submit</button>\n  <button type=\"reset\">Reset</button>\n</form>\n```\n\n## Properties\n\n| Property   | Attribute  | Type                  | Default |\n|------------|------------|-----------------------|---------|\n| `checked`  | `checked`  | `boolean`             | false   |\n| `disabled` | `disabled` | `boolean`             | false   |\n| `label`    | `label`    | `string \\| undefined` |         |\n| `name`     | `name`     | `string`              | \"radio\" |\n| `required` | `required` | `boolean`             | false   |\n| `value`    | `value`    | `string \\| undefined` | \"on\"    |\n\n## Methods\n\n| Method              | Type                 |\n|---------------------|----------------------|\n| `checkValidity`     | `(): boolean`        |\n| `formResetCallback` | `(): void`           |\n| `handleInput`       | `(event: any): void` |\n\n## CSS Custom Properties\n\n| Property                          | Description                                      |\n|-----------------------------------|--------------------------------------------------|\n| `--sab-input-radio-active-color`  | The fill color of the radio input when checked.  |\n| `--sab-input-radio-background`    | The background color of the radio input.         |\n| `--sab-input-radio-border`        | The border color of the radio input.             |\n| `--sab-input-radio-label-size`    | The font size of the label.                      |\n| `--sab-input-radio-label-spacing` | The leading distance of the label to the input.  |\n| `--sab-input-radio-passive-color` | The fill color of the radio input when not checked. |\n| `--sab-input-radio-size`          | The size of the radio input.                     |\n",
          "groups": [
            "forms"
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InputRadio",
          "declaration": {
            "name": "InputRadio",
            "module": "src/components/forms/input-radio/input-radio.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/forms/input-text/input-text.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A text input element using the SAB style. Fully form aware.\nCan display multilie text (textarea) if configured to do so.",
          "name": "InputText",
          "cssProperties": [
            {
              "description": "The font size of the label.",
              "name": "--sab-input-text-label-size"
            },
            {
              "description": "The spacing between the label and the input.",
              "name": "--sab-input-text-label-spacing"
            },
            {
              "description": "The inner spacing of the input element.",
              "name": "--sab-input-text-spacing"
            },
            {
              "description": "The border radius of the element.",
              "name": "--sab-input-text-radius"
            },
            {
              "description": "The background color of the element.",
              "name": "--sab-input-text-background"
            },
            {
              "description": "The border color of the element.",
              "name": "--sab-input-text-border"
            },
            {
              "description": "The font color of the input element.",
              "name": "--sab-input-text-color"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "readonly": true,
              "default": "true"
            },
            {
              "kind": "field",
              "name": "#internals",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "initialValue",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "HTMLInputElement | HTMLTextAreaElement"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "label",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "'text'",
              "attribute": "name",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "required",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "multiline",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "multiline",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "value",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "formResetCallback"
            },
            {
              "kind": "method",
              "name": "checkValidity",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleInput",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "label"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "'text'",
              "fieldName": "name"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required"
            },
            {
              "name": "multiline",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "multiline"
            },
            {
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "value"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sab-input-text",
          "examples": [
            "## With optional label\n```html\n<sab-input-text label=\"With optional label\"></sab-input-text>\n```",
            "## With optional initial value\n```html\n<sab-input-text label=\"With optional initial value\" value=\"Foo\"></sab-input-text>\n```",
            "## Multiline\n```html\n<sab-input-text multiline label=\"With multiline value\"></sab-input-text>\n```",
            "## Used within a form\n```html\n<form>\n  <sab-input-text label=\"Fully form enabled component\"></sab-input-text>\n  <button type=\"submit\">Submit</button>\n  <button type=\"reset\">Reset</button>\n</form>\n```"
          ],
          "readme": "# sab-input-text\n\nA text input element using the SAB style. Fully form aware.\nCan display multilie text (textarea) if configured to do so.\n\n## Examples\n\n## With optional label\n\n```html\n<sab-input-text label=\"With optional label\"></sab-input-text>\n```\n\n## With optional initial value\n\n```html\n<sab-input-text label=\"With optional initial value\" value=\"Foo\"></sab-input-text>\n```\n\n## Multiline\n\n```html\n<sab-input-text multiline label=\"With multiline value\"></sab-input-text>\n```\n\n## Used within a form\n\n```html\n<form>\n  <sab-input-text label=\"Fully form enabled component\"></sab-input-text>\n  <button type=\"submit\">Submit</button>\n  <button type=\"reset\">Reset</button>\n</form>\n```\n\n## Properties\n\n| Property    | Attribute   | Type                  | Default |\n|-------------|-------------|-----------------------|---------|\n| `disabled`  | `disabled`  | `boolean`             | false   |\n| `input`     |             |                       |         |\n| `label`     | `label`     | `string \\| undefined` |         |\n| `multiline` | `multiline` | `boolean`             | false   |\n| `name`      | `name`      | `string`              | \"text\"  |\n| `required`  | `required`  | `boolean`             | false   |\n| `value`     | `value`     | `string \\| undefined` |         |\n\n## Methods\n\n| Method              | Type                 |\n|---------------------|----------------------|\n| `checkValidity`     | `(): boolean`        |\n| `formResetCallback` | `(): void`           |\n| `handleInput`       | `(event: any): void` |\n\n## CSS Custom Properties\n\n| Property                         | Description                                  |\n|----------------------------------|----------------------------------------------|\n| `--sab-input-text-background`    | The background color of the element.         |\n| `--sab-input-text-border`        | The border color of the element.             |\n| `--sab-input-text-color`         | The font color of the input element.         |\n| `--sab-input-text-label-size`    | The font size of the label.                  |\n| `--sab-input-text-label-spacing` | The spacing between the label and the input. |\n| `--sab-input-text-radius`        | The border radius of the element.            |\n| `--sab-input-text-spacing`       | The inner spacing of the input element.      |\n",
          "groups": [
            "forms"
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InputText",
          "declaration": {
            "name": "InputText",
            "module": "src/components/forms/input-text/input-text.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/forms/radio-menu/radio-menu.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A radio menu element using the SAB style. Fully form aware.",
          "name": "RadioMenu",
          "cssProperties": [
            {
              "description": "The font size of the label.",
              "name": "--sab-radio-menu-label-size"
            },
            {
              "description": "The spacing between label and radio buttons.",
              "name": "--sab-radio-menu-label-spacing"
            },
            {
              "description": "The spacing between the radio buttons.",
              "name": "--sab-radio-menu-option-spacing"
            }
          ],
          "slots": [
            {
              "description": "The default slot. Pass the radio buttons here.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "readonly": true,
              "default": "true"
            },
            {
              "kind": "field",
              "name": "#internals",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "initialValue",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "radios",
              "type": {
                "text": "HTMLInputElement[] | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "label",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "'radio-menu'",
              "attribute": "name",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "required",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "value",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "formResetCallback"
            },
            {
              "kind": "method",
              "name": "checkValidity",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleSlotChange"
            },
            {
              "kind": "method",
              "name": "handleInput",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "label"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "'radio-menu'",
              "fieldName": "name"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required"
            },
            {
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "value"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sab-radio-menu",
          "examples": [
            "## With optional label\n```html\n<sab-radio-menu label=\"With optional label\">\n  <sab-input-radio label=\"foo\" value=\"foo\"></sab-input-radio>\n  <sab-input-radio label=\"bar\" value=\"bar\"></sab-input-radio>\n  <sab-input-radio label=\"baz\" value=\"baz\"></sab-input-radio>\n</sab-radio-menu>\n```",
            "## With optional initial value\n```html\n<sab-radio-menu label=\"With optional initial value\">\n  <sab-input-radio label=\"foo\" value=\"foo\"></sab-input-radio>\n  <sab-input-radio checked label=\"bar\" value=\"bar\"></sab-input-radio>\n  <sab-input-radio label=\"baz\" value=\"baz\"></sab-input-radio>\n</sab-radio-menu>\n```",
            "## Used within a form\n```html\n<form>\n  <sab-radio-menu label=\"Fully form enabled component\">\n    <sab-input-radio label=\"foo\" value=\"foo\"></sab-input-radio>\n    <sab-input-radio label=\"bar\" value=\"bar\"></sab-input-radio>\n    <sab-input-radio label=\"baz\" value=\"baz\"></sab-input-radio>\n  </sab-radio-menu>\n  <button type=\"submit\">Submit</button>\n  <button type=\"reset\">Reset</button>\n</form>\n```"
          ],
          "readme": "# sab-radio-menu\n\nA radio menu element using the SAB style. Fully form aware.\n\n## Examples\n\n## With optional label\n\n```html\n<sab-radio-menu label=\"With optional label\">\n  <sab-input-radio label=\"foo\" value=\"foo\"></sab-input-radio>\n  <sab-input-radio label=\"bar\" value=\"bar\"></sab-input-radio>\n  <sab-input-radio label=\"baz\" value=\"baz\"></sab-input-radio>\n</sab-radio-menu>\n```\n\n## With optional initial value\n\n```html\n<sab-radio-menu label=\"With optional initial value\">\n  <sab-input-radio label=\"foo\" value=\"foo\"></sab-input-radio>\n  <sab-input-radio checked label=\"bar\" value=\"bar\"></sab-input-radio>\n  <sab-input-radio label=\"baz\" value=\"baz\"></sab-input-radio>\n</sab-radio-menu>\n```\n\n## Used within a form\n\n```html\n<form>\n  <sab-radio-menu label=\"Fully form enabled component\">\n    <sab-input-radio label=\"foo\" value=\"foo\"></sab-input-radio>\n    <sab-input-radio label=\"bar\" value=\"bar\"></sab-input-radio>\n    <sab-input-radio label=\"baz\" value=\"baz\"></sab-input-radio>\n  </sab-radio-menu>\n  <button type=\"submit\">Submit</button>\n  <button type=\"reset\">Reset</button>\n</form>\n```\n\n## Properties\n\n| Property   | Attribute  | Type                  | Default      |\n|------------|------------|-----------------------|--------------|\n| `disabled` | `disabled` | `boolean`             | false        |\n| `label`    | `label`    | `string \\| undefined` |              |\n| `name`     | `name`     | `string`              | \"radio-menu\" |\n| `required` | `required` | `boolean`             | false        |\n| `value`    | `value`    | `string \\| undefined` |              |\n\n## Methods\n\n| Method              | Type                 |\n|---------------------|----------------------|\n| `checkValidity`     | `(): boolean`        |\n| `formResetCallback` | `(): void`           |\n| `handleInput`       | `(event: any): void` |\n| `handleSlotChange`  | `(): void`           |\n\n## Slots\n\n| Name | Description                                    |\n|------|------------------------------------------------|\n|      | The default slot. Pass the radio buttons here. |\n\n## CSS Custom Properties\n\n| Property                          | Description                                  |\n|-----------------------------------|----------------------------------------------|\n| `--sab-radio-menu-label-size`     | The font size of the label.                  |\n| `--sab-radio-menu-label-spacing`  | The spacing between label and radio buttons. |\n| `--sab-radio-menu-option-spacing` | The spacing between the radio buttons.       |\n",
          "groups": [
            "forms"
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RadioMenu",
          "declaration": {
            "name": "RadioMenu",
            "module": "src/components/forms/radio-menu/radio-menu.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/forms/rating/rating.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A rating input element showing several smileys to collect feedback. Fully form aware.",
          "name": "Rating",
          "cssProperties": [
            {
              "description": "The font size of the label.",
              "name": "--sab-rating-label-size"
            },
            {
              "description": "The spacing between the label and the rating icons.",
              "name": "--sab-rating-label-spacing"
            },
            {
              "description": "The spacing between the rating icons.",
              "name": "--sab-rating-emoji-spacing"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "readonly": true,
              "default": "true"
            },
            {
              "kind": "field",
              "name": "#internals",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "initialValue",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "label",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "'rating'",
              "attribute": "name",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "required",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "value",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "formResetCallback"
            },
            {
              "kind": "method",
              "name": "checkValidity",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleInput",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "label"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "'rating'",
              "fieldName": "name"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required"
            },
            {
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "value"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sab-rating",
          "examples": [
            "## With optional label\n```html\n<sab-rating label=\"With optional label\"></sab-rating>\n```",
            "## With optional initial value\n```html\n<sab-rating label=\"With optional initial value\" value=\"good\"></sab-rating>\n```",
            "## Used within a form\n```html\n<form>\n  <sab-rating label=\"Fully form enabled component\"></sab-rating>\n  <button type=\"submit\">Submit</button>\n  <button type=\"reset\">Reset</button>\n</form>\n```"
          ],
          "readme": "# sab-rating\n\nA rating input element showing several smileys to collect feedback. Fully form aware.\n\n## Examples\n\n## With optional label\n\n```html\n<sab-rating label=\"With optional label\"></sab-rating>\n```\n\n## With optional initial value\n\n```html\n<sab-rating label=\"With optional initial value\" value=\"good\"></sab-rating>\n```\n\n## Used within a form\n\n```html\n<form>\n  <sab-rating label=\"Fully form enabled component\"></sab-rating>\n  <button type=\"submit\">Submit</button>\n  <button type=\"reset\">Reset</button>\n</form>\n```\n\n## Properties\n\n| Property   | Attribute  | Type                  | Default  |\n|------------|------------|-----------------------|----------|\n| `disabled` | `disabled` | `boolean`             | false    |\n| `label`    | `label`    | `string \\| undefined` |          |\n| `name`     | `name`     | `string`              | \"rating\" |\n| `required` | `required` | `boolean`             | false    |\n| `value`    | `value`    | `string \\| undefined` |          |\n\n## Methods\n\n| Method              | Type                 |\n|---------------------|----------------------|\n| `checkValidity`     | `(): boolean`        |\n| `formResetCallback` | `(): void`           |\n| `handleInput`       | `(event: any): void` |\n\n## CSS Custom Properties\n\n| Property                     | Description                                      |\n|------------------------------|--------------------------------------------------|\n| `--sab-rating-emoji-spacing` | The spacing between the rating icons.            |\n| `--sab-rating-label-size`    | The font size of the label.                      |\n| `--sab-rating-label-spacing` | The spacing between the label and the rating icons. |\n",
          "groups": [
            "forms"
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Rating",
          "declaration": {
            "name": "Rating",
            "module": "src/components/forms/rating/rating.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/functional/carousel/carousel.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A carousel component that allows to display multiple items at once and to circularily slide through them.",
          "name": "Carousel",
          "cssProperties": [
            {
              "description": "The duration of the slide animation.",
              "name": "--sab-carousel-animation-duration"
            }
          ],
          "slots": [
            {
              "description": "The items to be displayed in the carousel.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "items",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "carouselItems",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "autoplayIntervalId",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "autoplay",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enables the automatic slide animation.",
              "attribute": "autoplay",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "autoplayInterval",
              "type": {
                "text": "number"
              },
              "default": "3000",
              "description": "Once autoplay is enabled, this property defines the interval in milliseconds between the automatic slide animations.",
              "attribute": "autoplay-interval",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "visibleIndex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "The currently visible index of the carousel. Can be used to initialize the carousel with a specific item.",
              "attribute": "visible-index",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "visibleAtOnce",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "The amount of items that should be visible at once.",
              "attribute": "visible-at-once",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "slideAtOnce",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "The amount of items that should be slid at once.",
              "attribute": "slide-at-once",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "showPrevious",
              "description": "Slide to the previous set of items."
            },
            {
              "kind": "method",
              "name": "showNext",
              "description": "Slide to the next set of items."
            },
            {
              "kind": "method",
              "name": "startAutoplay",
              "description": "Starts the automatic slide animation."
            },
            {
              "kind": "method",
              "name": "stopAutoplay",
              "description": "Stops the automatic slide animation."
            },
            {
              "kind": "method",
              "name": "startAnimation",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "direction",
                  "type": {
                    "text": "typeof this.slide"
                  }
                },
                {
                  "name": "nextVisibleIndex",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "checkConfig",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "propagatePreviousSlots",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "propagateNextSlots",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "propagateVisibleSlots",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "handleItemsChanged",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "handleAnimationFinish",
              "privacy": "protected"
            }
          ],
          "attributes": [
            {
              "name": "autoplay",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enables the automatic slide animation.",
              "fieldName": "autoplay"
            },
            {
              "name": "autoplay-interval",
              "type": {
                "text": "number"
              },
              "default": "3000",
              "description": "Once autoplay is enabled, this property defines the interval in milliseconds between the automatic slide animations.",
              "fieldName": "autoplayInterval"
            },
            {
              "name": "visible-index",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "The currently visible index of the carousel. Can be used to initialize the carousel with a specific item.",
              "fieldName": "visibleIndex"
            },
            {
              "name": "visible-at-once",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "The amount of items that should be visible at once.",
              "fieldName": "visibleAtOnce"
            },
            {
              "name": "slide-at-once",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "The amount of items that should be slid at once.",
              "fieldName": "slideAtOnce"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sab-carousel",
          "examples": [
            "Double items\n```html\n<sab-carousel visible-index=\"2\" visible-at-once=\"2\" slide-at-once=\"2\">\n<div style=\"color: red\">1</div>\n<div style=\"color: blue\">2</div>\n<div style=\"color: green\">3</div>\n<div style=\"color: cyan\">4</div>\n<div style=\"color: violet\">5</div>\n<div style=\"color: grey\">6</div>\n<div style=\"color: brown\">7</div>\n<div style=\"color: orange\">8</div>\n<div style=\"color: dodgerblue\">9</div>\n</sab-carousel>\n\n<nav>\n<button onclick=\"this.parentElement.previousElementSibling.showPrevious()\">Previous</button>\n<button onclick=\"this.parentElement.previousElementSibling.showNext()\">Next</button>\n</nav>\n```",
            "Autoplay\n```html\n<sab-carousel\nautoplay\nautoplay-interval=\"1000\"\nonmouseenter=\"this.stopAutoplay()\"\nonmouseleave=\"this.showNext(); this.startAutoplay()\"\n>\n<div style=\"color: red\">1</div>\n<div style=\"color: blue\">2</div>\n<div style=\"color: green\">3</div>\n<div style=\"color: cyan\">4</div>\n<div style=\"color: violet\">5</div>\n<div style=\"color: grey\">6</div>\n<div style=\"color: brown\">7</div>\n<div style=\"color: orange\">8</div>\n<div style=\"color: dodgerblue\">9</div>\n</sab-carousel>\n\n<nav>\n<button onclick=\"this.parentElement.previousElementSibling.stopAutoplay()\">Stop</button>\n<button onclick=\"this.parentElement.previousElementSibling.startAutoplay()\">Start</button>\n</nav>\n```"
          ],
          "readme": "# sab-carousel\n\nA carousel component that allows to display multiple items at once and to circularily slide through them.\n\n## Examples\n\nDouble items\n\n```html\n<sab-carousel visible-index=\"2\" visible-at-once=\"2\" slide-at-once=\"2\">\n<div style=\"color: red\">1</div>\n<div style=\"color: blue\">2</div>\n<div style=\"color: green\">3</div>\n<div style=\"color: cyan\">4</div>\n<div style=\"color: violet\">5</div>\n<div style=\"color: grey\">6</div>\n<div style=\"color: brown\">7</div>\n<div style=\"color: orange\">8</div>\n<div style=\"color: dodgerblue\">9</div>\n</sab-carousel>\n\n<nav>\n<button onclick=\"this.parentElement.previousElementSibling.showPrevious()\">Previous</button>\n<button onclick=\"this.parentElement.previousElementSibling.showNext()\">Next</button>\n</nav>\n```\n\nAutoplay\n\n```html\n<sab-carousel\nautoplay\nautoplay-interval=\"1000\"\nonmouseenter=\"this.stopAutoplay()\"\nonmouseleave=\"this.showNext(); this.startAutoplay()\"\n>\n<div style=\"color: red\">1</div>\n<div style=\"color: blue\">2</div>\n<div style=\"color: green\">3</div>\n<div style=\"color: cyan\">4</div>\n<div style=\"color: violet\">5</div>\n<div style=\"color: grey\">6</div>\n<div style=\"color: brown\">7</div>\n<div style=\"color: orange\">8</div>\n<div style=\"color: dodgerblue\">9</div>\n</sab-carousel>\n\n<nav>\n<button onclick=\"this.parentElement.previousElementSibling.stopAutoplay()\">Stop</button>\n<button onclick=\"this.parentElement.previousElementSibling.startAutoplay()\">Start</button>\n</nav>\n```\n\n## Properties\n\n| Property           | Attribute           | Type                          | Default | Description                                      |\n|--------------------|---------------------|-------------------------------|---------|--------------------------------------------------|\n| `autoplay`         | `autoplay`          | `boolean`                     | false   | Enables the automatic slide animation.           |\n| `autoplayInterval` | `autoplay-interval` | `number`                      | 3000    | Once autoplay is enabled, this property defines the interval in milliseconds between the automatic slide animations. |\n| `isAnimating`      | `is-animating`      | `boolean`                     | false   |                                                  |\n| `slide`            | `slide`             | `\"ltr\" \\| \"rtl\" \\| undefined` |         |                                                  |\n| `slideAtOnce`      | `slide-at-once`     | `number`                      | 1       | The amount of items that should be slid at once. |\n| `visibleAtOnce`    | `visible-at-once`   | `number`                      | 1       | The amount of items that should be visible at once. |\n| `visibleIndex`     | `visible-index`     | `number`                      | 0       | The currently visible index of the carousel. Can be used to initialize the carousel with a specific item. |\n\n## Methods\n\n| Method          | Type       | Description                           |\n|-----------------|------------|---------------------------------------|\n| `showNext`      | `(): void` | Slide to the next set of items.       |\n| `showPrevious`  | `(): void` | Slide to the previous set of items.   |\n| `startAutoplay` | `(): void` | Starts the automatic slide animation. |\n| `stopAutoplay`  | `(): void` | Stops the automatic slide animation.  |\n\n## Slots\n\n| Name | Description                                |\n|------|--------------------------------------------|\n|      | The items to be displayed in the carousel. |\n\n## CSS Custom Properties\n\n| Property                            | Description                          |\n|-------------------------------------|--------------------------------------|\n| `--sab-carousel-animation-duration` | The duration of the slide animation. |\n",
          "groups": [
            "functional"
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Carousel",
          "declaration": {
            "name": "Carousel",
            "module": "src/components/functional/carousel/carousel.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/functional/feedback-sentry-submit/feedback-sentry-submit.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Submits arbitrary form data to sentry as user feedback.\nOptionally, the form data can be used to derive tags to be visualized within the Sentry dashboard.",
          "name": "FeedbackSentrySubmit",
          "members": [
            {
              "kind": "field",
              "name": "sentryDsn",
              "type": {
                "text": "string"
              },
              "attribute": "sentry-dsn",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "sentryOrganizationSlug",
              "type": {
                "text": "string"
              },
              "attribute": "sentry-organization-slug",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "sentryProjectSlug",
              "type": {
                "text": "string"
              },
              "attribute": "sentry-project-slug",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "sentryTags",
              "type": {
                "text": "string[]"
              },
              "default": "[]",
              "attribute": "sentry-tags",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "submitEventName",
              "type": {
                "text": "string"
              },
              "default": "'submit'",
              "attribute": "submit-event-name",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "submitterEmail",
              "type": {
                "text": "string"
              },
              "default": "'noreply@sab.sachsen.de'",
              "attribute": "submitter-email",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "submitterName",
              "type": {
                "text": "string"
              },
              "default": "'Anonymous'",
              "attribute": "submitter-name",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "commentKeySeparator",
              "type": {
                "text": "string"
              },
              "default": "': '",
              "attribute": "comment-key-separator",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "commentLineSeparator",
              "type": {
                "text": "string"
              },
              "default": "'\\n'",
              "attribute": "comment-line-separator",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "handleSubmit"
            },
            {
              "kind": "method",
              "name": "prepareComments",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "formData",
                  "type": {
                    "text": "FormData"
                  }
                },
                {
                  "name": "keySeparator",
                  "default": "this.commentKeySeparator"
                },
                {
                  "name": "lineSeparator",
                  "default": "this.commentLineSeparator"
                }
              ]
            },
            {
              "kind": "method",
              "name": "prepareContext",
              "return": {
                "type": {
                  "text": "Record<string, string>"
                }
              },
              "parameters": [
                {
                  "name": "formData",
                  "type": {
                    "text": "FormData"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "submitSentry",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "SubmitEvent"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "sentry-dsn",
              "type": {
                "text": "string"
              },
              "fieldName": "sentryDsn"
            },
            {
              "name": "sentry-organization-slug",
              "type": {
                "text": "string"
              },
              "fieldName": "sentryOrganizationSlug"
            },
            {
              "name": "sentry-project-slug",
              "type": {
                "text": "string"
              },
              "fieldName": "sentryProjectSlug"
            },
            {
              "name": "sentry-tags",
              "type": {
                "text": "string[]"
              },
              "default": "[]",
              "fieldName": "sentryTags"
            },
            {
              "name": "submit-event-name",
              "type": {
                "text": "string"
              },
              "default": "'submit'",
              "fieldName": "submitEventName"
            },
            {
              "name": "submitter-email",
              "type": {
                "text": "string"
              },
              "default": "'noreply@sab.sachsen.de'",
              "fieldName": "submitterEmail"
            },
            {
              "name": "submitter-name",
              "type": {
                "text": "string"
              },
              "default": "'Anonymous'",
              "fieldName": "submitterName"
            },
            {
              "name": "comment-key-separator",
              "type": {
                "text": "string"
              },
              "default": "': '",
              "fieldName": "commentKeySeparator"
            },
            {
              "name": "comment-line-separator",
              "type": {
                "text": "string"
              },
              "default": "'\\n'",
              "fieldName": "commentLineSeparator"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sab-feedback-sentry-submit",
          "examples": [
            "## Submitting form data to sentry\n```html\n<sab-feedback-sentry-submit\n  sentry-dsn=\"https://d1f5efac5516485798a2751f4b86cc77@o4504722194432000.ingest.sentry.io/4504726558146560\"\n  sentry-organization-slug=\"zalari\"\n  sentry-project-slug=\"online-portal\"\n  sentry-tags=\"category rating\"\n  submit-event-name=\"sab-feedback-box:submit\"\n  submitter-email=\"noreply@sab.sachsen.de\"\n  submitter-name=\"Anonym\"\n>\n  <sab-feedback-box slogan=\"Ihr Feedback zählt!\"></sab-feedback-box>\n</sab-feedback-sentry-submit>\n```"
          ],
          "readme": "# sab-feedback-sentry-submit\n\nSubmits arbitrary form data to sentry as user feedback.\nOptionally, the form data can be used to derive tags to be visualized within the Sentry dashboard.\n\n## Example\n\n## Submitting form data to sentry\n\n```html\n<sab-feedback-sentry-submit\n  sentry-dsn=\"https://d1f5efac5516485798a2751f4b86cc77@o4504722194432000.ingest.sentry.io/4504726558146560\"\n  sentry-organization-slug=\"zalari\"\n  sentry-project-slug=\"online-portal\"\n  sentry-tags=\"category rating\"\n  submit-event-name=\"sab-feedback-box:submit\"\n  submitter-email=\"noreply@sab.sachsen.de\"\n  submitter-name=\"Anonym\"\n>\n  <sab-feedback-box slogan=\"Ihr Feedback zählt!\"></sab-feedback-box>\n</sab-feedback-sentry-submit>\n```\n\n## Properties\n\n| Property                 | Attribute                  | Type     | Default                        |\n|--------------------------|----------------------------|----------|--------------------------------|\n| `commentKeySeparator`    | `comment-key-separator`    | `string` | \": \"                           |\n| `commentLineSeparator`   | `comment-line-separator`   | `string` | \"\\n\"                           |\n| `handleSubmit`           |                            |          | \"this.submitSentry.bind(this)\" |\n| `sentryDsn`              | `sentry-dsn`               | `string` |                                |\n| `sentryOrganizationSlug` | `sentry-organization-slug` | `string` |                                |\n| `sentryProjectSlug`      | `sentry-project-slug`      | `string` |                                |\n| `sentryTags`             | `sentry-tags`              | `object` | []                             |\n| `submitEventName`        | `submit-event-name`        | `string` | \"submit\"                       |\n| `submitterEmail`         | `submitter-email`          | `string` | \"noreply@sab.sachsen.de\"       |\n| `submitterName`          | `submitter-name`           | `string` | \"Anonymous\"                    |\n\n## Methods\n\n| Method            | Type                                             |\n|-------------------|--------------------------------------------------|\n| `prepareComments` | `(formData: any, keySeparator?: string, lineSeparator?: string): string` |\n| `prepareContext`  | `(formData: any): any`                           |\n| `submitSentry`    | `(event: any): any`                              |\n",
          "groups": [
            "functional"
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FeedbackSentrySubmit",
          "declaration": {
            "name": "FeedbackSentrySubmit",
            "module": "src/components/functional/feedback-sentry-submit/feedback-sentry-submit.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/ui/button/button.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A navigational component that can be used to trigger actions or to navigate to another page.\nThus, it can be used as a button or as a link, by passing the optional `href` attribute.",
          "name": "Button",
          "cssProperties": [
            {
              "description": "The background color of the button when it is not active.",
              "name": "--sab-button-passive-background"
            },
            {
              "description": "The border color of the button when it is not active.",
              "name": "--sab-button-passive-border-color"
            },
            {
              "description": "The text color of the button when it is not active.",
              "name": "--sab-button-passive-color"
            },
            {
              "description": "The background color of the button when it is hovered.",
              "name": "--sab-button-hover-background"
            },
            {
              "description": "The border color of the button when it is hovered.",
              "name": "--sab-button-hover-border-color"
            },
            {
              "description": "The text color of the button when it is hovered.",
              "name": "--sab-button-hover-color"
            }
          ],
          "slots": [
            {
              "type": {
                "text": "Zu den Ausschreibungen"
              },
              "description": "The default slot",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "readonly": true,
              "default": "true"
            },
            {
              "kind": "field",
              "name": "#internals",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "nowrap",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "nowrap",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "stretched",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "stretched",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "color",
              "type": {
                "text": "'dark' | 'light' | 'mono'"
              },
              "default": "'dark'",
              "attribute": "color",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'button' | 'reset' | 'submit'"
              },
              "default": "'button'",
              "attribute": "type",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "href",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "target",
              "type": {
                "text": "'_self' | '_blank' | '_parent' | '_top' | undefined"
              },
              "attribute": "target",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "handleButtonClick"
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "nowrap",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "nowrap"
            },
            {
              "name": "stretched",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "stretched"
            },
            {
              "name": "color",
              "type": {
                "text": "'dark' | 'light' | 'mono'"
              },
              "default": "'dark'",
              "fieldName": "color"
            },
            {
              "name": "type",
              "type": {
                "text": "'button' | 'reset' | 'submit'"
              },
              "default": "'button'",
              "fieldName": "type"
            },
            {
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "href"
            },
            {
              "name": "target",
              "type": {
                "text": "'_self' | '_blank' | '_parent' | '_top' | undefined"
              },
              "fieldName": "target"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sab-button",
          "examples": [
            "## Fixed width w/o ellipsis\n```html\n<sab-button style=\"width: 220px\">Zu den Förderprogrammen</sab-button>\n<sab-button nowrap style=\"width: 220px\">Zu den Förderprogrammen</sab-button>\n```",
            "## Button as submit\n```html\n<form>\n <sab-button type=\"submit\">Absenden</sab-button>\n</form>\n```",
            "## Dark button\n```html\n<sab-button>Zu den Ausschreibungen</sab-button>\n<sab-button disabled>Zu den Ausschreibungen</sab-button>\n<sab-button stretched>Zur Kundenstory</sab-button>\n```",
            "## Button as link\n```html\n<sab-button href=\"https://www.sab.sachsen.de\">Zu den Ausschreibungen</sab-button>\n```",
            "## Light button\n```html\n<sab-button color=\"light\">Zu den Ausschreibungen</sab-button>\n<sab-button color=\"light\" disabled>Zu den Ausschreibungen</sab-button>\n<sab-button color=\"light\" stretched>Zur Kundenstory</sab-button>\n```",
            "## Mono button\n```html\n<div style=\"background-color: #14504b; padding: 20px\">\n  <sab-button color=\"mono\">Zu den Ausschreibungen</sab-button>\n  <sab-button color=\"mono\" disabled>Zu den Ausschreibungen</sab-button>\n  <sab-button color=\"mono\" stretched>Zur Kundenstory</sab-button>\n</div>\n```",
            "## Button with custom styles\n```html\n<sab-button style=\"\n  --sab-button-passive-background: cyan;\n  --sab-button-passive-color: #333;\n  --sab-button-hover-background: magenta;\n  --sab-button-hover-color: #fff;\n\">\n  Zu den Ausschreibungen\n</sab-button>\n```"
          ],
          "readme": "# sab-button\n\nA navigational component that can be used to trigger actions or to navigate to another page.\nThus, it can be used as a button or as a link, by passing the optional `href` attribute.\n\n## Examples\n\n## Fixed width w/o ellipsis\n\n```html\n<sab-button style=\"width: 220px\">Zu den Förderprogrammen</sab-button>\n<sab-button nowrap style=\"width: 220px\">Zu den Förderprogrammen</sab-button>\n```\n\n## Button as submit\n\n```html\n<form>\n <sab-button type=\"submit\">Absenden</sab-button>\n</form>\n```\n\n## Dark button\n\n```html\n<sab-button>Zu den Ausschreibungen</sab-button>\n<sab-button disabled>Zu den Ausschreibungen</sab-button>\n<sab-button stretched>Zur Kundenstory</sab-button>\n```\n\n## Button as link\n\n```html\n<sab-button href=\"https://www.sab.sachsen.de\">Zu den Ausschreibungen</sab-button>\n```\n\n## Light button\n\n```html\n<sab-button color=\"light\">Zu den Ausschreibungen</sab-button>\n<sab-button color=\"light\" disabled>Zu den Ausschreibungen</sab-button>\n<sab-button color=\"light\" stretched>Zur Kundenstory</sab-button>\n```\n\n## Mono button\n\n```html\n<div style=\"background-color: #14504b; padding: 20px\">\n  <sab-button color=\"mono\">Zu den Ausschreibungen</sab-button>\n  <sab-button color=\"mono\" disabled>Zu den Ausschreibungen</sab-button>\n  <sab-button color=\"mono\" stretched>Zur Kundenstory</sab-button>\n</div>\n```\n\n## Button with custom styles\n\n```html\n<sab-button style=\"\n  --sab-button-passive-background: cyan;\n  --sab-button-passive-color: #333;\n  --sab-button-hover-background: magenta;\n  --sab-button-hover-color: #fff;\n\">\n  Zu den Ausschreibungen\n</sab-button>\n```\n\n## Properties\n\n| Property    | Attribute   | Type                                             | Default  |\n|-------------|-------------|--------------------------------------------------|----------|\n| `color`     | `color`     | `\"dark\" \\| \"light\" \\| \"mono\"`                    | \"dark\"   |\n| `disabled`  | `disabled`  | `boolean`                                        | false    |\n| `href`      | `href`      | `string \\| undefined`                            |          |\n| `nowrap`    | `nowrap`    | `boolean`                                        | false    |\n| `stretched` | `stretched` | `boolean`                                        | false    |\n| `target`    | `target`    | `\"_self\" \\| \"_blank\" \\| \"_parent\" \\| \"_top\" \\| undefined` |          |\n| `type`      | `type`      | `\"button\" \\| \"reset\" \\| \"submit\"`                | \"button\" |\n\n## Methods\n\n| Method              | Type       |\n|---------------------|------------|\n| `handleButtonClick` | `(): void` |\n\n## Slots\n\n| Name | Description      |\n|------|------------------|\n|      | The default slot |\n\n## CSS Custom Properties\n\n| Property                            | Description                                      |\n|-------------------------------------|--------------------------------------------------|\n| `--sab-button-hover-background`     | The background color of the button when it is hovered. |\n| `--sab-button-hover-border-color`   | The border color of the button when it is hovered. |\n| `--sab-button-hover-color`          | The text color of the button when it is hovered. |\n| `--sab-button-passive-background`   | The background color of the button when it is not active. |\n| `--sab-button-passive-border-color` | The border color of the button when it is not active. |\n| `--sab-button-passive-color`        | The text color of the button when it is not active. |\n",
          "groups": [
            "ui"
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Button",
          "declaration": {
            "name": "Button",
            "module": "src/components/ui/button/button.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/ui/disturber/disturber.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "The Disturber component can be used to show some important information to the user outside the layout flow.\nIt should be used wisely and not be paired with another instance of itself.",
          "name": "Disturber",
          "cssProperties": [
            {
              "description": "The background color of the component when it is not active.",
              "name": "--sab-disturber-passive-background"
            },
            {
              "description": "The text color of the component when it is not active.",
              "name": "--sab-disturber-passive-color"
            },
            {
              "description": "The font size of the component when it is not active.",
              "name": "--sab-disturber-passive-font-size"
            },
            {
              "description": "The font weight of the component when it is not active.",
              "name": "--sab-disturber-passive-font-weight"
            },
            {
              "description": "The border radius of the component when it is not active.",
              "name": "--sab-disturber-passive-radius"
            },
            {
              "description": "The rotation of the component when it is not active.",
              "name": "--sab-disturber-passive-rotation"
            },
            {
              "description": "The size of the component when it is not active.",
              "name": "--sab-disturber-passive-size"
            },
            {
              "description": "The background color of the component when it is hovered.",
              "name": "--sab-disturber-hover-background"
            },
            {
              "description": "The text color of the component when it is hovered.",
              "name": "--sab-disturber-hover-color"
            },
            {
              "description": "The font size of the component when it is hovered.",
              "name": "--sab-disturber-hover-font-size"
            },
            {
              "description": "The font weight of the component when it is hovered.",
              "name": "--sab-disturber-hover-font-weight"
            },
            {
              "description": "The border radius of the component when it is hovered.",
              "name": "--sab-disturber-hover-radius"
            },
            {
              "description": "The rotation of the component when it is hovered.",
              "name": "--sab-disturber-hover-rotation"
            },
            {
              "description": "The size of the component when it is hovered.",
              "name": "--sab-disturber-hover-size"
            }
          ],
          "slots": [
            {
              "type": {
                "text": "<em>Störer</em> Lorem ipsum dolor"
              },
              "description": "The default slot.",
              "name": ""
            },
            {
              "description": "An additional slot to be used to toggle contents.",
              "name": "extra"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "color",
              "type": {
                "text": "'dark' | 'light' | 'mono'"
              },
              "default": "'dark'",
              "attribute": "color",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "ready",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "attribute": "ready",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "color",
              "type": {
                "text": "'dark' | 'light' | 'mono'"
              },
              "default": "'dark'",
              "fieldName": "color"
            },
            {
              "name": "ready",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "ready"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sab-disturber",
          "examples": [
            "## Dark disturber\n```html\n<sab-disturber>Störer Lorem ipsum dolor</sab-disturber>\n```",
            "## Light disturber\n```html\n<sab-disturber color=\"light\">Störer Lorem ipsum dolor</sab-disturber>\n```",
            "## Mono disturber\n```html\n<sab-disturber color=\"mono\">Störer Lorem ipsum dolor</sab-disturber>\n```",
            "## Disturber with custom style\n```html\n<sab-disturber style=\"\n  --sab-disturber-passive-background: cyan;\n  --sab-disturber-passive-color: #333;\n  --sab-disturber-hover-background: magenta;\n  --sab-disturber-hover-color: #fff;\n  --sab-disturber-hover-rotation: 5deg;\n\">\n Störer Lorem ipsum dolor\n</sab-disturber>\n```"
          ],
          "readme": "# sab-disturber\n\nThe Disturber component can be used to show some important information to the user outside the layout flow.\nIt should be used wisely and not be paired with another instance of itself.\n\n## Examples\n\n## Dark disturber\n\n```html\n<sab-disturber>Störer Lorem ipsum dolor</sab-disturber>\n```\n\n## Light disturber\n\n```html\n<sab-disturber color=\"light\">Störer Lorem ipsum dolor</sab-disturber>\n```\n\n## Mono disturber\n\n```html\n<sab-disturber color=\"mono\">Störer Lorem ipsum dolor</sab-disturber>\n```\n\n## Disturber with custom style\n\n```html\n<sab-disturber style=\"\n  --sab-disturber-passive-background: cyan;\n  --sab-disturber-passive-color: #333;\n  --sab-disturber-hover-background: magenta;\n  --sab-disturber-hover-color: #fff;\n  --sab-disturber-hover-rotation: 5deg;\n\">\n Störer Lorem ipsum dolor\n</sab-disturber>\n```\n\n## Properties\n\n| Property | Attribute | Type                          | Default |\n|----------|-----------|-------------------------------|---------|\n| `color`  | `color`   | `\"dark\" \\| \"light\" \\| \"mono\"` | \"dark\"  |\n\n## Slots\n\n| Name    | Description                                      |\n|---------|--------------------------------------------------|\n|         | The default slot.                                |\n| `extra` | An additional slot to be used to toggle contents. |\n\n## CSS Custom Properties\n\n| Property                              | Description                                      |\n|---------------------------------------|--------------------------------------------------|\n| `--sab-disturber-hover-background`    | The background color of the component when it is hovered. |\n| `--sab-disturber-hover-color`         | The text color of the component when it is hovered. |\n| `--sab-disturber-hover-font-size`     | The font size of the component when it is hovered. |\n| `--sab-disturber-hover-font-weight`   | The font weight of the component when it is hovered. |\n| `--sab-disturber-hover-radius`        | The border radius of the component when it is hovered. |\n| `--sab-disturber-hover-rotation`      | The rotation of the component when it is hovered. |\n| `--sab-disturber-hover-size`          | The size of the component when it is hovered.    |\n| `--sab-disturber-passive-background`  | The background color of the component when it is not active. |\n| `--sab-disturber-passive-color`       | The text color of the component when it is not active. |\n| `--sab-disturber-passive-font-size`   | The font size of the component when it is not active. |\n| `--sab-disturber-passive-font-weight` | The font weight of the component when it is not active. |\n| `--sab-disturber-passive-radius`      | The border radius of the component when it is not active. |\n| `--sab-disturber-passive-rotation`    | The rotation of the component when it is not active. |\n| `--sab-disturber-passive-size`        | The size of the component when it is not active. |\n",
          "groups": [
            "ui"
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Disturber",
          "declaration": {
            "name": "Disturber",
            "module": "src/components/ui/disturber/disturber.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/ui/icon/icon.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "The Icon component can be used to display an icon from the sab-icons font.\nJust pass the name of the icon as the name property.",
          "name": "Icon",
          "cssProperties": [
            {
              "description": "The size of the icon.",
              "name": "--sab-icon-size"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "| 'chat'\n    | 'close'\n    | 'dismiss'\n    | 'download'\n    | 'fax'\n    | 'facebook'\n    | 'facebook-contact'\n    | 'hotline'\n    | 'info'\n    | 'intranet'\n    | 'icon-speaker'\n    | 'icon-info'\n    | 'intranet2'\n    | 'jumplink'\n    | 'kontakt'\n    | 'karte'\n    | 'leichte_sprache'\n    | 'less'\n    | 'liste'\n    | 'link_extern'\n    | 'link_intern'\n    | 'LinkedIn'\n    | 'linkedin-contact'\n    | 'mail'\n    | 'menu-close'\n    | 'menu-open'\n    | 'more'\n    | 'pfeil-l'\n    | 'phone'\n    | 'pdf'\n    | 'pfeil-r'\n    | 'pin'\n    | 'play'\n    | 'quote-2'\n    | 'schritt_1'\n    | 'schritt_2'\n    | 'schritt_3'\n    | 'sprungmarke'\n    | 'suche_pfeil'\n    | 'suche'\n    | 'twitter'\n    | 'twitter-contact'\n    | 'user'\n    | 'xing'\n    | 'xing-contact'\n    | 'YouTube'\n    | 'youtube-contact'\n    | 'zoom'"
              },
              "attribute": "name",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "| 'chat'\n    | 'close'\n    | 'dismiss'\n    | 'download'\n    | 'fax'\n    | 'facebook'\n    | 'facebook-contact'\n    | 'hotline'\n    | 'info'\n    | 'intranet'\n    | 'icon-speaker'\n    | 'icon-info'\n    | 'intranet2'\n    | 'jumplink'\n    | 'kontakt'\n    | 'karte'\n    | 'leichte_sprache'\n    | 'less'\n    | 'liste'\n    | 'link_extern'\n    | 'link_intern'\n    | 'LinkedIn'\n    | 'linkedin-contact'\n    | 'mail'\n    | 'menu-close'\n    | 'menu-open'\n    | 'more'\n    | 'pfeil-l'\n    | 'phone'\n    | 'pdf'\n    | 'pfeil-r'\n    | 'pin'\n    | 'play'\n    | 'quote-2'\n    | 'schritt_1'\n    | 'schritt_2'\n    | 'schritt_3'\n    | 'sprungmarke'\n    | 'suche_pfeil'\n    | 'suche'\n    | 'twitter'\n    | 'twitter-contact'\n    | 'user'\n    | 'xing'\n    | 'xing-contact'\n    | 'YouTube'\n    | 'youtube-contact'\n    | 'zoom'"
              },
              "fieldName": "name"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sab-icon",
          "examples": [
            "## Example icon\n```html\n<sab-icon name=\"close\" style=\"--sab-icon-size: 32px\"></sab-icon>\n```"
          ],
          "readme": "# sab-icon\n\nThe Icon component can be used to display an icon from the sab-icons font.\nJust pass the name of the icon as the name property.\n\n## Example\n\n## Example icon\n\n```html\n<sab-icon name=\"close\" style=\"--sab-icon-size: 32px\"></sab-icon>\n```\n\n## Properties\n\n| Property | Attribute | Type                                             |\n|----------|-----------|--------------------------------------------------|\n| `name`   | `name`    | `\"chat\" \\| \"close\" \\| \"dismiss\" \\| \"download\" \\| \"fax\" \\| \"facebook\" \\| \"facebook-contact\" \\| \"hotline\" \\| \"info\" \\| \"intranet\" \\| \"icon-speaker\" \\| \"icon-info\" \\| \"intranet2\" \\| \"jumplink\" \\| ... 33 more ... \\| \"zoom\"` |\n\n## CSS Custom Properties\n\n| Property          | Description           |\n|-------------------|-----------------------|\n| `--sab-icon-size` | The size of the icon. |\n",
          "groups": [
            "ui"
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Icon",
          "declaration": {
            "name": "Icon",
            "module": "src/components/ui/icon/icon.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/ui/icon-button/icon-button.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Can be used to display an icon as an undecorated button.",
          "name": "IconButton",
          "cssProperties": [
            {
              "description": "The spacing around the icon within the button.",
              "name": "--sab-icon-button-spacing"
            }
          ],
          "slots": [
            {
              "description": "The default slot.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'button' | 'submit' | 'reset'"
              },
              "default": "'button'",
              "attribute": "type",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "type",
              "type": {
                "text": "'button' | 'submit' | 'reset'"
              },
              "default": "'button'",
              "fieldName": "type"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sab-icon-button",
          "examples": [
            "## Example icon button\n```html\n<sab-icon-button style=\"--sab-icon-size: 32px; --sab-icon-button-spacing: 4px;\">\n  <sab-icon name=\"close\"></sab-icon>\n</sab-icon-button>\n```"
          ],
          "readme": "# sab-icon-button\n\nCan be used to display an icon as an undecorated button.\n\n## Example\n\n## Example icon button\n\n```html\n<sab-icon-button style=\"--sab-icon-size: 32px; --sab-icon-button-spacing: 4px;\">\n  <sab-icon name=\"close\"></sab-icon>\n</sab-icon-button>\n```\n\n## Properties\n\n| Property | Attribute | Type                              | Default  |\n|----------|-----------|-----------------------------------|----------|\n| `type`   | `type`    | `\"button\" \\| \"submit\" \\| \"reset\"` | \"button\" |\n\n## Slots\n\n| Name | Description       |\n|------|-------------------|\n|      | The default slot. |\n\n## CSS Custom Properties\n\n| Property                    | Description                                    |\n|-----------------------------|------------------------------------------------|\n| `--sab-icon-button-spacing` | The spacing around the icon within the button. |\n",
          "groups": [
            "ui"
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "IconButton",
          "declaration": {
            "name": "IconButton",
            "module": "src/components/ui/icon-button/icon-button.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/ui/rating-emoji/rating-emoji.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A single emoji rating element.\nMust be configured with the `level` attribute.",
          "name": "RatingEmoji",
          "cssProperties": [
            {
              "description": "The size of the emoji.",
              "name": "--sab-rating-emoji-size"
            },
            {
              "description": "The background color of the emoji.",
              "name": "--sab-rating-emoji-background"
            },
            {
              "description": "The foreground color of the emoji.",
              "name": "--sab-rating-emoji-foreground"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "level",
              "type": {
                "text": "'like' | 'good' | 'medium' | 'bad' | 'dislike'"
              },
              "attribute": "level",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "level",
              "type": {
                "text": "'like' | 'good' | 'medium' | 'bad' | 'dislike'"
              },
              "fieldName": "level"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sab-rating-emoji",
          "examples": [
            "## All rating emojis\n```html\n<sab-rating-emoji level=\"like\"></sab-rating-emoji>\n<sab-rating-emoji level=\"good\"></sab-rating-emoji>\n<sab-rating-emoji level=\"medium\"></sab-rating-emoji>\n<sab-rating-emoji level=\"bad\"></sab-rating-emoji>\n<sab-rating-emoji level=\"dislike\"></sab-rating-emoji>\n```",
            "## Custom colored rating emojis\n```html\n<sab-rating-emoji style=\"--sab-rating-emoji-background: #d9d9d9; --sab-rating-emoji-foreground: #878787;\" level=\"like\"></sab-rating-emoji>\n<sab-rating-emoji style=\"--sab-rating-emoji-background: #d9d9d9; --sab-rating-emoji-foreground: #878787;\" level=\"good\"></sab-rating-emoji>\n<sab-rating-emoji style=\"--sab-rating-emoji-background: #d9d9d9; --sab-rating-emoji-foreground: #878787;\" level=\"medium\"></sab-rating-emoji>\n<sab-rating-emoji style=\"--sab-rating-emoji-background: #d9d9d9; --sab-rating-emoji-foreground: #878787;\" level=\"bad\"></sab-rating-emoji>\n<sab-rating-emoji style=\"--sab-rating-emoji-background: #d9d9d9; --sab-rating-emoji-foreground: #878787;\" level=\"dislike\"></sab-rating-emoji>\n```"
          ],
          "readme": "# sab-rating-emoji\n\nA single emoji rating element.\nMust be configured with the `level` attribute.\n\n## Examples\n\n## All rating emojis\n\n```html\n<sab-rating-emoji level=\"like\"></sab-rating-emoji>\n<sab-rating-emoji level=\"good\"></sab-rating-emoji>\n<sab-rating-emoji level=\"medium\"></sab-rating-emoji>\n<sab-rating-emoji level=\"bad\"></sab-rating-emoji>\n<sab-rating-emoji level=\"dislike\"></sab-rating-emoji>\n```\n\n## Custom colored rating emojis\n\n```html\n<sab-rating-emoji style=\"--sab-rating-emoji-background: #d9d9d9; --sab-rating-emoji-foreground: #878787;\" level=\"like\"></sab-rating-emoji>\n<sab-rating-emoji style=\"--sab-rating-emoji-background: #d9d9d9; --sab-rating-emoji-foreground: #878787;\" level=\"good\"></sab-rating-emoji>\n<sab-rating-emoji style=\"--sab-rating-emoji-background: #d9d9d9; --sab-rating-emoji-foreground: #878787;\" level=\"medium\"></sab-rating-emoji>\n<sab-rating-emoji style=\"--sab-rating-emoji-background: #d9d9d9; --sab-rating-emoji-foreground: #878787;\" level=\"bad\"></sab-rating-emoji>\n<sab-rating-emoji style=\"--sab-rating-emoji-background: #d9d9d9; --sab-rating-emoji-foreground: #878787;\" level=\"dislike\"></sab-rating-emoji>\n```\n\n## Properties\n\n| Property | Attribute | Type                                             |\n|----------|-----------|--------------------------------------------------|\n| `level`  | `level`   | `\"like\" \\| \"good\" \\| \"medium\" \\| \"bad\" \\| \"dislike\"` |\n\n## CSS Custom Properties\n\n| Property                        | Description                        |\n|---------------------------------|------------------------------------|\n| `--sab-rating-emoji-background` | The background color of the emoji. |\n| `--sab-rating-emoji-foreground` | The foreground color of the emoji. |\n| `--sab-rating-emoji-size`       | The size of the emoji.             |\n",
          "groups": [
            "ui"
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RatingEmoji",
          "declaration": {
            "name": "RatingEmoji",
            "module": "src/components/ui/rating-emoji/rating-emoji.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/widgets/adbox/adbox.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "This widget component can be used to display an advertisement box.",
          "name": "AdBox",
          "cssProperties": [
            {
              "description": "The background color of the adbox.",
              "name": "--sab-adbox-background"
            },
            {
              "description": "The text color of the adbox.",
              "name": "--sab-adbox-color"
            },
            {
              "description": "The headline color of the adbox.",
              "name": "--sab-adbox-headline-color"
            },
            {
              "description": "The shadow color of the adbox.",
              "name": "--sab-adbox-shadow"
            }
          ],
          "slots": [
            {
              "description": "The default slot.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "caption",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "caption",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "headline",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "headline",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "link",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "link",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "label",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "caption",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "caption"
            },
            {
              "name": "headline",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "headline"
            },
            {
              "name": "link",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "link"
            },
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "label"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sab-adbox",
          "examples": [],
          "readme": "# sab-adbox\n\nThis widget component can be used to display an advertisement box.\n\n## Properties\n\n| Property   | Attribute  | Type                  |\n|------------|------------|-----------------------|\n| `caption`  | `caption`  | `string \\| undefined` |\n| `headline` | `headline` | `string \\| undefined` |\n| `label`    | `label`    | `string \\| undefined` |\n| `link`     | `link`     | `string \\| undefined` |\n\n## Slots\n\n| Name | Description       |\n|------|-------------------|\n|      | The default slot. |\n\n## CSS Custom Properties\n\n| Property                     | Description                        |\n|------------------------------|------------------------------------|\n| `--sab-adbox-background`     | The background color of the adbox. |\n| `--sab-adbox-color`          | The text color of the adbox.       |\n| `--sab-adbox-headline-color` | The headline color of the adbox.   |\n| `--sab-adbox-shadow`         | The shadow color of the adbox.     |\n",
          "groups": [
            "widgets"
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AdBox",
          "declaration": {
            "name": "AdBox",
            "module": "src/components/widgets/adbox/adbox.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/widgets/adbox-wrapper/adbox-wrapper.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "This widget component orchestrates multiple adboxes.",
          "name": "AdBoxWrapper",
          "cssProperties": [
            {
              "description": "The background color of the adbox wrapper.",
              "name": "--sab-adbox-wrapper-background"
            },
            {
              "description": "The text color of the adbox wrapper.",
              "name": "--sab-adbox-wrapper-color"
            }
          ],
          "slots": [
            {
              "description": "The default slot getting the adboxes passed in.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "close",
              "type": {
                "text": "HTMLButtonElement"
              }
            },
            {
              "kind": "field",
              "name": "headline",
              "type": {
                "text": "string | undefined"
              },
              "default": "''",
              "attribute": "headline",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "visible",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "attribute": "visible",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "handleClose"
            }
          ],
          "attributes": [
            {
              "name": "headline",
              "type": {
                "text": "string | undefined"
              },
              "default": "''",
              "fieldName": "headline"
            },
            {
              "name": "visible",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "visible"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sab-adbox-wrapper",
          "examples": [
            "## Example adbox wrapper\n```html\n<sab-adbox-wrapper\n  visible\n  headline=\"Unser Förderangebot für Sie:\"\n>\n  <sab-adbox\n    caption=\"Familienwohnen\"\n    link=\"\"\n    label=\"Zum Programm\"\n  >\n    <h2>Baufinanzierung mit der SAB</h2>\n    <div>​​​​​​​Familienwohnen mit 0,75% eff. Jahreszins</div>\n  </sab-adbox>\n\n  <sab-adbox\n    caption=\"GRW\"\n    link=\"\"\n    label=\"Zum Programm\"\n  >\n    <h2>Investieren in Sachsen</h2>\n    <div>mit dem GRW-Zuschuss &amp; den SAB-Sachsenkredien</div>\n  </sab-adbox>\n\n  <sab-adbox\n    caption=\"Digitalisierung Zuschuss\"\n    link=\"\"\n    label=\"Zum Programm\"\n  >\n    <h2>Investition in die Zukunft</h2>\n    <div>mit dem Förderprogramm \"Digitalisierung Zuschuss\"</div>\n  </sab-adbox>\n</sab-adbox-wrapper>\n```"
          ],
          "readme": "# sab-adbox-wrapper\n\nThis widget component orchestrates multiple adboxes.\n\n## Example\n\n## Example adbox wrapper\n\n```html\n<sab-adbox-wrapper\n  visible\n  headline=\"Unser Förderangebot für Sie:\"\n>\n  <sab-adbox\n    caption=\"Familienwohnen\"\n    link=\"\"\n    label=\"Zum Programm\"\n  >\n    <h2>Baufinanzierung mit der SAB</h2>\n    <div>​​​​​​​Familienwohnen mit 0,75% eff. Jahreszins</div>\n  </sab-adbox>\n\n  <sab-adbox\n    caption=\"GRW\"\n    link=\"\"\n    label=\"Zum Programm\"\n  >\n    <h2>Investieren in Sachsen</h2>\n    <div>mit dem GRW-Zuschuss &amp; den SAB-Sachsenkredien</div>\n  </sab-adbox>\n\n  <sab-adbox\n    caption=\"Digitalisierung Zuschuss\"\n    link=\"\"\n    label=\"Zum Programm\"\n  >\n    <h2>Investition in die Zukunft</h2>\n    <div>mit dem Förderprogramm \"Digitalisierung Zuschuss\"</div>\n  </sab-adbox>\n</sab-adbox-wrapper>\n```\n\n## Properties\n\n| Property   | Attribute  | Type                  | Default |\n|------------|------------|-----------------------|---------|\n| `close`    |            |                       |         |\n| `headline` | `headline` | `string \\| undefined` | \"\"      |\n| `visible`  | `visible`  | `boolean`             | true    |\n\n## Methods\n\n| Method        | Type       |\n|---------------|------------|\n| `handleClose` | `(): void` |\n\n## Slots\n\n| Name | Description                                     |\n|------|-------------------------------------------------|\n|      | The default slot getting the adboxes passed in. |\n\n## CSS Custom Properties\n\n| Property                         | Description                                |\n|----------------------------------|--------------------------------------------|\n| `--sab-adbox-wrapper-background` | The background color of the adbox wrapper. |\n| `--sab-adbox-wrapper-color`      | The text color of the adbox wrapper.       |\n",
          "groups": [
            "widgets"
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AdBoxWrapper",
          "declaration": {
            "name": "AdBoxWrapper",
            "module": "src/components/widgets/adbox-wrapper/adbox-wrapper.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/widgets/language-select/language-select.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A convenience component that can be used to select a language.\nShows either a dropdown or an inline list of links generated from a given set of locales.",
          "name": "LanguageSelect",
          "members": [
            {
              "kind": "field",
              "name": "display",
              "type": {
                "text": "'inline' | 'dropdown'"
              },
              "default": "'inline'",
              "attribute": "display",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "currentLocale",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "current-locale",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "languagePath",
              "type": {
                "text": "string"
              },
              "default": "'/%s/index.html'",
              "attribute": "language-path",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "languagePathPlaceholder",
              "type": {
                "text": "string"
              },
              "default": "'%s'",
              "attribute": "language-path-placeholder",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "supportedLocales",
              "type": {
                "text": "string[]"
              },
              "default": "[]",
              "attribute": "supported-locales",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "getLabelForLocale",
              "parameters": [
                {
                  "name": "locale",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getPathForLocale",
              "parameters": [
                {
                  "name": "locale",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleLanguageChange",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "display",
              "type": {
                "text": "'inline' | 'dropdown'"
              },
              "default": "'inline'",
              "fieldName": "display"
            },
            {
              "name": "current-locale",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "currentLocale"
            },
            {
              "name": "language-path",
              "type": {
                "text": "string"
              },
              "default": "'/%s/index.html'",
              "fieldName": "languagePath"
            },
            {
              "name": "language-path-placeholder",
              "type": {
                "text": "string"
              },
              "default": "'%s'",
              "fieldName": "languagePathPlaceholder"
            },
            {
              "name": "supported-locales",
              "type": {
                "text": "string[]"
              },
              "default": "[]",
              "fieldName": "supportedLocales"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sab-language-select",
          "examples": [
            "## Inline\n```html\n<sab-language-select\n  display=\"inline\"\n  current-locale=\"en_US\"\n  language-path=\"/c/portal/update_language?p_l_id=1433&redirect=%2Ffoerderportal&languageId=%s\"\n  supported-locales=\"cs_CZ de_DE en_US es_ES fr_FR\"\n></sab-language-select>\n```",
            "## Dropdown\n```html\n<sab-language-select\n  display=\"dropdown\"\n  current-locale=\"de\"\n  supported-locales=\"cs de en es fr\"\n></sab-language-select>\n```"
          ],
          "readme": "# sab-language-select\n\nA convenience component that can be used to select a language.\nShows either a dropdown or an inline list of links generated from a given set of locales.\n\n## Examples\n\n## Inline\n\n```html\n<sab-language-select\n  display=\"inline\"\n  current-locale=\"en_US\"\n  language-path=\"/c/portal/update_language?p_l_id=1433&redirect=%2Ffoerderportal&languageId=%s\"\n  supported-locales=\"cs_CZ de_DE en_US es_ES fr_FR\"\n></sab-language-select>\n```\n\n## Dropdown\n\n```html\n<sab-language-select\n  display=\"dropdown\"\n  current-locale=\"de\"\n  supported-locales=\"cs de en es fr\"\n></sab-language-select>\n```\n\n## Properties\n\n| Property                  | Attribute                   | Type                     | Default          |\n|---------------------------|-----------------------------|--------------------------|------------------|\n| `currentLocale`           | `current-locale`            | `string \\| undefined`    |                  |\n| `display`                 | `display`                   | `\"inline\" \\| \"dropdown\"` | \"inline\"         |\n| `languagePath`            | `language-path`             | `string`                 | \"/%s/index.html\" |\n| `languagePathPlaceholder` | `language-path-placeholder` | `string`                 | \"%s\"             |\n| `supportedLocales`        | `supported-locales`         | `object`                 | []               |\n\n## Methods\n\n| Method                 | Type                       |\n|------------------------|----------------------------|\n| `getLabelForLocale`    | `(locale: string): string` |\n| `getPathForLocale`     | `(locale: string): any`    |\n| `handleLanguageChange` | `(event: any): void`       |\n",
          "groups": [
            "widgets"
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LanguageSelect",
          "declaration": {
            "name": "LanguageSelect",
            "module": "src/components/widgets/language-select/language-select.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/widgets/teaser/teaser.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A teaser element to be used e.g. inside a carousel.",
          "name": "Teaser",
          "cssProperties": [
            {
              "description": "The background color of the teaser.",
              "name": "--sab-teaser-background"
            },
            {
              "description": "The text color of the teaser.",
              "name": "--sab-teaser-color"
            }
          ],
          "slots": [
            {
              "type": {
                "text": "<sab-button stretched slot=\"action\" color=\"mono\" href=\"link.html\">Zum Programm</sab-button>"
              },
              "description": "A button to be displayed in the teaser.",
              "name": "action"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "headline",
              "type": {
                "text": "string"
              },
              "attribute": "headline",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "text",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "href",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "src",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "src",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "renderDecoration",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            }
          ],
          "attributes": [
            {
              "name": "headline",
              "type": {
                "text": "string"
              },
              "fieldName": "headline"
            },
            {
              "name": "text",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "text"
            },
            {
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "href"
            },
            {
              "name": "src",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "src"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sab-teaser",
          "examples": [
            "## Whole teaser is linked\n```html\n<sab-teaser headline=\"Some Teaser\"\n  href=\"link.html\"\n  src=\"https://picsum.photos/id/9/5000/3269.jpg\"\n>\n</sab-teaser>\n```",
            "## Teaser carries a button\nUsing the action slot shallnot be mixed with linked teasers!\n```html\n<sab-teaser headline=\"Some Teaser\"\n  src=\"https://picsum.photos/id/9/5000/3269.jpg\"\n>\n  <sab-button slot=\"action\" color=\"mono\" stretched href=\"link.html\">\n    Button\n  </sab-button>\n</sab-teaser>\n```"
          ],
          "readme": "# sab-teaser\n\nA teaser element to be used e.g. inside a carousel.\n\n## Examples\n\n## Whole teaser is linked\n\n```html\n<sab-teaser headline=\"Some Teaser\"\n  href=\"link.html\"\n  src=\"https://picsum.photos/id/9/5000/3269.jpg\"\n>\n</sab-teaser>\n```\n\n## Teaser carries a button\nUsing the action slot shallnot be mixed with linked teasers!\n\n```html\n<sab-teaser headline=\"Some Teaser\"\n  src=\"https://picsum.photos/id/9/5000/3269.jpg\"\n>\n  <sab-button slot=\"action\" color=\"mono\" stretched href=\"link.html\">\n    Button\n  </sab-button>\n</sab-teaser>\n```\n\n## Properties\n\n| Property   | Attribute  | Type                  |\n|------------|------------|-----------------------|\n| `headline` | `headline` | `string`              |\n| `href`     | `href`     | `string \\| undefined` |\n| `src`      | `src`      | `string \\| undefined` |\n| `text`     | `text`     | `string \\| undefined` |\n\n## Slots\n\n| Name     | Description                             |\n|----------|-----------------------------------------|\n| `action` | A button to be displayed in the teaser. |\n\n## CSS Custom Properties\n\n| Property                  | Description                         |\n|---------------------------|-------------------------------------|\n| `--sab-teaser-background` | The background color of the teaser. |\n| `--sab-teaser-color`      | The text color of the teaser.       |\n",
          "groups": [
            "widgets"
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Teaser",
          "declaration": {
            "name": "Teaser",
            "module": "src/components/widgets/teaser/teaser.component.ts"
          }
        }
      ]
    }
  ]
}
