{
  "version": 3,
  "sources": ["../node_modules/prismjs/prism.js", "../node_modules/urlpattern-polyfill/dist/urlpattern.js", "../node_modules/urlpattern-polyfill/index.js", "../src/components/features/markdown-example/markdown-example.component.ts", "../src/mixins/color-schemable.mixin.ts", "../src/utils/config.utils.ts", "../src/utils/state.utils.ts", "../src/utils/color-scheme.utils.ts", "../src/components/features/markdown-example/markdown-example.component.scss", "../src/components/features/navigation/navigation/navigation.component.ts", "../src/components/features/navigation/navigation/navigation.component.scss", "../src/components/features/navigation/navigation-item/navigation-item.component.ts", "../src/components/features/navigation/navigation-item/navigation-item.component.scss", "../src/components/features/navigation/navigation-search/navigation-search.component.ts", "../src/components/features/navigation/navigation-search/navigation-search.component.scss", "../src/components/features/preview/preview.component.ts", "../src/utils/decorator.utils.ts", "../src/components/features/preview/preview.component.scss", "../src/components/features/readme/readme.component.ts", "../node_modules/marked/src/defaults.ts", "../node_modules/marked/src/helpers.ts", "../node_modules/marked/src/Tokenizer.ts", "../node_modules/marked/src/rules.ts", "../node_modules/marked/src/Lexer.ts", "../node_modules/marked/src/Renderer.ts", "../node_modules/marked/src/TextRenderer.ts", "../node_modules/marked/src/Parser.ts", "../node_modules/marked/src/Hooks.ts", "../node_modules/marked/src/Instance.ts", "../node_modules/marked/src/marked.ts", "../node_modules/marked-highlight/src/index.js", "../src/utils/markdown.utils.ts", "../src/components/features/readme/readme.component.scss", "../src/components/features/readme-frame/readme-frame.component.ts", "../src/components/features/readme-frame/readme-frame.component.scss", "../src/components/features/stage/stage.component.ts", "../src/utils/log.utils.ts", "../src/utils/plugin.utils.ts", "../src/components/features/stage/stage.component.scss", "../src/components/features/toggle-color-scheme/toggle-color-scheme.component.ts", "../src/components/features/toggle-color-scheme/toggle-color-scheme.component.scss", "../src/components/features/toggle-sidebar/toggle-sidebar.component.ts", "../src/components/features/toggle-sidebar/toggle-sidebar.component.scss", "../src/components/features/topbar/topbar.component.ts", "../src/components/features/topbar/topbar.component.scss", "../src/components/forms/input-checkbox/input-checkbox.component.ts", "../src/mixins/editable.mixin.ts", "../src/mixins/editable.mixin.scss", "../src/components/forms/input-checkbox/input-checkbox.component.scss", "../src/components/forms/input-code/input-code.component.ts", "../node_modules/lit-code/build/lit-code.mjs", "../src/components/forms/input-code/input-code.component.scss", "../src/components/forms/input-key-value/input-key-value.component.ts", "../src/components/forms/input-key-value/input-key-value.component.scss", "../src/components/forms/input-key-value-pairs/input-key-value-pairs.component.ts", "../src/components/forms/input-key-value-pairs/input-key-value-pairs.component.scss", "../src/components/forms/input-number/input-number.component.ts", "../src/components/forms/input-number/input-number.component.scss", "../src/components/forms/input-radio/input-radio.component.ts", "../src/components/forms/input-radio/input-radio.component.scss", "../src/components/forms/input-select/input-select-option.component.ts", "../src/components/forms/input-select/input-select.component.ts", "../src/components/forms/input-select/input-select.component.scss", "../src/components/forms/input-text/input-text.component.ts", "../src/components/forms/input-text/input-text.component.scss", "../src/components/layout/aside/aside.component.ts", "../src/components/layout/aside/aside.component.scss", "../src/components/layout/layout/layout.component.ts", "../src/components/layout/layout/layout.component.scss", "../src/components/layout/main/main.component.ts", "../src/components/layout/main/main.component.scss", "../src/components/root/root.component.ts", "../src/utils/navigation.utils.ts", "../src/parsers/cem/utils.ts", "../src/parsers/cem/1.0.0/cem-field.ts", "../src/parsers/cem/1.0.0/cem-slot.ts", "../src/parsers/cem/1.0.0/cem-element.ts", "../src/parsers/cem/1.0.0/cem-parser.ts", "../src/parsers/cem/parse.ts", "../src/utils/manifest.utils.ts", "../src/utils/router.utils.ts", "../src/components/root/root.routes.ts", "../src/components/root/root.component.scss", "../src/components/root/root-navigation/root-navigation.component.ts", "../src/components/root/root-navigation/root-navigation.component.scss", "../src/components/root/root-splash/root-splash.component.ts", "../src/components/root/root-splash/root-splash.component.scss", "../src/components/ui/button/button.component.ts", "../src/components/ui/button/button.component.scss", "../src/components/ui/code/code.component.ts", "../src/components/ui/code/code.component.scss", "../src/components/ui/icon/icon.component.ts", "../src/components/ui/icon/icon.component.scss", "../src/components/ui/tabs/tabs.component.ts", "../src/components/ui/tabs/tabs.component.scss", "../src/components/ui/title/title.component.ts", "../src/components/ui/title/title.component.scss", "../src/plugins/preview/preview-editor-link/preview-editor-link.plugin.ts", "../src/utils/compression.utils.ts", "../src/utils/dom.utils.ts", "../src/utils/parser.utils.ts", "../src/plugins/preview/preview-editor-link/preview-editor-link.utils.ts", "../src/plugins/preview/preview-editor-link/preview-editor-link.plugin.scss", "../src/plugins/preview/preview-editor-link/preview-editor-link-hint/preview-editor-link-hint.component.ts", "../src/plugins/preview/preview-editor-link/preview-editor-link-hint/preview-editor-link-hint.component.scss", "../src/plugins/preview/preview-simulate-viewports/preview-simulate-viewports.plugin.ts", "../src/plugins/preview/preview-simulate-viewports/preview-simulate-viewports.plugin.scss", "../src/plugins/stage/stage-editor/stage-editor.plugin.ts", "../src/utils/debounce.utils.ts", "../src/plugins/stage/stage-editor/stage-editor.utils.ts", "../src/plugins/stage/stage-editor/stage-editor.plugin.scss", "../src/plugins/stage/stage-editor/stage-editor-controls/stage-editor-controls.component.ts", "../src/plugins/stage/stage-editor/stage-editor-controls/stage-editor-controls.component.scss", "../node_modules/@open-wc/lit-helpers/src/spread.ts", "../src/plugins/stage/stage-editor/stage-editor-preview/stage-editor-preview.component.ts", "../src/plugins/stage/stage-editor/stage-editor-preview/stage-editor-preview.component.scss", "../src/plugins/stage/stage-examples/stage-examples.plugin.ts", "../src/plugins/stage/stage-examples/stage-examples.plugin.scss", "../src/plugins/stage/stage-readme/stage-readme.plugin.ts", "../src/plugins/stage/stage-readme/stage-readme.plugin.scss", "../src/plugins/topbar/topbar-preview-editor-link-toggle/topbar-preview-editor-link-toggle.plugin.ts", "../src/plugins/topbar/topbar-preview-editor-link-toggle/topbar-preview-editor-link-toggle.plugin.scss"],
  "sourceRoot": "src",
  "sourcesContent": ["\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism\u2019s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you\u2019re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar LOADING_MESSAGE = 'Loading\u2026';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '\u2716 Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '\u2716 Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\t/**\n\t * Loads the given file.\n\t *\n\t * @param {string} src The URL or path of the source file to load.\n\t * @param {(result: string) => void} success\n\t * @param {(reason: string) => void} error\n\t */\n\tfunction loadFile(src, success, error) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', src, true);\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState == 4) {\n\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\tsuccess(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\terror(FAILURE_MESSAGE(xhr.status, xhr.statusText));\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror(FAILURE_EMPTY_MESSAGE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.send(null);\n\t}\n\n\t/**\n\t * Parses the given range.\n\t *\n\t * This returns a range with inclusive ends.\n\t *\n\t * @param {string | null | undefined} range\n\t * @returns {[number, number | undefined] | undefined}\n\t */\n\tfunction parseRange(range) {\n\t\tvar m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || '');\n\t\tif (m) {\n\t\t\tvar start = Number(m[1]);\n\t\t\tvar comma = m[2];\n\t\t\tvar end = m[3];\n\n\t\t\tif (!comma) {\n\t\t\t\treturn [start, start];\n\t\t\t}\n\t\t\tif (!end) {\n\t\t\t\treturn [start, undefined];\n\t\t\t}\n\t\t\treturn [start, Number(end)];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tPrism.util.setLanguage(code, language);\n\t\t\tPrism.util.setLanguage(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tloadFile(\n\t\t\t\tsrc,\n\t\t\t\tfunction (text) {\n\t\t\t\t\t// mark as loaded\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t// handle data-range\n\t\t\t\t\tvar range = parseRange(pre.getAttribute('data-range'));\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tvar lines = text.split(/\\r\\n?|\\n/g);\n\n\t\t\t\t\t\t// the range is one-based and inclusive on both ends\n\t\t\t\t\t\tvar start = range[0];\n\t\t\t\t\t\tvar end = range[1] == null ? lines.length : range[1];\n\n\t\t\t\t\t\tif (start < 0) { start += lines.length; }\n\t\t\t\t\t\tstart = Math.max(0, Math.min(start - 1, lines.length));\n\t\t\t\t\t\tif (end < 0) { end += lines.length; }\n\t\t\t\t\t\tend = Math.max(0, Math.min(end, lines.length));\n\n\t\t\t\t\t\ttext = lines.slice(start, end).join('\\n');\n\n\t\t\t\t\t\t// add data-start for line numbers\n\t\t\t\t\t\tif (!pre.hasAttribute('data-start')) {\n\t\t\t\t\t\t\tpre.setAttribute('data-start', String(start + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// highlight code\n\t\t\t\t\tcode.textContent = text;\n\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t},\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// mark as failed\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\tcode.textContent = error;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n\n}());\n", "var k=class{type=3;name=\"\";prefix=\"\";value=\"\";suffix=\"\";modifier=3;constructor(t,r,n,o,c,l){this.type=t,this.name=r,this.prefix=n,this.value=o,this.suffix=c,this.modifier=l}hasCustomName(){return this.name!==\"\"&&typeof this.name!=\"number\"}},Pe=/[$_\\p{ID_Start}]/u,Se=/[$_\\u200C\\u200D\\p{ID_Continue}]/u,M=\".*\";function ke(e,t){return(t?/^[\\x00-\\xFF]*$/:/^[\\x00-\\x7F]*$/).test(e)}function v(e,t=!1){let r=[],n=0;for(;n<e.length;){let o=e[n],c=function(l){if(!t)throw new TypeError(l);r.push({type:\"INVALID_CHAR\",index:n,value:e[n++]})};if(o===\"*\"){r.push({type:\"ASTERISK\",index:n,value:e[n++]});continue}if(o===\"+\"||o===\"?\"){r.push({type:\"OTHER_MODIFIER\",index:n,value:e[n++]});continue}if(o===\"\\\\\"){r.push({type:\"ESCAPED_CHAR\",index:n++,value:e[n++]});continue}if(o===\"{\"){r.push({type:\"OPEN\",index:n,value:e[n++]});continue}if(o===\"}\"){r.push({type:\"CLOSE\",index:n,value:e[n++]});continue}if(o===\":\"){let l=\"\",s=n+1;for(;s<e.length;){let i=e.substr(s,1);if(s===n+1&&Pe.test(i)||s!==n+1&&Se.test(i)){l+=e[s++];continue}break}if(!l){c(`Missing parameter name at ${n}`);continue}r.push({type:\"NAME\",index:n,value:l}),n=s;continue}if(o===\"(\"){let l=1,s=\"\",i=n+1,a=!1;if(e[i]===\"?\"){c(`Pattern cannot start with \"?\" at ${i}`);continue}for(;i<e.length;){if(!ke(e[i],!1)){c(`Invalid character '${e[i]}' at ${i}.`),a=!0;break}if(e[i]===\"\\\\\"){s+=e[i++]+e[i++];continue}if(e[i]===\")\"){if(l--,l===0){i++;break}}else if(e[i]===\"(\"&&(l++,e[i+1]!==\"?\")){c(`Capturing groups are not allowed at ${i}`),a=!0;break}s+=e[i++]}if(a)continue;if(l){c(`Unbalanced pattern at ${n}`);continue}if(!s){c(`Missing pattern at ${n}`);continue}r.push({type:\"REGEX\",index:n,value:s}),n=i;continue}r.push({type:\"CHAR\",index:n,value:e[n++]})}return r.push({type:\"END\",index:n,value:\"\"}),r}function D(e,t={}){let r=v(e);t.delimiter??=\"/#?\",t.prefixes??=\"./\";let n=`[^${x(t.delimiter)}]+?`,o=[],c=0,l=0,s=\"\",i=new Set,a=f=>{if(l<r.length&&r[l].type===f)return r[l++].value},h=()=>a(\"OTHER_MODIFIER\")??a(\"ASTERISK\"),p=f=>{let u=a(f);if(u!==void 0)return u;let{type:d,index:T}=r[l];throw new TypeError(`Unexpected ${d} at ${T}, expected ${f}`)},O=()=>{let f=\"\",u;for(;u=a(\"CHAR\")??a(\"ESCAPED_CHAR\");)f+=u;return f},xe=f=>f,L=t.encodePart||xe,I=\"\",H=f=>{I+=f},$=()=>{I.length&&(o.push(new k(3,\"\",\"\",L(I),\"\",3)),I=\"\")},G=(f,u,d,T,Y)=>{let g=3;switch(Y){case\"?\":g=1;break;case\"*\":g=0;break;case\"+\":g=2;break}if(!u&&!d&&g===3){H(f);return}if($(),!u&&!d){if(!f)return;o.push(new k(3,\"\",\"\",L(f),\"\",g));return}let m;d?d===\"*\"?m=M:m=d:m=n;let R=2;m===n?(R=1,m=\"\"):m===M&&(R=0,m=\"\");let S;if(u?S=u:d&&(S=c++),i.has(S))throw new TypeError(`Duplicate name '${S}'.`);i.add(S),o.push(new k(R,S,L(f),m,L(T),g))};for(;l<r.length;){let f=a(\"CHAR\"),u=a(\"NAME\"),d=a(\"REGEX\");if(!u&&!d&&(d=a(\"ASTERISK\")),u||d){let g=f??\"\";t.prefixes.indexOf(g)===-1&&(H(g),g=\"\"),$();let m=h();G(g,u,d,\"\",m);continue}let T=f??a(\"ESCAPED_CHAR\");if(T){H(T);continue}if(a(\"OPEN\")){let g=O(),m=a(\"NAME\"),R=a(\"REGEX\");!m&&!R&&(R=a(\"ASTERISK\"));let S=O();p(\"CLOSE\");let be=h();G(g,m,R,S,be);continue}$(),p(\"END\")}return o}function x(e){return e.replace(/([.+*?^${}()[\\]|/\\\\])/g,\"\\\\$1\")}function X(e){return e&&e.ignoreCase?\"ui\":\"u\"}function Z(e,t,r){return F(D(e,r),t,r)}function y(e){switch(e){case 0:return\"*\";case 1:return\"?\";case 2:return\"+\";case 3:return\"\"}}function F(e,t,r={}){r.delimiter??=\"/#?\",r.prefixes??=\"./\",r.sensitive??=!1,r.strict??=!1,r.end??=!0,r.start??=!0,r.endsWith=\"\";let n=r.start?\"^\":\"\";for(let s of e){if(s.type===3){s.modifier===3?n+=x(s.value):n+=`(?:${x(s.value)})${y(s.modifier)}`;continue}t&&t.push(s.name);let i=`[^${x(r.delimiter)}]+?`,a=s.value;if(s.type===1?a=i:s.type===0&&(a=M),!s.prefix.length&&!s.suffix.length){s.modifier===3||s.modifier===1?n+=`(${a})${y(s.modifier)}`:n+=`((?:${a})${y(s.modifier)})`;continue}if(s.modifier===3||s.modifier===1){n+=`(?:${x(s.prefix)}(${a})${x(s.suffix)})`,n+=y(s.modifier);continue}n+=`(?:${x(s.prefix)}`,n+=`((?:${a})(?:`,n+=x(s.suffix),n+=x(s.prefix),n+=`(?:${a}))*)${x(s.suffix)})`,s.modifier===0&&(n+=\"?\")}let o=`[${x(r.endsWith)}]|$`,c=`[${x(r.delimiter)}]`;if(r.end)return r.strict||(n+=`${c}?`),r.endsWith.length?n+=`(?=${o})`:n+=\"$\",new RegExp(n,X(r));r.strict||(n+=`(?:${c}(?=${o}))?`);let l=!1;if(e.length){let s=e[e.length-1];s.type===3&&s.modifier===3&&(l=r.delimiter.indexOf(s)>-1)}return l||(n+=`(?=${c}|${o})`),new RegExp(n,X(r))}var b={delimiter:\"\",prefixes:\"\",sensitive:!0,strict:!0},B={delimiter:\".\",prefixes:\"\",sensitive:!0,strict:!0},q={delimiter:\"/\",prefixes:\"/\",sensitive:!0,strict:!0};function J(e,t){return e.length?e[0]===\"/\"?!0:!t||e.length<2?!1:(e[0]==\"\\\\\"||e[0]==\"{\")&&e[1]==\"/\":!1}function Q(e,t){return e.startsWith(t)?e.substring(t.length,e.length):e}function Ee(e,t){return e.endsWith(t)?e.substr(0,e.length-t.length):e}function W(e){return!e||e.length<2?!1:e[0]===\"[\"||(e[0]===\"\\\\\"||e[0]===\"{\")&&e[1]===\"[\"}var ee=[\"ftp\",\"file\",\"http\",\"https\",\"ws\",\"wss\"];function N(e){if(!e)return!0;for(let t of ee)if(e.test(t))return!0;return!1}function te(e,t){if(e=Q(e,\"#\"),t||e===\"\")return e;let r=new URL(\"https://example.com\");return r.hash=e,r.hash?r.hash.substring(1,r.hash.length):\"\"}function re(e,t){if(e=Q(e,\"?\"),t||e===\"\")return e;let r=new URL(\"https://example.com\");return r.search=e,r.search?r.search.substring(1,r.search.length):\"\"}function ne(e,t){return t||e===\"\"?e:W(e)?j(e):z(e)}function se(e,t){if(t||e===\"\")return e;let r=new URL(\"https://example.com\");return r.password=e,r.password}function ie(e,t){if(t||e===\"\")return e;let r=new URL(\"https://example.com\");return r.username=e,r.username}function ae(e,t,r){if(r||e===\"\")return e;if(t&&!ee.includes(t))return new URL(`${t}:${e}`).pathname;let n=e[0]==\"/\";return e=new URL(n?e:\"/-\"+e,\"https://example.com\").pathname,n||(e=e.substring(2,e.length)),e}function oe(e,t,r){return _(t)===e&&(e=\"\"),r||e===\"\"?e:K(e)}function ce(e,t){return e=Ee(e,\":\"),t||e===\"\"?e:A(e)}function _(e){switch(e){case\"ws\":case\"http\":return\"80\";case\"wws\":case\"https\":return\"443\";case\"ftp\":return\"21\";default:return\"\"}}function A(e){if(e===\"\")return e;if(/^[-+.A-Za-z0-9]*$/.test(e))return e.toLowerCase();throw new TypeError(`Invalid protocol '${e}'.`)}function le(e){if(e===\"\")return e;let t=new URL(\"https://example.com\");return t.username=e,t.username}function he(e){if(e===\"\")return e;let t=new URL(\"https://example.com\");return t.password=e,t.password}function z(e){if(e===\"\")return e;if(/[\\t\\n\\r #%/:<>?@[\\]^\\\\|]/g.test(e))throw new TypeError(`Invalid hostname '${e}'`);let t=new URL(\"https://example.com\");return t.hostname=e,t.hostname}function j(e){if(e===\"\")return e;if(/[^0-9a-fA-F[\\]:]/g.test(e))throw new TypeError(`Invalid IPv6 hostname '${e}'`);return e.toLowerCase()}function K(e){if(e===\"\"||/^[0-9]*$/.test(e)&&parseInt(e)<=65535)return e;throw new TypeError(`Invalid port '${e}'.`)}function fe(e){if(e===\"\")return e;let t=new URL(\"https://example.com\");return t.pathname=e[0]!==\"/\"?\"/-\"+e:e,e[0]!==\"/\"?t.pathname.substring(2,t.pathname.length):t.pathname}function ue(e){return e===\"\"?e:new URL(`data:${e}`).pathname}function pe(e){if(e===\"\")return e;let t=new URL(\"https://example.com\");return t.search=e,t.search.substring(1,t.search.length)}function de(e){if(e===\"\")return e;let t=new URL(\"https://example.com\");return t.hash=e,t.hash.substring(1,t.hash.length)}var U=class{#i;#n=[];#t={};#e=0;#s=1;#u=0;#c=0;#p=0;#d=0;#g=!1;constructor(t){this.#i=t}get result(){return this.#t}parse(){for(this.#n=v(this.#i,!0);this.#e<this.#n.length;this.#e+=this.#s){if(this.#s=1,this.#n[this.#e].type===\"END\"){if(this.#c===0){this.#P(),this.#l()?this.#r(9,1):this.#h()?(this.#r(8,1),this.#t.hash=\"\"):(this.#r(7,0),this.#t.search=\"\",this.#t.hash=\"\");continue}else if(this.#c===2){this.#f(5);continue}this.#r(10,0);break}if(this.#p>0)if(this.#T())this.#p-=1;else continue;if(this.#O()){this.#p+=1;continue}switch(this.#c){case 0:this.#S()&&(this.#t.username=\"\",this.#t.password=\"\",this.#t.hostname=\"\",this.#t.port=\"\",this.#t.pathname=\"\",this.#t.search=\"\",this.#t.hash=\"\",this.#f(1));break;case 1:if(this.#S()){this.#C();let t=7,r=1;this.#g&&(this.#t.pathname=\"/\"),this.#E()?(t=2,r=3):this.#g&&(t=2),this.#r(t,r)}break;case 2:this.#x()?this.#f(3):(this.#b()||this.#h()||this.#l())&&this.#f(5);break;case 3:this.#R()?this.#r(4,1):this.#x()&&this.#r(5,1);break;case 4:this.#x()&&this.#r(5,1);break;case 5:this.#A()?this.#d+=1:this.#w()&&(this.#d-=1),this.#y()&&!this.#d?this.#r(6,1):this.#b()?this.#r(7,0):this.#h()?this.#r(8,1):this.#l()&&this.#r(9,1);break;case 6:this.#b()?this.#r(7,0):this.#h()?this.#r(8,1):this.#l()&&this.#r(9,1);break;case 7:this.#h()?this.#r(8,1):this.#l()&&this.#r(9,1);break;case 8:this.#l()&&this.#r(9,1);break;case 9:break;case 10:break}}}#r(t,r){switch(this.#c){case 0:break;case 1:this.#t.protocol=this.#o();break;case 2:break;case 3:this.#t.username=this.#o();break;case 4:this.#t.password=this.#o();break;case 5:this.#t.hostname=this.#o();break;case 6:this.#t.port=this.#o();break;case 7:this.#t.pathname=this.#o();break;case 8:this.#t.search=this.#o();break;case 9:this.#t.hash=this.#o();break;case 10:break}this.#k(t,r)}#k(t,r){this.#c=t,this.#u=this.#e+r,this.#e+=r,this.#s=0}#P(){this.#e=this.#u,this.#s=0}#f(t){this.#P(),this.#c=t}#m(t){return t<0&&(t=this.#n.length-t),t<this.#n.length?this.#n[t]:this.#n[this.#n.length-1]}#a(t,r){let n=this.#m(t);return n.value===r&&(n.type===\"CHAR\"||n.type===\"ESCAPED_CHAR\"||n.type===\"INVALID_CHAR\")}#S(){return this.#a(this.#e,\":\")}#E(){return this.#a(this.#e+1,\"/\")&&this.#a(this.#e+2,\"/\")}#x(){return this.#a(this.#e,\"@\")}#R(){return this.#a(this.#e,\":\")}#y(){return this.#a(this.#e,\":\")}#b(){return this.#a(this.#e,\"/\")}#h(){if(this.#a(this.#e,\"?\"))return!0;if(this.#n[this.#e].value!==\"?\")return!1;let t=this.#m(this.#e-1);return t.type!==\"NAME\"&&t.type!==\"REGEX\"&&t.type!==\"CLOSE\"&&t.type!==\"ASTERISK\"}#l(){return this.#a(this.#e,\"#\")}#O(){return this.#n[this.#e].type==\"OPEN\"}#T(){return this.#n[this.#e].type==\"CLOSE\"}#A(){return this.#a(this.#e,\"[\")}#w(){return this.#a(this.#e,\"]\")}#o(){let t=this.#n[this.#e],r=this.#m(this.#u).index;return this.#i.substring(r,t.index)}#C(){let t={};Object.assign(t,b),t.encodePart=A;let r=Z(this.#o(),void 0,t);this.#g=N(r)}};var V=[\"protocol\",\"username\",\"password\",\"hostname\",\"port\",\"pathname\",\"search\",\"hash\"],E=\"*\";function ge(e,t){if(typeof e!=\"string\")throw new TypeError(\"parameter 1 is not of type 'string'.\");let r=new URL(e,t);return{protocol:r.protocol.substring(0,r.protocol.length-1),username:r.username,password:r.password,hostname:r.hostname,port:r.port,pathname:r.pathname,search:r.search!==\"\"?r.search.substring(1,r.search.length):void 0,hash:r.hash!==\"\"?r.hash.substring(1,r.hash.length):void 0}}function P(e,t){return t?C(e):e}function w(e,t,r){let n;if(typeof t.baseURL==\"string\")try{n=new URL(t.baseURL),e.protocol=P(n.protocol.substring(0,n.protocol.length-1),r),e.username=P(n.username,r),e.password=P(n.password,r),e.hostname=P(n.hostname,r),e.port=P(n.port,r),e.pathname=P(n.pathname,r),e.search=P(n.search.substring(1,n.search.length),r),e.hash=P(n.hash.substring(1,n.hash.length),r)}catch{throw new TypeError(`invalid baseURL '${t.baseURL}'.`)}if(typeof t.protocol==\"string\"&&(e.protocol=ce(t.protocol,r)),typeof t.username==\"string\"&&(e.username=ie(t.username,r)),typeof t.password==\"string\"&&(e.password=se(t.password,r)),typeof t.hostname==\"string\"&&(e.hostname=ne(t.hostname,r)),typeof t.port==\"string\"&&(e.port=oe(t.port,e.protocol,r)),typeof t.pathname==\"string\"){if(e.pathname=t.pathname,n&&!J(e.pathname,r)){let o=n.pathname.lastIndexOf(\"/\");o>=0&&(e.pathname=P(n.pathname.substring(0,o+1),r)+e.pathname)}e.pathname=ae(e.pathname,e.protocol,r)}return typeof t.search==\"string\"&&(e.search=re(t.search,r)),typeof t.hash==\"string\"&&(e.hash=te(t.hash,r)),e}function C(e){return e.replace(/([+*?:{}()\\\\])/g,\"\\\\$1\")}function Re(e){return e.replace(/([.+*?^${}()[\\]|/\\\\])/g,\"\\\\$1\")}function ye(e,t){t.delimiter??=\"/#?\",t.prefixes??=\"./\",t.sensitive??=!1,t.strict??=!1,t.end??=!0,t.start??=!0,t.endsWith=\"\";let r=\".*\",n=`[^${Re(t.delimiter)}]+?`,o=/[$_\\u200C\\u200D\\p{ID_Continue}]/u,c=\"\";for(let l=0;l<e.length;++l){let s=e[l];if(s.type===3){if(s.modifier===3){c+=C(s.value);continue}c+=`{${C(s.value)}}${y(s.modifier)}`;continue}let i=s.hasCustomName(),a=!!s.suffix.length||!!s.prefix.length&&(s.prefix.length!==1||!t.prefixes.includes(s.prefix)),h=l>0?e[l-1]:null,p=l<e.length-1?e[l+1]:null;if(!a&&i&&s.type===1&&s.modifier===3&&p&&!p.prefix.length&&!p.suffix.length)if(p.type===3){let O=p.value.length>0?p.value[0]:\"\";a=o.test(O)}else a=!p.hasCustomName();if(!a&&!s.prefix.length&&h&&h.type===3){let O=h.value[h.value.length-1];a=t.prefixes.includes(O)}a&&(c+=\"{\"),c+=C(s.prefix),i&&(c+=`:${s.name}`),s.type===2?c+=`(${s.value})`:s.type===1?i||(c+=`(${n})`):s.type===0&&(!i&&(!h||h.type===3||h.modifier!==3||a||s.prefix!==\"\")?c+=\"*\":c+=`(${r})`),s.type===1&&i&&s.suffix.length&&o.test(s.suffix[0])&&(c+=\"\\\\\"),c+=C(s.suffix),a&&(c+=\"}\"),s.modifier!==3&&(c+=y(s.modifier))}return c}var me=class{#i;#n={};#t={};#e={};#s={};constructor(t={},r,n){try{let o;if(typeof r==\"string\"?o=r:n=r,typeof t==\"string\"){let i=new U(t);if(i.parse(),t=i.result,o===void 0&&typeof t.protocol!=\"string\")throw new TypeError(\"A base URL must be provided for a relative constructor string.\");t.baseURL=o}else{if(!t||typeof t!=\"object\")throw new TypeError(\"parameter 1 is not of type 'string' and cannot convert to dictionary.\");if(o)throw new TypeError(\"parameter 1 is not of type 'string'.\")}typeof n>\"u\"&&(n={ignoreCase:!1});let c={ignoreCase:n.ignoreCase===!0},l={pathname:E,protocol:E,username:E,password:E,hostname:E,port:E,search:E,hash:E};this.#i=w(l,t,!0),_(this.#i.protocol)===this.#i.port&&(this.#i.port=\"\");let s;for(s of V){if(!(s in this.#i))continue;let i={},a=this.#i[s];switch(this.#t[s]=[],s){case\"protocol\":Object.assign(i,b),i.encodePart=A;break;case\"username\":Object.assign(i,b),i.encodePart=le;break;case\"password\":Object.assign(i,b),i.encodePart=he;break;case\"hostname\":Object.assign(i,B),W(a)?i.encodePart=j:i.encodePart=z;break;case\"port\":Object.assign(i,b),i.encodePart=K;break;case\"pathname\":N(this.#n.protocol)?(Object.assign(i,q,c),i.encodePart=fe):(Object.assign(i,b,c),i.encodePart=ue);break;case\"search\":Object.assign(i,b,c),i.encodePart=pe;break;case\"hash\":Object.assign(i,b,c),i.encodePart=de;break}try{this.#s[s]=D(a,i),this.#n[s]=F(this.#s[s],this.#t[s],i),this.#e[s]=ye(this.#s[s],i)}catch{throw new TypeError(`invalid ${s} pattern '${this.#i[s]}'.`)}}}catch(o){throw new TypeError(`Failed to construct 'URLPattern': ${o.message}`)}}test(t={},r){let n={pathname:\"\",protocol:\"\",username:\"\",password:\"\",hostname:\"\",port:\"\",search:\"\",hash:\"\"};if(typeof t!=\"string\"&&r)throw new TypeError(\"parameter 1 is not of type 'string'.\");if(typeof t>\"u\")return!1;try{typeof t==\"object\"?n=w(n,t,!1):n=w(n,ge(t,r),!1)}catch{return!1}let o;for(o of V)if(!this.#n[o].exec(n[o]))return!1;return!0}exec(t={},r){let n={pathname:\"\",protocol:\"\",username:\"\",password:\"\",hostname:\"\",port:\"\",search:\"\",hash:\"\"};if(typeof t!=\"string\"&&r)throw new TypeError(\"parameter 1 is not of type 'string'.\");if(typeof t>\"u\")return;try{typeof t==\"object\"?n=w(n,t,!1):n=w(n,ge(t,r),!1)}catch{return null}let o={};r?o.inputs=[t,r]:o.inputs=[t];let c;for(c of V){let l=this.#n[c].exec(n[c]);if(!l)return null;let s={};for(let[i,a]of this.#t[c].entries())if(typeof a==\"string\"||typeof a==\"number\"){let h=l[i+1];s[a]=h}o[c]={input:n[c]??\"\",groups:s}}return o}static compareComponent(t,r,n){let o=(i,a)=>{for(let h of[\"type\",\"modifier\",\"prefix\",\"value\",\"suffix\"]){if(i[h]<a[h])return-1;if(i[h]===a[h])continue;return 1}return 0},c=new k(3,\"\",\"\",\"\",\"\",3),l=new k(0,\"\",\"\",\"\",\"\",3),s=(i,a)=>{let h=0;for(;h<Math.min(i.length,a.length);++h){let p=o(i[h],a[h]);if(p)return p}return i.length===a.length?0:o(i[h]??c,a[h]??c)};return!r.#e[t]&&!n.#e[t]?0:r.#e[t]&&!n.#e[t]?s(r.#s[t],[l]):!r.#e[t]&&n.#e[t]?s([l],n.#s[t]):s(r.#s[t],n.#s[t])}get protocol(){return this.#e.protocol}get username(){return this.#e.username}get password(){return this.#e.password}get hostname(){return this.#e.hostname}get port(){return this.#e.port}get pathname(){return this.#e.pathname}get search(){return this.#e.search}get hash(){return this.#e.hash}};export{me as URLPattern};\n", "import { URLPattern } from \"./dist/urlpattern.js\";\n\nexport { URLPattern };\n\nif (!globalThis.URLPattern) {\n  globalThis.URLPattern = URLPattern;\n}\n", "import { html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { map } from 'lit/directives/map.js';\n\nimport { ColorSchemable } from '@/mixins/color-schemable.mixin.js';\nimport { getConfig } from '@/utils/config.utils.js';\n\nimport styles from './markdown-example.component.scss';\n\nconst MARKDOWN_EXAMPLE_TABS = { preview: { label: 'Preview' }, code: { label: 'Code' } };\n\n/**\n * Shows an inline code example and a preview of the element in the readme.\n * This is used in the markdown formatter to render `html` examples.\n *\n * In most cases you don't want to use this component directly, but rather use the `wcp-readme` element instead,\n * or the enhanced markdown renderer which instruments this element under the hood. It can be used with the\n * `renderMarkdown` function provided by the `@/utils/markdown.utils`.\n *\n * @slot code - Code example\n * @slot preview - Rendered example preview\n *\n * @cssprop --wcp-markdown-example-spacing - Inner padding of the example\n * @cssprop --wcp-markdown-example-border-radius - Border radius of the example\n * @cssprop --wcp-markdown-example-border-width - Border width of the example\n *\n * @cssprop --wcp-markdown-example-dark-border-color - Border color of the example in dark mode\n * @cssprop --wcp-markdown-example-light-border-color - Border color of the example in light mode\n */\n@customElement('wcp-markdown-example')\nexport class MarkdownExample extends ColorSchemable(LitElement) {\n  static override readonly styles = unsafeCSS(styles);\n\n  readonly #config = getConfig();\n\n  protected override render(): TemplateResult {\n    return html`\n      <wcp-tabs .tabs=\"${MARKDOWN_EXAMPLE_TABS}\" active-tab=\"${ifDefined(this.#config?.initialCodePreviewTab)}\">\n        ${map(Object.keys(MARKDOWN_EXAMPLE_TABS), (tab) => html`<slot name=\"${tab}\" slot=\"${tab}\"></slot>`)}\n      </wcp-tabs>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-markdown-example': MarkdownExample;\n  }\n}\n", "import { LitElement } from 'lit';\nimport { property } from 'lit/decorators/property.js';\n\nimport {\n  addColorSchemable,\n  type ColorScheme,\n  getColorSchemeState,\n  removeColorSchemable,\n} from '@/utils/color-scheme.utils.js';\nimport type { Constructor } from '@/utils/mixin.types.js';\n\nexport declare class ColorSchemableInterface {\n  colorScheme?: ColorScheme;\n}\n\n// provide a mixin to make a component color schemable\nexport const ColorSchemable = <T extends Constructor<LitElement>>(superClass: T) => {\n  class ColorSchemableElement extends superClass {\n    /**\n     * @internal - used to reflect the color scheme to the element\n     */\n    @property({ type: String, reflect: true, attribute: 'color-scheme' })\n    colorScheme?: ColorScheme = getColorSchemeState();\n\n    override connectedCallback() {\n      super.connectedCallback();\n      addColorSchemable(this);\n    }\n\n    override disconnectedCallback() {\n      super.disconnectedCallback();\n      removeColorSchemable(this);\n    }\n  }\n  return ColorSchemableElement as Constructor<ColorSchemableInterface> & T;\n};\n", "// this type will be used to derive the config schema from\nexport type Config = {\n  excludeElements: string[];\n\n  /**\n   * Allows setting an initial element to be displayed if no other element is selected.\n   * If omitted, the first element will be used.\n   */\n  initialActiveElement?: string;\n\n  /**\n   * The code previews always consist of two tabs, one for the code and one for the preview.\n   * This property defines the initial tab to be selected.\n   */\n  initialCodePreviewTab: 'code' | 'preview';\n\n  /**\n   * The initial tab to be selected in the preview. Will match the name of the plugin.\n   */\n  initialStageTab: string;\n\n  /**\n   * The plugins to be used for the preview.\n   * Set to the viewport plugin by default.\n   */\n  previewPlugins: string[];\n\n  /**\n   * The plugins to be used for the preview frame.\n   * Defaults to examples, readme and viewer.\n   */\n  stagePlugins: string[];\n\n  /**\n   * The plugins to be used for the topbar.\n   * Defaults to the preview editor link hint toggle.\n   */\n  topbarPlugins: string[];\n\n  /**\n   * Defines readmes to be loaded from external sources to be displayed in the navigation.\n   */\n  additionalReadmes: {\n    name: string;\n    url: string;\n  }[];\n\n  /**\n   * Sets the persistence of the global state. Defaults to 'session'.\n   * If set to 'none', the state will not be persisted at all and only kept in memory.\n   * If set to 'session', the state will be persisted in the session storage and restored.\n   * If set to 'local', the state will be persisted in the local storage and restored.\n   */\n  statePersistence: 'none' | 'session' | 'local';\n\n  /**\n   * Labels to be translated or customized\n   */\n  labels: {\n    /**\n     * The name of the group to be used for eventually configured additional readmes.\n     */\n    additionalReadmeGroupName: string;\n    /**\n     * If the navigation is empty, either because no readmes nor elements are found or\n     * because the search query does not match any elements, use this label as fallback.\n     */\n    emptyNavigation: string;\n    /**\n     * If no groups for elements are defined, use this label as fallback for all elements\n     */\n    fallbackGroupName: string;\n    /**\n     * The title of the application, displayed in sidebar header and browser tab\n     */\n    title: string;\n  };\n\n  /**\n   * All settings concerning logging\n   */\n  logging: {\n    /**\n     * The severity of the log message; info will include all messages, warn will\n     * include warnings and errors, error will include errors only and none will\n     * disable logging completely.\n     */\n    severity: 'info' | 'warn' | 'error' | 'none';\n  };\n};\n\ndeclare global {\n  interface WCP {\n    config: Config;\n  }\n\n  interface Window {\n    wcp: WCP;\n  }\n}\n\n// default config, to be customized (even partially)\nexport const defaultConfig = {\n  excludeElements: [],\n  initialActiveElement: undefined,\n  initialCodePreviewTab: 'preview',\n  initialStageTab: 'editor',\n  previewPlugins: ['wcp-preview-simulate-viewports', 'wcp-preview-editor-link'],\n  stagePlugins: ['wcp-stage-examples', 'wcp-stage-readme', 'wcp-stage-editor'],\n  topbarPlugins: ['wcp-toggle-sidebar', 'wcp-toggle-color-scheme', 'wcp-topbar-preview-editor-link-toggle'],\n  additionalReadmes: [],\n  statePersistence: 'session',\n  labels: {\n    title: 'Web Component Preview',\n    additionalReadmeGroupName: 'Readmes',\n    fallbackGroupName: 'Components',\n    emptyNavigation: 'No readmes nor elements found.',\n  },\n  logging: {\n    severity: 'info',\n  },\n} satisfies Config;\n\n// merge the default config with the given config\nexport function mergeConfigWithDefaults(config: Partial<Config>): Config {\n  return {\n    ...defaultConfig,\n    ...config,\n    labels: {\n      ...defaultConfig.labels,\n      ...config.labels,\n    },\n  };\n}\n\n// mostly used internally\nexport async function loadConfig(url = 'config.json'): Promise<Config> {\n  const response = await fetch(url);\n  const config = mergeConfigWithDefaults(await response.json());\n\n  if (window.wcp === undefined) {\n    window.wcp = {} as Window['wcp'];\n  }\n  if (window.wcp.config === undefined) {\n    window.wcp.config = config;\n  }\n\n  return getConfig()!;\n}\n\n/**\n * Convenience function to retrieve the config\n */\nexport function getConfig(): Config | undefined {\n  return window.wcp?.config;\n}\n", "import { getConfig } from './config.utils.js';\n\n// for session and local storage we'll need to prefix the keys\nconst STORAGE_PREFIX = 'wcp-' as const;\nconst STATE_EVENT_NAME = 'wcp-state-changed' as const;\n\n// in case of in-memory state, add the type definition here\ndeclare global {\n  /**\n   * Add fields to the state type by declaring them at the feature.\n   * The declared type will be merged with this global state type.\n   */\n  interface State {\n    _: unknown; // we can not keep it empty, so we add some\n  }\n\n  // the internal state will be serialized\n  interface WCP {\n    __state: Record<string, string>;\n  }\n  interface Window {\n    wcp: WCP;\n  }\n\n  // a helper type creating a map of all state events derived from the merged\n  // state interface(s) with the correct custom event payload type\n  type StateEventMap = {\n    [N in `${typeof STATE_EVENT_NAME}:${keyof State}`]: CustomEvent<\n      State[N extends `${typeof STATE_EVENT_NAME}:${infer K}` ? K : never]\n    >;\n  };\n  // then add the type to the global window event map interface\n  interface WindowEventMap extends StateEventMap {}\n}\n\n/**\n * Helper function to persist a given key with the given stateful value.\n */\nexport function persist<K extends keyof State>(key: K, value: State[K]) {\n  // in memory we can store arbitrary values, nevertheless we may want to\n  // do more with them in the future, so we should use serializable values\n  const serializedValue = JSON.stringify(value);\n  const keyWithPrefix = `${STORAGE_PREFIX}${key}`;\n  const persistence = getConfig()?.statePersistence ?? 'none';\n\n  let _: never;\n  switch (persistence) {\n    case 'none':\n      // prepare global state object if missing\n      if (!window.wcp) window.wcp = {} as WCP;\n      if (!window.wcp.__state) window.wcp.__state = {};\n\n      window.wcp.__state[keyWithPrefix] = serializedValue;\n      break;\n    case 'session':\n      window.sessionStorage.setItem(keyWithPrefix, serializedValue);\n      break;\n    case 'local':\n      window.localStorage.setItem(keyWithPrefix, serializedValue);\n      break;\n\n    default:\n      // some simple exhaustiveness check\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      _ = persistence;\n      return _;\n  }\n\n  // dispatch an event to notify others about the change\n  window.dispatchEvent(new CustomEvent(`${STATE_EVENT_NAME}:${key}`, { detail: value }));\n}\n\n/**\n * Read stateful values from the persistence layer.\n */\nexport function read<K extends keyof State>(key: K): State[K] | undefined {\n  let serializedValue: string | undefined;\n  const keyWithPrefix = `${STORAGE_PREFIX}${key}`;\n  const persistence = getConfig()?.statePersistence ?? 'none';\n\n  let _: never;\n  switch (persistence) {\n    case 'none':\n      serializedValue = window?.wcp?.__state?.[keyWithPrefix];\n      break;\n    case 'session':\n      serializedValue = window.sessionStorage.getItem(keyWithPrefix) ?? undefined;\n      break;\n    case 'local':\n      serializedValue = window.localStorage.getItem(keyWithPrefix) ?? undefined;\n      break;\n\n    default:\n      // some simple exhaustiveness check\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      _ = persistence;\n      return _;\n  }\n\n  // either way, the value must be parsed\n  return serializedValue ? JSON.parse(serializedValue) : undefined;\n}\n", "import type { ColorSchemableInterface } from '@/mixins/color-schemable.mixin.js';\nimport { read } from '@/utils/state.utils.js';\n\ndeclare global {\n  interface State {\n    ['color-scheme']: ColorScheme;\n  }\n}\n\nexport type ColorScheme = 'light' | 'dark';\n\n// module stores global state\nconst colorSchemables = new Set<ColorSchemableInterface>();\n\n// and makes them accessible\nexport const getColorSchemeState = () =>\n  read('color-scheme') ?? (matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');\nexport const addColorSchemable = (element: ColorSchemableInterface) => colorSchemables.add(element);\nexport const removeColorSchemable = (element: ColorSchemableInterface) => colorSchemables.delete(element);\n\n// track changes to color scheme\nfunction handleColorSchemeChange({ detail }: CustomEvent<ColorScheme>) {\n  // update state in module\n  const colorScheme = detail ?? undefined;\n  colorSchemables.forEach((colorSchemable) => (colorSchemable.colorScheme = colorScheme));\n}\n\n// bind a single listener to keep track of changes\nwindow.addEventListener('wcp-state-changed:color-scheme', handleColorSchemeChange, false);\n", "export default `:host {\n  ---wcp-markdown-example-spacing: var(--wcp-markdown-example-spacing, 0 calc(var(--wcp-base-size, 10px) * 1));\n  ---wcp-markdown-example-border-radius: var(--wcp-markdown-example-border-radius, var(--wcp-border-radius));\n  ---wcp-markdown-example-border-width: var(--wcp-markdown-example-border-width, 1px);\n  ---wcp-markdown-example-dark-border-color: var(--wcp-markdown-example-dark-border-color, var(--wcp-color-grey-24));\n  ---wcp-markdown-example-light-border-color: var(--wcp-markdown-example-light-border-color, var(--wcp-color-grey-65));\n}\n@media (prefers-color-scheme: dark) {\n  :host {\n    ---wcp-markdown-example-border-color: var(---wcp-markdown-example-dark-border-color);\n  }\n}\n:host([color-scheme=dark]):host {\n  ---wcp-markdown-example-border-color: var(---wcp-markdown-example-dark-border-color);\n}\n\n@media (prefers-color-scheme: light) {\n  :host {\n    ---wcp-markdown-example-border-color: var(---wcp-markdown-example-light-border-color);\n  }\n}\n:host([color-scheme=light]):host {\n  ---wcp-markdown-example-border-color: var(---wcp-markdown-example-light-border-color);\n}\n\n:host {\n  display: block;\n  padding: var(---wcp-markdown-example-spacing);\n  border: var(---wcp-markdown-example-border-width) solid var(---wcp-markdown-example-border-color);\n  border-radius: var(---wcp-markdown-example-border-radius);\n}\n\nslot[name=code]::slotted(pre) {\n  margin: 0;\n}\n\nwcp-tabs::part(preview-panel) {\n  padding: 0;\n  overflow: hidden;\n}\n/*# sourceMappingURL=data:application/json;base64, */`;\n", "import { html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement, eventOptions, property } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { when } from 'lit/directives/when.js';\n\nimport { ColorSchemable } from '@/mixins/color-schemable.mixin.js';\n\nimport styles from './navigation.component.scss';\n\n/**\n * @slot - Default slot for navigation items or nested navigation\n * @slot action - Slot for an action to be shown next to the headline\n *\n * @csspart headline - The headline of the navigation\n * @csspart nav - The nested navigation\n *\n * @cssprop --wcp-navigation-spacing - Spacing between navigation and headline\n * @cssprop --wcp-navigation-spacing-items - Spacing between navigation items\n * @cssprop --wcp-navigation-spacing-headline - Inner padding of the navigation headline\n * @cssprop --wcp-navigation-spacing-headline-togglable - Inner padding of the navigation headline if togglable\n * @cssprop --wcp-navigation-inset - Inset of the navigation if nested (is applied on each level)\n * @cssprop --wcp-navigation-dark-border-color - Border color of the navigation headline in dark mode\n * @cssprop --wcp-navigation-light-border-color - Border color of the navigation headline in light mode\n * @cssprop --wcp-navigation-headline-size - Font size of the navigation headline\n * @cssprop --wcp-navigation-headline-weight - Font weight of the navigation headline\n * @cssprop --wcp-navigation-headline-spacing - Letter spacing of the navigation headline\n * @cssprop --wcp-navigation-headline-dark-background - Background color of the navigation headline in dark mode\n * @cssprop --wcp-navigation-headline-light-background - Background color of the navigation headline in light mode\n *\n * @emits wcp-navigation-toggle - Emitted when the togglable open state changes\n */\n@customElement('wcp-navigation')\nexport class Navigation extends ColorSchemable(LitElement) {\n  static override readonly styles = unsafeCSS(styles);\n\n  /**\n   * An optional headline to be shown for categorization\n   */\n  @property({ type: String, reflect: true })\n  headline?: string;\n\n  /**\n   * Allows the nested items to be toggled\n   */\n  @property({ type: Boolean, reflect: true })\n  togglable = false;\n\n  /**\n   * If togglable, this flag indicates if the nested items are currently visible\n   */\n  @property({ type: Boolean, reflect: true })\n  open = false;\n\n  @eventOptions({ passive: true })\n  toggleClick(): void {\n    if (!this.togglable) return;\n    this.open = !this.open;\n    this.dispatchEvent(new CustomEvent('wcp-navigation-toggle', { detail: this.open }));\n  }\n\n  @eventOptions({ capture: true })\n  toggleKeyboard(event: KeyboardEvent): void {\n    if (!this.togglable) return;\n    if (![' ', 'Enter'].includes(event.key)) return;\n\n    event.preventDefault();\n    this.open = !this.open;\n    this.dispatchEvent(new CustomEvent('wcp-navigation-toggle', { detail: this.open }));\n  }\n\n  protected override render(): TemplateResult {\n    return html`\n      ${when(\n        this.headline !== undefined,\n        () => html`\n          <h3\n            part=\"headline\"\n            tabindex=\"${ifDefined(this.togglable ? '0' : undefined)}\"\n            @click=\"${this.toggleClick}\"\n            @keydown=\"${this.toggleKeyboard}\"\n          >\n            <span>${this.headline}</span>\n            <slot name=\"action\">\n              ${when(this.togglable, () => html`<wcp-icon name=\"chevron-${this.open ? 'up' : 'down'}\"></wcp-icon>`)}\n            </slot>\n          </h3>\n        `,\n      )}\n      <nav part=\"nav\"><slot></slot></nav>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementEventMap {\n    'wcp-navigation-toggle': CustomEvent<boolean>;\n  }\n\n  interface HTMLElementTagNameMap {\n    'wcp-navigation': Navigation;\n  }\n}\n", "export default `:host {\n  ---wcp-navigation-spacing: var(--wcp-navigation-spacing, 0 0 calc(var(--wcp-base-size, 10px) * 1));\n  ---wcp-navigation-spacing-items: var(--wcp-navigation-spacing-items, 0);\n  ---wcp-navigation-spacing-headline: var(--wcp-navigation-spacing-headline, calc(var(--wcp-base-size, 10px) * 1.5) 0 calc(var(--wcp-base-size, 10px) * 1) calc(var(--wcp-base-size, 10px) * 2));\n  ---wcp-navigation-spacing-headline-togglable: var(--wcp-navigation-spacing-headline-togglable, calc(var(--wcp-base-size, 10px) * 1) calc(var(--wcp-base-size, 10px) * 1) calc(var(--wcp-base-size, 10px) * 1) calc(var(--wcp-base-size, 10px) * 2));\n  ---wcp-navigation-inset: var(--wcp-navigation-inset, calc(var(--wcp-base-size, 10px) * 1.5));\n  ---wcp-navigation-dark-border-color: var(--wcp-navigation-headline-dark-border-color, var(--wcp-color-grey-24));\n  ---wcp-navigation-light-border-color: var(--wcp-navigation-headline-light-border-color, var(--wcp-color-blue-24));\n  ---wcp-navigation-headline-size: var(--wcp-navigation-headline-size, .8em);\n  ---wcp-navigation-headline-weight: var(--wcp-navigation-headline-weight, 200);\n  ---wcp-navigation-headline-spacing: var(--wcp-navigation-headline-spacing, .1em);\n  ---wcp-navigation-headline-dark-background: var(--wcp-navigation-headline-dark-background, var(--wcp-color-blue-13));\n  ---wcp-navigation-headline-light-background: var(--wcp-navigation-headline-light-background, var(--wcp-color-blue-17));\n}\n@media (prefers-color-scheme: dark) {\n  :host {\n    ---wcp-navigation-headline-background: var(---wcp-navigation-headline-dark-background);\n    ---wcp-navigation-border-color: var(---wcp-navigation-dark-border-color);\n  }\n}\n:host([color-scheme=dark]):host {\n  ---wcp-navigation-headline-background: var(---wcp-navigation-headline-dark-background);\n  ---wcp-navigation-border-color: var(---wcp-navigation-dark-border-color);\n}\n\n@media (prefers-color-scheme: light) {\n  :host {\n    ---wcp-navigation-headline-background: var(---wcp-navigation-headline-light-background);\n    ---wcp-navigation-border-color: var(---wcp-navigation-light-border-color);\n  }\n}\n:host([color-scheme=light]):host {\n  ---wcp-navigation-headline-background: var(---wcp-navigation-headline-light-background);\n  ---wcp-navigation-border-color: var(---wcp-navigation-light-border-color);\n}\n\n:host {\n  display: block;\n}\n\n:host(:not([headline])) {\n  border-top: 1px solid var(---wcp-navigation-border-color);\n}\n\nh3 {\n  display: flex;\n  flex-direction: row;\n  gap: 1em;\n  align-items: center;\n  margin: 0;\n  padding: var(---wcp-navigation-spacing-headline);\n  background-color: var(---wcp-navigation-headline-background);\n}\nh3 span {\n  flex: 1 1 auto;\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n:host([togglable]) h3 {\n  cursor: pointer;\n  padding: var(---wcp-navigation-spacing-headline-togglable);\n  font-size: inherit;\n  font-weight: inherit;\n}\n:host([togglable]) h3 wcp-icon {\n  flex: 0 1 auto;\n  pointer-events: none;\n  color: var(---wcp-navigation-border-color);\n  --wcp-icon-size: 20;\n}\n:host(:not([togglable])) h3 {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n  font-size: var(---wcp-navigation-headline-size);\n  font-weight: var(---wcp-navigation-headline-weight);\n  letter-spacing: var(---wcp-navigation-headline-spacing);\n  line-height: 1;\n  text-transform: uppercase;\n  font-weight: inherit;\n}\n:host(:not([togglable])) h3::before {\n  content: \"\";\n  position: absolute;\n  top: -1px;\n  right: 0;\n  bottom: auto;\n  left: 0;\n  height: 1px;\n  background-color: var(---wcp-navigation-border-color);\n}\n\nnav {\n  position: relative;\n  margin-left: var(---wcp-navigation-inset);\n  padding: var(---wcp-navigation-spacing);\n  display: flex;\n  flex-direction: column;\n  gap: var(---wcp-navigation-spacing-items);\n}\n:host([togglable]:not([open])) nav {\n  display: none;\n}\n/*# sourceMappingURL=data:application/json;base64, */`;\n", "import { html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { when } from 'lit/directives/when.js';\n\nimport { ColorSchemable } from '@/mixins/color-schemable.mixin.js';\n\nimport styles from './navigation-item.component.scss';\n\n/**\n * @slot - Default slot for contents\n *\n * @cssprop --wcp-navigation-item-spacing - Inner padding of the item\n *\n * @cssprop --wcp-navigation-item-dark-passive-background - Background color of the item when non interactive in dark mode\n * @cssprop --wcp-navigation-item-dark-hover-background - Background color of the item when hovered in dark mode\n * @cssprop --wcp-navigation-item-dark-active-background - Background color of the item when active in dark mode\n *\n * @cssprop --wcp-navigation-item-dark-passive-color - Text color of the item when non interactive in dark mode\n * @cssprop --wcp-navigation-item-dark-hover-color - Text color of the item when hovered in dark mode\n * @cssprop --wcp-navigation-item-dark-active-color - Text color of the item when active in dark mode\n *\n * @cssprop --wcp-navigation-item-light-passive-background - Background color of the item when non interactive in light mode\n * @cssprop --wcp-navigation-item-light-hover-background - Background color of the item when hovered in light mode\n * @cssprop --wcp-navigation-item-light-active-background - Background color of the item when active in light mode\n *\n * @cssprop --wcp-navigation-item-light-passive-color - Text color of the item when non interactive in light mode\n * @cssprop --wcp-navigation-item-light-hover-color - Text color of the item when hovered in light mode\n * @cssprop --wcp-navigation-item-light-active-color - Text color of the item when active in light mode\n */\n@customElement('wcp-navigation-item')\nexport class NavigationItem extends ColorSchemable(LitElement) {\n  static override readonly styles = unsafeCSS(styles);\n\n  @property({ type: Boolean, reflect: true })\n  active = false;\n\n  @property({ type: String, reflect: true })\n  href?: string;\n\n  protected override render(): TemplateResult {\n    return html`\n      ${when(\n        this.href !== undefined,\n        () => html`\n          <a href=\"${ifDefined(this.href)}\">\n            <span><slot></slot></span>\n          </a>\n        `,\n        () => html`<span><slot></slot></span>`,\n      )}\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-navigation-item': NavigationItem;\n  }\n}\n", "export default `:host {\n  ---wcp-navigation-item-spacing: var(--wcp-navigation-item-spacing, calc(var(--wcp-base-size, 10px) * 0.75) calc(var(--wcp-base-size, 10px) * 2));\n  ---wcp-navigation-item-dark-passive-background: var(--wcp-navigation-item-dark-passive-background, transparent);\n  ---wcp-navigation-item-dark-passive-color: var(--wcp-navigation-item-dark-passive-color, inherit);\n  ---wcp-navigation-item-dark-hover-background: var(--wcp-navigation-item-dark-hover-background, var(--wcp-color-blue-17));\n  ---wcp-navigation-item-dark-hover-color: var(--wcp-navigation-item-dark-hover-color, inherit);\n  ---wcp-navigation-item-dark-active-background: var(--wcp-navigation-item-dark-active-background, var(--wcp-color-blue-20));\n  ---wcp-navigation-item-dark-active-color: var(--wcp-navigation-item-dark-active-color, inherit);\n  ---wcp-navigation-item-light-passive-background: var(--wcp-navigation-item-light-passive-background, transparent);\n  ---wcp-navigation-item-light-passive-color: var(--wcp-navigation-item-light-passive-color, inherit);\n  ---wcp-navigation-item-light-hover-background: var(--wcp-navigation-item-light-hover-background, var(--wcp-color-blue-24));\n  ---wcp-navigation-item-light-hover-color: var(--wcp-navigation-item-light-hover-color, inherit);\n  ---wcp-navigation-item-light-active-background: var(--wcp-navigation-item-light-active-background, var(--wcp-color-blue-27));\n  ---wcp-navigation-item-light-active-color: var(--wcp-navigation-item-light-active-color, inherit);\n}\n\n@media (prefers-color-scheme: dark) {\n  :host(:not([active])) {\n    ---wcp-navigation-item-background: var(---wcp-navigation-item-dark-passive-background);\n    ---wcp-navigation-item-color: var(---wcp-navigation-item-dark-passive-color);\n  }\n}\n:host([color-scheme=dark]):host(:not([active])) {\n  ---wcp-navigation-item-background: var(---wcp-navigation-item-dark-passive-background);\n  ---wcp-navigation-item-color: var(---wcp-navigation-item-dark-passive-color);\n}\n\n@media (prefers-color-scheme: light) {\n  :host(:not([active])) {\n    ---wcp-navigation-item-background: var(---wcp-navigation-item-light-passive-background);\n    ---wcp-navigation-item-color: var(---wcp-navigation-item-light-passive-color);\n  }\n}\n:host([color-scheme=light]):host(:not([active])) {\n  ---wcp-navigation-item-background: var(---wcp-navigation-item-light-passive-background);\n  ---wcp-navigation-item-color: var(---wcp-navigation-item-light-passive-color);\n}\n\n@media (prefers-color-scheme: dark) {\n  :host([active]) {\n    ---wcp-navigation-item-background: var(---wcp-navigation-item-dark-active-background);\n    ---wcp-navigation-item-color: var(---wcp-navigation-item-dark-active-color);\n  }\n}\n:host([color-scheme=dark]):host([active]) {\n  ---wcp-navigation-item-background: var(---wcp-navigation-item-dark-active-background);\n  ---wcp-navigation-item-color: var(---wcp-navigation-item-dark-active-color);\n}\n\n@media (prefers-color-scheme: light) {\n  :host([active]) {\n    ---wcp-navigation-item-background: var(---wcp-navigation-item-light-active-background);\n    ---wcp-navigation-item-color: var(---wcp-navigation-item-light-active-color);\n  }\n}\n:host([color-scheme=light]):host([active]) {\n  ---wcp-navigation-item-background: var(---wcp-navigation-item-light-active-background);\n  ---wcp-navigation-item-color: var(---wcp-navigation-item-light-active-color);\n}\n\n@media (prefers-color-scheme: dark) {\n  :host(:not([active])) a:hover {\n    ---wcp-navigation-item-background: var(---wcp-navigation-item-dark-hover-background);\n    ---wcp-navigation-item-color: var(---wcp-navigation-item-dark-hover-color);\n  }\n}\n:host([color-scheme=dark]):host(:not([active])) a:hover {\n  ---wcp-navigation-item-background: var(---wcp-navigation-item-dark-hover-background);\n  ---wcp-navigation-item-color: var(---wcp-navigation-item-dark-hover-color);\n}\n\n@media (prefers-color-scheme: light) {\n  :host(:not([active])) a:hover {\n    ---wcp-navigation-item-background: var(---wcp-navigation-item-light-hover-background);\n    ---wcp-navigation-item-color: var(---wcp-navigation-item-light-hover-color);\n  }\n}\n:host([color-scheme=light]):host(:not([active])) a:hover {\n  ---wcp-navigation-item-background: var(---wcp-navigation-item-light-hover-background);\n  ---wcp-navigation-item-color: var(---wcp-navigation-item-light-hover-color);\n}\n\nspan {\n  display: block;\n  padding: var(---wcp-navigation-item-spacing);\n  overflow: hidden;\n  -webkit-text-decoration: none;\n  text-decoration: none;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  background-color: var(---wcp-navigation-item-background);\n  color: var(---wcp-navigation-item-color);\n}\n\na {\n  position: relative;\n  color: inherit;\n  -webkit-text-decoration: none;\n  text-decoration: none;\n}\na::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  right: 100%;\n  bottom: 0;\n  left: auto;\n  width: calc(100vw - 100%);\n  width: calc(var(---wcp-aside-max-width, 100vw) - 100%);\n  background-color: var(---wcp-navigation-item-background);\n}\n/*# sourceMappingURL=data:application/json;base64, */`;\n", "import { html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement, eventOptions, property } from 'lit/decorators.js';\nimport { when } from 'lit/directives/when.js';\n\nimport { ColorSchemable } from '@/mixins/color-schemable.mixin.js';\n\nimport styles from './navigation-search.component.scss';\n\n/**\n * @emits wcp-navigation-search:search - Fired when the search term changes. Carries the new search term with it.\n *\n * @cssprop --wcp-navigation-search-spacing - The spacing around the search input.\n *\n * @cssprop --wcp-navigation-search-dark-border-color - The border color of the search input in dark mode.\n * @cssprop --wcp-navigation-search-light-border-color - The border color of the search input in light mode.\n *\n * @cssprop --wcp-navigation-search-passive-dark-stroke - The stroke color of the search input in dark mode when not focused.\n * @cssprop --wcp-navigation-search-passive-light-stroke - The stroke color of the search input in light mode when not focused.\n *\n * @cssprop --wcp-navigation-search-active-dark-stroke - The stroke color of the search input in dark mode when focused.\n * @cssprop --wcp-navigation-search-active-light-stroke - The stroke color of the search input in light mode when focused.\n */\n@customElement('wcp-navigation-search')\nexport class NavigationSearch extends ColorSchemable(LitElement) {\n  static override readonly styles = unsafeCSS(styles);\n\n  @property({ type: String, reflect: true })\n  term = '';\n\n  @eventOptions({ passive: true })\n  protected handleSearchInput(event: InputEvent) {\n    const { value } = event.target as HTMLInputElement;\n    this.#updateSearchTerm(value);\n  }\n\n  @eventOptions({ passive: true })\n  protected handleResetClick() {\n    this.#updateSearchTerm('');\n  }\n\n  #updateSearchTerm(term: string) {\n    this.term = term;\n    this.dispatchEvent(new CustomEvent('wcp-navigation-search:search', { detail: term }));\n  }\n\n  protected override render(): TemplateResult {\n    return html`\n      <wcp-input-text type=\"search\" .value=\"${this.term}\" @input=\"${this.handleSearchInput}\">\n        <wcp-icon slot=\"before\" name=\"search\"></wcp-icon>\n        ${when(\n          this.term.length > 0,\n          () => html`\n            <wcp-button slot=\"after\" kind=\"icon\" @click=\"${this.handleResetClick}\">\n              <wcp-icon name=\"close\"></wcp-icon>\n            </wcp-button>\n          `,\n        )}\n      </wcp-input-text>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementEventMap {\n    'wcp-navigation-search:search': CustomEvent<string>;\n  }\n\n  interface HTMLElementTagNameMap {\n    'wcp-navigation-search': NavigationSearch;\n  }\n}\n", "export default `:host {\n  ---wcp-navigation-search-spacing: var(--wcp-navigation-search-spacing, 0 calc(var(--wcp-base-size, 10px) * 1) calc(var(--wcp-base-size, 10px) * 1));\n  ---wcp-navigation-search-dark-border-color: var(--wcp-navigation-search-dark-border-color, var(--wcp-color-grey-24));\n  ---wcp-navigation-search-light-border-color: var(--wcp-navigation-search-light-border-color, var(--wcp-color-blue-24));\n  ---wcp-navigation-search-passive-dark-stroke: var(--wcp-navigation-search-passive-dark-stroke, var(--wcp-color-grey-24));\n  ---wcp-navigation-search-passive-light-stroke: var(--wcp-navigation-search-passive-light-stroke, var(--wcp-color-blue-24));\n}\n@media (prefers-color-scheme: dark) {\n  :host {\n    ---wcp-navigation-search-border-color: var(---wcp-navigation-search-dark-border-color);\n    ---wcp-navigation-search-passive-stroke: var(---wcp-navigation-search-passive-dark-stroke);\n  }\n}\n:host([color-scheme=dark]):host {\n  ---wcp-navigation-search-border-color: var(---wcp-navigation-search-dark-border-color);\n  ---wcp-navigation-search-passive-stroke: var(---wcp-navigation-search-passive-dark-stroke);\n}\n\n@media (prefers-color-scheme: light) {\n  :host {\n    ---wcp-navigation-search-border-color: var(---wcp-navigation-search-light-border-color);\n    ---wcp-navigation-search-passive-stroke: var(---wcp-navigation-search-passive-light-stroke);\n  }\n}\n:host([color-scheme=light]):host {\n  ---wcp-navigation-search-border-color: var(---wcp-navigation-search-light-border-color);\n  ---wcp-navigation-search-passive-stroke: var(---wcp-navigation-search-passive-light-stroke);\n}\n\n:host {\n  ---wcp-navigation-search-stroke: var(---wcp-navigation-search-passive-stroke);\n  --wcp-input-text-dark-border: var(---wcp-navigation-search-passive-dark-stroke);\n  --wcp-input-text-light-border: var(---wcp-navigation-search-passive-light-stroke);\n}\n\n:host(:focus-within) {\n  ---wcp-navigation-search-stroke: var(---wcp-navigation-search-active-stroke);\n  --wcp-input-text-dark-border: var(---wcp-navigation-search-active-dark-stroke);\n  --wcp-input-text-light-border: var(---wcp-navigation-search-active-light-stroke);\n}\n\n:host {\n  display: block;\n  padding: var(---wcp-navigation-search-spacing);\n  line-height: 1;\n  border-bottom: 1px solid var(---wcp-navigation-search-border-color);\n}\n\nwcp-icon[name=search] {\n  --wcp-icon-size: 18;\n  color: var(---wcp-navigation-search-stroke);\n  padding-left: calc(10px * 1);\n  padding-left: calc(var(--wcp-base-size, 10px) * 1);\n  pointer-events: none;\n}\n\nwcp-button {\n  margin: calc(10px * 0.1) calc(10px * 0.3) 0 0;\n  margin: calc(var(--wcp-base-size, 10px) * 0.1) calc(var(--wcp-base-size, 10px) * 0.3) 0 0;\n}\nwcp-button::part(button) {\n  color: var(---wcp-navigation-search-stroke);\n  padding: calc(10px * 0.1);\n  padding: calc(var(--wcp-base-size, 10px) * 0.1);\n}\n/*# sourceMappingURL=data:application/json;base64, */`;\n", "import { html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement, eventOptions, property, state } from 'lit/decorators.js';\nimport { map } from 'lit/directives/map.js';\nimport { ref } from 'lit/directives/ref.js';\nimport { when } from 'lit/directives/when.js';\nimport { html as staticHtml, unsafeStatic } from 'lit/static-html.js';\n\nimport { ColorSchemable } from '@/mixins/color-schemable.mixin.js';\nimport { getConfig } from '@/utils/config.utils.js';\nimport { listen } from '@/utils/decorator.utils.js';\n\nimport styles from './preview.component.scss';\n\n/**\n * Previews given content.\n *\n * @cssprop --wcp-preview-menu-dark-border-color - Border color of the plugin menu in dark mode.\n * @cssprop --wcp-preview-menu-light-border-color - Border color of the plugin menu in light mode.\n *\n * @slot - The content to preview.\n *\n */\n@customElement('wcp-preview')\nexport class Preview extends ColorSchemable(LitElement) {\n  static override readonly styles = unsafeCSS(styles);\n\n  readonly #config = getConfig();\n\n  @state()\n  private container?: HTMLElement;\n\n  @property({ type: String, reflect: true, attribute: 'preview-tag-name' })\n  previewTagName?: string;\n\n  @eventOptions({ passive: true })\n  @listen('hashchange', 'window')\n  protected handleRouteChange() {\n    this.requestUpdate();\n  }\n\n  private handleContainerRef(container?: Element) {\n    this.container = container as HTMLDivElement | undefined;\n  }\n\n  protected override render(): TemplateResult {\n    return html`\n      <section>\n        <div id=\"wrapper\">\n          <div id=\"stage\" ${ref(this.handleContainerRef)}>\n            <slot></slot>\n          </div>\n        </div>\n      </section>\n\n      ${when(\n        this.container !== undefined,\n        () => html`\n          <nav>\n            ${map(\n              this.#config?.previewPlugins ?? [],\n              (plugin, index) => html`\n                ${when(index > 0, () => html`<hr />`)} ${staticHtml`\n                  <${unsafeStatic(plugin)}\n                    class=\"plugin\"\n                    .container=\"${this.container}\"\n                    preview-tag-name=\"${this.previewTagName}\"\n                  ></${unsafeStatic(plugin)}>\n                `}\n              `,\n            )}\n          </nav>\n        `,\n      )}\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-preview': Preview;\n  }\n}\n", "import type { ReactiveElement } from 'lit';\n\nexport type ListenerFn<E> = (e: E) => void;\n\nexport type TargetMap = {\n  host: typeof ReactiveElement;\n  body: typeof document.body;\n  document: typeof document;\n  window: typeof window;\n};\n\nexport type TargetEventMap = {\n  host: HTMLElementEventMap;\n  body: HTMLBodyElementEventMap & HTMLElementEventMap;\n  document: DocumentEventMap & HTMLElementEventMap;\n  window: WindowEventMap & HTMLElementEventMap;\n};\n\nexport function listen<B extends keyof TargetMap, T extends keyof TargetEventMap[B]>(type: T, bindTo?: B) {\n  return function (ctor: ReactiveElement, name: PropertyKey) {\n    // map the listener target\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let target: any;\n    switch (bindTo) {\n      case undefined:\n      case 'host':\n        target = ctor;\n        break;\n      case 'body':\n        target = document.body;\n        break;\n      case 'document':\n        target = document;\n        break;\n      case 'window':\n        target = window;\n        break;\n    }\n\n    // prepare a bound listener\n    const listener = ctor[name as keyof ReactiveElement] as ListenerFn<TargetEventMap[B][T]>;\n    let boundListener: unknown;\n\n    // read event options from original listener which might have been decorated as well\n    const eventOptions = (): AddEventListenerOptions => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const { capture, passive, once } = listener as any;\n      return { capture, passive, once };\n    };\n\n    // store existing callbacks and use them with monkey patching original callbacks\n    const { connectedCallback, disconnectedCallback } = ctor;\n    ctor.connectedCallback = function (this: ReactiveElement, ...args) {\n      connectedCallback.call(this, ...args);\n      boundListener = listener.bind(this);\n      target.addEventListener(type, boundListener, eventOptions());\n    };\n    ctor.disconnectedCallback = function (this: ReactiveElement, ...args) {\n      target.removeEventListener(type, boundListener, eventOptions());\n      disconnectedCallback.call(this, ...args);\n    };\n  };\n}\n", "export default `:host {\n  ---wcp-preview-menu-dark-border-color: var(--wcp-frame-menu-dark-border-color, var(--wcp-color-grey-24));\n  ---wcp-preview-menu-light-border-color: var(--wcp-frame-menu-light-border-color, var(--wcp-color-grey-65));\n}\n\n:host {\n  display: block;\n  position: relative;\n  min-height: calc(10px * 4.2);\n  min-height: calc(var(--wcp-base-size, 10px) * 4.2);\n}\n@media (prefers-color-scheme: dark) {\n  :host {\n    ---wcp-preview-menu-border-color: var(---wcp-preview-menu-dark-border-color);\n  }\n}\n:host([color-scheme=dark]):host {\n  ---wcp-preview-menu-border-color: var(---wcp-preview-menu-dark-border-color);\n}\n\n@media (prefers-color-scheme: light) {\n  :host {\n    ---wcp-preview-menu-border-color: var(---wcp-preview-menu-light-border-color);\n  }\n}\n:host([color-scheme=light]):host {\n  ---wcp-preview-menu-border-color: var(---wcp-preview-menu-light-border-color);\n}\n\n:host {\n  display: flex;\n  flex-direction: column-reverse;\n}\n\nnav {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 0 calc(10px * 1);\n  gap: 0 calc(var(--wcp-base-size, 10px) * 1);\n  align-items: center;\n  justify-content: flex-start;\n  border-bottom: 1px solid var(---wcp-preview-menu-border-color);\n}\n\n.plugin:not([available]) {\n  display: none;\n}\n\nhr {\n  margin: 0;\n  padding: 0;\n  height: calc(10px * 2.2);\n  height: calc(var(--wcp-base-size, 10px) * 2.2);\n  width: 1px;\n  background-color: var(---wcp-preview-menu-border-color);\n  border: 0;\n}\nhr:has(+ .plugin:not([available])) {\n  display: none;\n}\n\nsection {\n  position: relative;\n  isolation: isolate;\n  padding: 10px;\n}\n\n#wrapper {\n  position: relative;\n  margin: 0 auto;\n}\n\n#stage {\n  container: wcp-preview-stage/inline-size;\n  display: block;\n  contain: content;\n  isolation: isolate;\n  scrollbar-color: var(--wcp-color-blue-34) transparent;\n  overflow: auto;\n}\n#stage::-webkit-scrollbar {\n  width: 0.5rem;\n}\n#stage::-webkit-scrollbar-thumb {\n  background-color: var(--wcp-color-blue-34);\n  border-radius: 0.5rem;\n}\n#stage::-webkit-scrollbar-track {\n  display: none;\n  background-color: transparent;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2NsaWVudC9jbGllbnQvc3JjL2NvbXBvbmVudHMvZmVhdHVyZXMvcHJldmlldy9wcmV2aWV3LmNvbXBvbmVudC5zY3NzIiwiOmhvc3QlMjAlN0IlMEElMjAlMjAtLS13Y3AtcHJldmlldy1tZW51LWRhcmstYm9yZGVyLWNvbG9yOiUyMHZhcigtLXdjcC1mcmFtZS1tZW51LWRhcmstYm9yZGVyLWNvbG9yLCUyMHZhcigtLXdjcC1jb2xvci1ncmV5LTI0KSk7JTBBJTIwJTIwLS0td2NwLXByZXZpZXctbWVudS1saWdodC1ib3JkZXItY29sb3I6JTIwdmFyKC0td2NwLWZyYW1lLW1lbnUtbGlnaHQtYm9yZGVyLWNvbG9yLCUyMHZhcigtLXdjcC1jb2xvci1ncmV5LTY1KSk7JTBBJTdEJTBBJTBBOmhvc3QlMjAlN0IlMEElMjAlMjBkaXNwbGF5OiUyMGJsb2NrOyUwQSUyMCUyMHBvc2l0aW9uOiUyMHJlbGF0aXZlOyUwQSUyMCUyMG1pbi1oZWlnaHQ6JTIwY2FsYyh2YXIoLS13Y3AtYmFzZS1zaXplLCUyMDEwcHgpJTIwKiUyMDQuMik7JTBBJTdEJTBBQG1lZGlhJTIwKHByZWZlcnMtY29sb3Itc2NoZW1lOiUyMGRhcmspJTIwJTdCJTBBJTIwJTIwOmhvc3QlMjAlN0IlMEElMjAlMjAlMjAlMjAtLS13Y3AtcHJldmlldy1tZW51LWJvcmRlci1jb2xvcjolMjB2YXIoLS0td2NwLXByZXZpZXctbWVudS1kYXJrLWJvcmRlci1jb2xvcik7JTBBJTIwJTIwJTdEJTBBJTdEJTBBOmhvc3QoJTVCY29sb3Itc2NoZW1lPWRhcmslNUQpOmhvc3QlMjAlN0IlMEElMjAlMjAtLS13Y3AtcHJldmlldy1tZW51LWJvcmRlci1jb2xvcjolMjB2YXIoLS0td2NwLXByZXZpZXctbWVudS1kYXJrLWJvcmRlci1jb2xvcik7JTBBJTdEJTBBJTBBQG1lZGlhJTIwKHByZWZlcnMtY29sb3Itc2NoZW1lOiUyMGxpZ2h0KSUyMCU3QiUwQSUyMCUyMDpob3N0JTIwJTdCJTBBJTIwJTIwJTIwJTIwLS0td2NwLXByZXZpZXctbWVudS1ib3JkZXItY29sb3I6JTIwdmFyKC0tLXdjcC1wcmV2aWV3LW1lbnUtbGlnaHQtYm9yZGVyLWNvbG9yKTslMEElMjAlMjAlN0QlMEElN0QlMEE6aG9zdCglNUJjb2xvci1zY2hlbWU9bGlnaHQlNUQpOmhvc3QlMjAlN0IlMEElMjAlMjAtLS13Y3AtcHJldmlldy1tZW51LWJvcmRlci1jb2xvcjolMjB2YXIoLS0td2NwLXByZXZpZXctbWVudS1saWdodC1ib3JkZXItY29sb3IpOyUwQSU3RCUwQSUwQTpob3N0JTIwJTdCJTBBJTIwJTIwZGlzcGxheTolMjBmbGV4OyUwQSUyMCUyMGZsZXgtZGlyZWN0aW9uOiUyMGNvbHVtbi1yZXZlcnNlOyUwQSU3RCUwQSUwQW5hdiUyMCU3QiUwQSUyMCUyMGRpc3BsYXk6JTIwZmxleDslMEElMjAlMjBmbGV4LWRpcmVjdGlvbjolMjByb3c7JTBBJTIwJTIwZmxleC13cmFwOiUyMHdyYXA7JTBBJTIwJTIwZ2FwOiUyMDAlMjBjYWxjKHZhcigtLXdjcC1iYXNlLXNpemUsJTIwMTBweCklMjAqJTIwMSk7JTBBJTIwJTIwYWxpZ24taXRlbXM6JTIwY2VudGVyOyUwQSUyMCUyMGp1c3RpZnktY29udGVudDolMjBmbGV4LXN0YXJ0OyUwQSUyMCUyMGJvcmRlci1ib3R0b206JTIwMXB4JTIwc29saWQlMjB2YXIoLS0td2NwLXByZXZpZXctbWVudS1ib3JkZXItY29sb3IpOyUwQSU3RCUwQSUwQS5wbHVnaW46bm90KCU1QmF2YWlsYWJsZSU1RCklMjAlN0IlMEElMjAlMjBkaXNwbGF5OiUyMG5vbmU7JTBBJTdEJTBBJTBBaHIlMjAlN0IlMEElMjAlMjBtYXJnaW46JTIwMDslMEElMjAlMjBwYWRkaW5nOiUyMDA7JTBBJTIwJTIwaGVpZ2h0OiUyMGNhbGModmFyKC0td2NwLWJhc2Utc2l6ZSwlMjAxMHB4KSUyMColMjAyLjIpOyUwQSUyMCUyMHdpZHRoOiUyMDFweDslMEElMjAlMjBiYWNrZ3JvdW5kLWNvbG9yOiUyMHZhcigtLS13Y3AtcHJldmlldy1tZW51LWJvcmRlci1jb2xvcik7JTBBJTIwJTIwYm9yZGVyOiUyMDA7JTBBJTdEJTBBaHI6aGFzKCslMjAucGx1Z2luOm5vdCglNUJhdmFpbGFibGUlNUQpKSUyMCU3QiUwQSUyMCUyMGRpc3BsYXk6JTIwbm9uZTslMEElN0QlMEElMEFzZWN0aW9uJTIwJTdCJTBBJTIwJTIwcG9zaXRpb246JTIwcmVsYXRpdmU7JTBBJTIwJTIwaXNvbGF0aW9uOiUyMGlzb2xhdGU7JTBBJTIwJTIwcGFkZGluZzolMjAxMHB4OyUwQSU3RCUwQSUwQSUyM3dyYXBwZXIlMjAlN0IlMEElMjAlMjBwb3NpdGlvbjolMjByZWxhdGl2ZTslMEElMjAlMjBtYXJnaW46JTIwMCUyMGF1dG87JTBBJTdEJTBBJTBBJTIzc3RhZ2UlMjAlN0IlMEElMjAlMjBjb250YWluZXI6JTIwd2NwLXByZXZpZXctc3RhZ2UvaW5saW5lLXNpemU7JTBBJTIwJTIwZGlzcGxheTolMjBibG9jazslMEElMjAlMjBjb250YWluOiUyMGNvbnRlbnQ7JTBBJTIwJTIwaXNvbGF0aW9uOiUyMGlzb2xhdGU7JTBBJTIwJTIwc2Nyb2xsYmFyLWNvbG9yOiUyMHZhcigtLXdjcC1jb2xvci1ibHVlLTM0KSUyMHRyYW5zcGFyZW50OyUwQSUyMCUyMG92ZXJmbG93OiUyMGF1dG87JTBBJTdEJTBBJTIzc3RhZ2U6Oi13ZWJraXQtc2Nyb2xsYmFyJTIwJTdCJTBBJTIwJTIwd2lkdGg6JTIwMC41cmVtOyUwQSU3RCUwQSUyM3N0YWdlOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiUyMCU3QiUwQSUyMCUyMGJhY2tncm91bmQtY29sb3I6JTIwdmFyKC0td2NwLWNvbG9yLWJsdWUtMzQpOyUwQSUyMCUyMGJvcmRlci1yYWRpdXM6JTIwMC41cmVtOyUwQSU3RCUwQSUyM3N0YWdlOjotd2Via2l0LXNjcm9sbGJhci10cmFjayUyMCU3QiUwQSUyMCUyMGRpc3BsYXk6JTIwbm9uZTslMEElMjAlMjBiYWNrZ3JvdW5kLWNvbG9yOiUyMHRyYW5zcGFyZW50OyUwQSU3RCUwQS8qJTIzJTIwc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWU2IyOTBJam9pTDJodmJXVXZjblZ1Ym1WeUwzZHZjbXN2WTJ4cFpXNTBMMk5zYVdWdWRDOXpjbU12WTI5dGNHOXVaVzUwY3k5bVpXRjBkWEpsY3k5d2NtVjJhV1YzSWl3aWMyOTFjbU5sY3lJNld5SndjbVYyYVdWM0xtTnZiWEJ2Ym1WdWRDNXpZM056SWl3aUxpNHZMaTR2TGk0dmMzUjViR1Z6TDIxcGVHbHVjeTlqYjJ4dmNpMXpZMmhsYldVdWJXbDRhVzR1YzJOemN5SXNJaTR1THk0dUx5NHVMM04wZVd4bGN5OXRhWGhwYm5NdlkzVnpkRzl0TFhOamNtOXNiR0poY2k1dGFYaHBiaTV6WTNOeklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVVkJPMFZCUTBVN1JVRkRRVHM3TzBGQlIwWTdSVUZEUlR0RlFVTkJPMFZCUTBFN08wRkRZMEU3UlVScVFrWTdTVUZOU1RzN08wRkRVRVU3UlVSUFJqczdPMEZEVjBZN1JVUnFRa1k3U1VGTlNUczdPMEZEVUVVN1JVUlBSanM3TzBGQlNVbzdSVUZEUlR0RlFVTkJPenM3UVVGSFJqdEZRVU5GTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUlVFN1JVRkRRVHRGUVVOQk96czdRVUZIUmp0RlFVTkZPenM3UVVGSFJqdEZRVU5GTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUlVFN1JVRkRRVHM3UVVGRlFUdEZRVU5GT3pzN1FVRkpTanRGUVVORk8wVkJRMEU3UlVGRFFUczdPMEZCUjBZN1JVRkRSVHRGUVVOQk96czdRVUZIUmp0RlFVTkZPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkZMMFJCTzBWR2EwVkZPenRCUldoRlJqdEZRVU5GT3p0QlFVZEdPMFZCUTBVN1JVRkRRVHM3UVVGSFJqdEZRVU5GTzBWQlEwRWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpBZFhObElDZEFMM04wZVd4bGN5OTFkR2xzY3ljZ1lYTWdkWFJwYkhNN1hHNWNianBvYjNOMElIdGNiaUFnTFMwdGQyTndMWEJ5WlhacFpYY3RiV1Z1ZFMxa1lYSnJMV0p2Y21SbGNpMWpiMnh2Y2pvZ2RtRnlLQzB0ZDJOd0xXWnlZVzFsTFcxbGJuVXRaR0Z5YXkxaWIzSmtaWEl0WTI5c2IzSXNJSFpoY2lndExYZGpjQzFqYjJ4dmNpMW5jbVY1TFRJMEtTazdYRzRnSUMwdExYZGpjQzF3Y21WMmFXVjNMVzFsYm5VdGJHbG5hSFF0WW05eVpHVnlMV052Ykc5eU9pQjJZWElvTFMxM1kzQXRabkpoYldVdGJXVnVkUzFzYVdkb2RDMWliM0prWlhJdFkyOXNiM0lzSUhaaGNpZ3RMWGRqY0MxamIyeHZjaTFuY21WNUxUWTFLU2s3WEc1OVhHNWNianBvYjNOMElIdGNiaUFnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JpQWdiV2x1TFdobGFXZG9kRG9nZFhScGJITXVjMmw2WlNnMExqSXBPMXh1WEc0Z0lFQnBibU5zZFdSbElIVjBhV3h6TG1OdmJHOXlMWE5qYUdWdFpTZ3BJSFZ6YVc1bklDZ2tZMjlzYjNJdGMyTm9aVzFsS1NCN1hHNGdJQ0FnTFMwdGQyTndMWEJ5WlhacFpYY3RiV1Z1ZFMxaWIzSmtaWEl0WTI5c2IzSTZJSFpoY2lndExTMTNZM0F0Y0hKbGRtbGxkeTF0Wlc1MUxTTjdKR052Ykc5eUxYTmphR1Z0WlgwdFltOXlaR1Z5TFdOdmJHOXlLVHRjYmlBZ2ZWeHVmVnh1WEc0NmFHOXpkQ0I3WEc0Z0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lHWnNaWGd0WkdseVpXTjBhVzl1T2lCamIyeDFiVzR0Y21WMlpYSnpaVHRjYm4xY2JseHVibUYySUh0Y2JpQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdabXhsZUMxa2FYSmxZM1JwYjI0NklISnZkenRjYmlBZ1pteGxlQzEzY21Gd09pQjNjbUZ3TzF4dUlDQm5ZWEE2SURBZ2RYUnBiSE11YzJsNlpTZ3hLVHRjYmx4dUlDQmhiR2xuYmkxcGRHVnRjem9nWTJWdWRHVnlPMXh1SUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUdac1pYZ3RjM1JoY25RN1hHNGdJR0p2Y21SbGNpMWliM1IwYjIwNklERndlQ0J6YjJ4cFpDQjJZWElvTFMwdGQyTndMWEJ5WlhacFpYY3RiV1Z1ZFMxaWIzSmtaWEl0WTI5c2IzSXBPMXh1ZlZ4dVhHNHVjR3gxWjJsdU9tNXZkQ2hiWVhaaGFXeGhZbXhsWFNrZ2UxeHVJQ0JrYVhOd2JHRjVPaUJ1YjI1bE8xeHVmVnh1WEc1b2NpQjdYRzRnSUcxaGNtZHBiam9nTUR0Y2JpQWdjR0ZrWkdsdVp6b2dNRHRjYmlBZ2FHVnBaMmgwT2lCMWRHbHNjeTV6YVhwbEtESXVNaWs3WEc0Z0lIZHBaSFJvT2lBeGNIZzdYRzVjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2RtRnlLQzB0TFhkamNDMXdjbVYyYVdWM0xXMWxiblV0WW05eVpHVnlMV052Ykc5eUtUdGNiaUFnWW05eVpHVnlPaUF3TzF4dVhHNGdJQ1k2YUdGektDc2dMbkJzZFdkcGJqcHViM1FvVzJGMllXbHNZV0pzWlYwcEtTQjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ2JtOXVaVHRjYmlBZ2ZWeHVmVnh1WEc1elpXTjBhVzl1SUh0Y2JpQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNCcGMyOXNZWFJwYjI0NklHbHpiMnhoZEdVN1hHNGdJSEJoWkdScGJtYzZJREV3Y0hnN1hHNTlYRzVjYmlOM2NtRndjR1Z5SUh0Y2JpQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNCdFlYSm5hVzQ2SURBZ1lYVjBienRjYm4xY2JseHVJM04wWVdkbElIdGNiaUFnWTI5dWRHRnBibVZ5T2lCM1kzQXRjSEpsZG1sbGR5MXpkR0ZuWlNBdklHbHViR2x1WlMxemFYcGxPMXh1SUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ1kyOXVkR0ZwYmpvZ1kyOXVkR1Z1ZER0Y2JpQWdhWE52YkdGMGFXOXVPaUJwYzI5c1lYUmxPMXh1WEc0Z0lFQnBibU5zZFdSbElIVjBhV3h6TG1OMWMzUnZiUzF6WTNKdmJHeGlZWElvS1NCN1hHNGdJQ0FnYjNabGNtWnNiM2M2SUdGMWRHODdYRzRnSUgxY2JuMWNiaUlzSWtCdGFYaHBiaUIzYVhSb0xXTnZiRzl5TFhOamFHVnRaUzFoZEhSeWFXSjFkR1VvSkdOdmJHOXlMWE5qYUdWdFpTd2dKSE5vWVdSdmR6b2dkSEoxWlN3Z0pHRndjR1Z1WkRvZ1ptRnNjMlVwSUh0Y2JpQWdKRzF2WkdsbWFXVnlPaUFuVzJOdmJHOXlMWE5qYUdWdFpUMWNJaU43SkdOdmJHOXlMWE5qYUdWdFpYMWNJbDBuTzF4dUlDQWtiVzlrYVdacFpXUTZJR2xtS0NSemFHRmtiM2NzSUNjNmFHOXpkQ2dqZXlSdGIyUnBabWxsY24wcEp5d2dKRzF2WkdsbWFXVnlLVHRjYmx4dUlDQkFhV1lnSkdGd2NHVnVaQ0E5UFNCeWIyOTBJSHRjYmlBZ0lDQkFZWFF0Y205dmRDQW9kMmwwYUc5MWREb2dZV3hzS1NCN1hHNGdJQ0FnSUNBamV5UnRiMlJwWm1sbFpIMGpleVo5SUh0Y2JpQWdJQ0FnSUNBZ1FHTnZiblJsYm5RN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlJRUJsYkhObElHbG1JQ1JoY0hCbGJtUWdQVDBnY0dGeVpXNTBJSHRjYmlBZ0lDQkFZWFF0Y205dmRDQW9kMmwwYUc5MWREb2dZV3hzS1NCN1hHNGdJQ0FnSUNBamV5WjlJM3NrYlc5a2FXWnBaV1I5SUh0Y2JpQWdJQ0FnSUNBZ1FHTnZiblJsYm5RN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlJRUJsYkhObElIdGNiaUFnSUNBamV5UnRiMlJwWm1sbFpIMGdlMXh1SUNBZ0lDQWdRR052Ym5SbGJuUTdYRzRnSUNBZ2ZWeHVJQ0I5WEc1OVhHNWNia0J0YVhocGJpQjNhWFJvTFdOdmJHOXlMWE5qYUdWdFpTMXRaV1JwWVNna1kyOXNiM0l0YzJOb1pXMWxLU0I3WEc0Z0lFQnRaV1JwWVNBb2NISmxabVZ5Y3kxamIyeHZjaTF6WTJobGJXVTZJQ043SkdOdmJHOXlMWE5qYUdWdFpYMHBJSHRjYmlBZ0lDQkFZMjl1ZEdWdWREdGNiaUFnZlZ4dWZWeHVYRzR2THk4Z1EyOXNiM0lnVTJOb1pXMWxJRzFwZUdsdVhHNHZMeThnUVd4c2IzZHpJSFJ2SUdGd2NHeDVJSE4wZVd4bGN5QmlZWE5sWkNCdmJpQjBhR1VnVDFNZ1pHVm1ZWFZzZENCamIyeHZjaUJ6WTJobGJXVWdZVzVrSUdGdUlHOTJaWEp5YVdSbElHSjVJR0Z1SUdGMGRISnBZblYwWlNCelpXeGxZM1J2Y2x4dVFHMXBlR2x1SUdOdmJHOXlMWE5qYUdWdFpTaGNiaUFnSkhOb1lXUnZkem9nZEhKMVpTeGNiaUFnSkdGd2NHVnVaRG9nY205dmRDeGNiaUFnSkdOdmJHOXlMWE5qYUdWdFpYTTZJQ2hjYmlBZ0lDQmtZWEpyTEZ4dUlDQWdJR3hwWjJoMExGeHVJQ0FwWEc0cElIdGNiaUFnUUdWaFkyZ2dKR052Ykc5eUxYTmphR1Z0WlNCcGJpQWtZMjlzYjNJdGMyTm9aVzFsY3lCN1hHNGdJQ0FnTHk4Z2JXRjBZMmdnZEc4Z2JXVmthV0VnY1hWbGNua2dZbmtnVDFNZ1pHVm1ZWFZzZEZ4dUlDQWdJRUJwYm1Oc2RXUmxJSGRwZEdndFkyOXNiM0l0YzJOb1pXMWxMVzFsWkdsaEtDUmpiMnh2Y2kxelkyaGxiV1VwSUh0Y2JpQWdJQ0FnSUVCamIyNTBaVzUwSUNna1kyOXNiM0l0YzJOb1pXMWxLVHRjYmlBZ0lDQjlYRzRnSUNBZ0x5OGdiV0YwWTJnZ2RHOGdaV3hsYldWdWRDQmhkSFJ5YVdKMWRHVWdjMlZzWldOMGIzSWdiM1psY25KcFpHVmNiaUFnSUNCQWFXNWpiSFZrWlNCM2FYUm9MV052Ykc5eUxYTmphR1Z0WlMxaGRIUnlhV0oxZEdVb0pHTnZiRzl5TFhOamFHVnRaU3dnSkhOb1lXUnZkeXdnSkdGd2NHVnVaQ2tnZTF4dUlDQWdJQ0FnUUdOdmJuUmxiblFnS0NSamIyeHZjaTF6WTJobGJXVXBPMXh1SUNBZ0lIMWNiaUFnZlZ4dWZWeHVJaXdpUUhWelpTQW5MaTR2Wm5WdVkzUnBiMjV6TDNOcGVtVXVablZ1WTNScGIyNG5JR0Z6SUNvN1hHNWNia0J0YVhocGJpQmpkWE4wYjIwdGMyTnliMnhzWW1GeUtDUndjMlYxWkc4NklHSmxabTl5WlN3Z0pHeGxkbVZzT2lBeEtTQjdYRzRnSUhOamNtOXNiR0poY2kxamIyeHZjam9nZG1GeUtDMHRkMk53TFdOdmJHOXlMV0pzZFdVdE16UXBJSFJ5WVc1emNHRnlaVzUwTzF4dVhHNGdJQ1k2T2kxM1pXSnJhWFF0YzJOeWIyeHNZbUZ5SUh0Y2JpQWdJQ0IzYVdSMGFEb2dNQzQxY21WdE8xeHVJQ0I5WEc1Y2JpQWdKam82TFhkbFltdHBkQzF6WTNKdmJHeGlZWEl0ZEdoMWJXSWdlMXh1SUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklIWmhjaWd0TFhkamNDMWpiMnh2Y2kxaWJIVmxMVE0wS1R0Y2JpQWdJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXdMalZ5WlcwN1hHNGdJSDFjYmx4dUlDQW1Pam90ZDJWaWEybDBMWE5qY205c2JHSmhjaTEwY21GamF5QjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ2JtOXVaVHRjYmlBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQjBjbUZ1YzNCaGNtVnVkRHRjYmlBZ2ZWeHVYRzRnSUM4dklHRnNiRzkzSUc5MlpYSnlhV1JsY3lCcGJpQmpiM0p5WldOMElHOXlaR1Z5TENCMGFIVnpMQ0IwYUdWY2JpQWdMeThnY0c5emFYUnBiMjRnYjJZZ2RHaGxJRzFwZUdsdUlIVnpZV2RsSUdseklHNXZkQ0J5Wld4bGRtRnVkRnh1SUNCQVkyOXVkR1Z1ZER0Y2JuMWNiaUpkZlE9PSUyMCoiLCIvaG9tZS9ydW5uZXIvd29yay9jbGllbnQvY2xpZW50L3NyYy9zdHlsZXMvbWl4aW5zL2NvbG9yLXNjaGVtZS5taXhpbi5zY3NzIiwiL2hvbWUvcnVubmVyL3dvcmsvY2xpZW50L2NsaWVudC9zcmMvc3R5bGVzL21peGlucy9jdXN0b20tc2Nyb2xsYmFyLm1peGluLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDRSx3R0FBQTtFQUNBLDBHQUFBO0FDREY7O0FESUE7RUFDRSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSw0QkFBQTtFQUFBLGtEQUFBO0FDREY7QUNlRTtFRmpCRjtJQU1JLDRFQUFBO0VDQUY7QUFDRjtBQ1JNO0VGT0YsNEVBQUE7QUNJSjs7QUNPRTtFRmpCRjtJQU1JLDZFQUFBO0VDU0Y7QUFDRjtBQ2pCTTtFRk9GLDZFQUFBO0FDYUo7O0FEVEE7RUFDRSxhQUFBO0VBQ0EsOEJBQUE7QUNZRjs7QURUQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLGVBQUE7RUFDQSxxQkFBQTtFQUFBLDJDQUFBO0VBRUEsbUJBQUE7RUFDQSwyQkFBQTtFQUNBLDhEQUFBO0FDV0Y7O0FEUkE7RUFDRSxhQUFBO0FDV0Y7O0FEUkE7RUFDRSxTQUFBO0VBQ0EsVUFBQTtFQUNBLHdCQUFBO0VBQUEsOENBQUE7RUFDQSxVQUFBO0VBRUEsdURBQUE7RUFDQSxTQUFBO0FDVUY7QURSRTtFQUNFLGFBQUE7QUNVSjs7QUROQTtFQUNFLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxhQUFBO0FDU0Y7O0FETkE7RUFDRSxrQkFBQTtFQUNBLGNBQUE7QUNTRjs7QUROQTtFQUNFLHdDQUFBO0VBQ0EsY0FBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUcvREEscURBQUE7RUhrRUUsY0FBQTtBQ1FKO0FFeEVFO0VBQ0UsYUFBQTtBRjBFSjtBRXZFRTtFQUNFLDBDQUFBO0VBQ0EscUJBQUE7QUZ5RUo7QUV0RUU7RUFDRSxhQUFBO0VBQ0EsNkJBQUE7QUZ3RUoiLCJmaWxlIjoiOmhvc3Qge1xuICAtLS13Y3AtcHJldmlldy1tZW51LWRhcmstYm9yZGVyLWNvbG9yOiB2YXIoLS13Y3AtZnJhbWUtbWVudS1kYXJrLWJvcmRlci1jb2xvciwgdmFyKC0td2NwLWNvbG9yLWdyZXktMjQpKTtcbiAgLS0td2NwLXByZXZpZXctbWVudS1saWdodC1ib3JkZXItY29sb3I6IHZhcigtLXdjcC1mcmFtZS1tZW51LWxpZ2h0LWJvcmRlci1jb2xvciwgdmFyKC0td2NwLWNvbG9yLWdyZXktNjUpKTtcbn1cblxuOmhvc3Qge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtaW4taGVpZ2h0OiBjYWxjKHZhcigtLXdjcC1iYXNlLXNpemUsIDEwcHgpICogNC4yKTtcbn1cbkBtZWRpYSAocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspIHtcbiAgOmhvc3Qge1xuICAgIC0tLXdjcC1wcmV2aWV3LW1lbnUtYm9yZGVyLWNvbG9yOiB2YXIoLS0td2NwLXByZXZpZXctbWVudS1kYXJrLWJvcmRlci1jb2xvcik7XG4gIH1cbn1cbjpob3N0KFtjb2xvci1zY2hlbWU9ZGFya10pOmhvc3Qge1xuICAtLS13Y3AtcHJldmlldy1tZW51LWJvcmRlci1jb2xvcjogdmFyKC0tLXdjcC1wcmV2aWV3LW1lbnUtZGFyay1ib3JkZXItY29sb3IpO1xufVxuXG5AbWVkaWEgKHByZWZlcnMtY29sb3Itc2NoZW1lOiBsaWdodCkge1xuICA6aG9zdCB7XG4gICAgLS0td2NwLXByZXZpZXctbWVudS1ib3JkZXItY29sb3I6IHZhcigtLS13Y3AtcHJldmlldy1tZW51LWxpZ2h0LWJvcmRlci1jb2xvcik7XG4gIH1cbn1cbjpob3N0KFtjb2xvci1zY2hlbWU9bGlnaHRdKTpob3N0IHtcbiAgLS0td2NwLXByZXZpZXctbWVudS1ib3JkZXItY29sb3I6IHZhcigtLS13Y3AtcHJldmlldy1tZW51LWxpZ2h0LWJvcmRlci1jb2xvcik7XG59XG5cbjpob3N0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbi1yZXZlcnNlO1xufVxuXG5uYXYge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGdhcDogMCBjYWxjKHZhcigtLXdjcC1iYXNlLXNpemUsIDEwcHgpICogMSk7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHZhcigtLS13Y3AtcHJldmlldy1tZW51LWJvcmRlci1jb2xvcik7XG59XG5cbi5wbHVnaW46bm90KFthdmFpbGFibGVdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbmhyIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBoZWlnaHQ6IGNhbGModmFyKC0td2NwLWJhc2Utc2l6ZSwgMTBweCkgKiAyLjIpO1xuICB3aWR0aDogMXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS0td2NwLXByZXZpZXctbWVudS1ib3JkZXItY29sb3IpO1xuICBib3JkZXI6IDA7XG59XG5ocjpoYXMoKyAucGx1Z2luOm5vdChbYXZhaWxhYmxlXSkpIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuc2VjdGlvbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaXNvbGF0aW9uOiBpc29sYXRlO1xuICBwYWRkaW5nOiAxMHB4O1xufVxuXG4jd3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbiNzdGFnZSB7XG4gIGNvbnRhaW5lcjogd2NwLXByZXZpZXctc3RhZ2UvaW5saW5lLXNpemU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjb250YWluOiBjb250ZW50O1xuICBpc29sYXRpb246IGlzb2xhdGU7XG4gIHNjcm9sbGJhci1jb2xvcjogdmFyKC0td2NwLWNvbG9yLWJsdWUtMzQpIHRyYW5zcGFyZW50O1xuICBvdmVyZmxvdzogYXV0bztcbn1cbiNzdGFnZTo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICB3aWR0aDogMC41cmVtO1xufVxuI3N0YWdlOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXdjcC1jb2xvci1ibHVlLTM0KTtcbiAgYm9yZGVyLXJhZGl1czogMC41cmVtO1xufVxuI3N0YWdlOjotd2Via2l0LXNjcm9sbGJhci10cmFjayB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVlNiMjkwSWpvaUwyaHZiV1V2Y25WdWJtVnlMM2R2Y21zdlkyeHBaVzUwTDJOc2FXVnVkQzl6Y21NdlkyOXRjRzl1Wlc1MGN5OW1aV0YwZFhKbGN5OXdjbVYyYVdWM0lpd2ljMjkxY21ObGN5STZXeUp3Y21WMmFXVjNMbU52YlhCdmJtVnVkQzV6WTNOeklpd2lMaTR2TGk0dkxpNHZjM1I1YkdWekwyMXBlR2x1Y3k5amIyeHZjaTF6WTJobGJXVXViV2w0YVc0dWMyTnpjeUlzSWk0dUx5NHVMeTR1TDNOMGVXeGxjeTl0YVhocGJuTXZZM1Z6ZEc5dExYTmpjbTlzYkdKaGNpNXRhWGhwYmk1elkzTnpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJRVVZCTzBWQlEwVTdSVUZEUVRzN08wRkJSMFk3UlVGRFJUdEZRVU5CTzBWQlEwRTdPMEZEWTBFN1JVUnFRa1k3U1VGTlNUczdPMEZEVUVVN1JVUlBSanM3TzBGRFYwWTdSVVJxUWtZN1NVRk5TVHM3TzBGRFVFVTdSVVJQUmpzN08wRkJTVW83UlVGRFJUdEZRVU5CT3pzN1FVRkhSanRGUVVORk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlJVRTdSVUZEUVR0RlFVTkJPenM3UVVGSFJqdEZRVU5GT3pzN1FVRkhSanRGUVVORk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlJVRTdSVUZEUVRzN1FVRkZRVHRGUVVORk96czdRVUZKU2p0RlFVTkZPMFZCUTBFN1JVRkRRVHM3TzBGQlIwWTdSVUZEUlR0RlFVTkJPenM3UVVGSFJqdEZRVU5GTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZGTDBSQk8wVkdhMFZGT3p0QlJXaEZSanRGUVVORk96dEJRVWRHTzBWQlEwVTdSVUZEUVRzN1FVRkhSanRGUVVORk8wVkJRMEVpTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKQWRYTmxJQ2RBTDNOMGVXeGxjeTkxZEdsc2N5Y2dZWE1nZFhScGJITTdYRzVjYmpwb2IzTjBJSHRjYmlBZ0xTMHRkMk53TFhCeVpYWnBaWGN0YldWdWRTMWtZWEpyTFdKdmNtUmxjaTFqYjJ4dmNqb2dkbUZ5S0MwdGQyTndMV1p5WVcxbExXMWxiblV0WkdGeWF5MWliM0prWlhJdFkyOXNiM0lzSUhaaGNpZ3RMWGRqY0MxamIyeHZjaTFuY21WNUxUSTBLU2s3WEc0Z0lDMHRMWGRqY0Mxd2NtVjJhV1YzTFcxbGJuVXRiR2xuYUhRdFltOXlaR1Z5TFdOdmJHOXlPaUIyWVhJb0xTMTNZM0F0Wm5KaGJXVXRiV1Z1ZFMxc2FXZG9kQzFpYjNKa1pYSXRZMjlzYjNJc0lIWmhjaWd0TFhkamNDMWpiMnh2Y2kxbmNtVjVMVFkxS1NrN1hHNTlYRzVjYmpwb2IzTjBJSHRjYmlBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnYldsdUxXaGxhV2RvZERvZ2RYUnBiSE11YzJsNlpTZzBMaklwTzF4dVhHNGdJRUJwYm1Oc2RXUmxJSFYwYVd4ekxtTnZiRzl5TFhOamFHVnRaU2dwSUhWemFXNW5JQ2drWTI5c2IzSXRjMk5vWlcxbEtTQjdYRzRnSUNBZ0xTMHRkMk53TFhCeVpYWnBaWGN0YldWdWRTMWliM0prWlhJdFkyOXNiM0k2SUhaaGNpZ3RMUzEzWTNBdGNISmxkbWxsZHkxdFpXNTFMU043SkdOdmJHOXlMWE5qYUdWdFpYMHRZbTl5WkdWeUxXTnZiRzl5S1R0Y2JpQWdmVnh1ZlZ4dVhHNDZhRzl6ZENCN1hHNGdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJR1pzWlhndFpHbHlaV04wYVc5dU9pQmpiMngxYlc0dGNtVjJaWEp6WlR0Y2JuMWNibHh1Ym1GMklIdGNiaUFnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnWm14bGVDMWthWEpsWTNScGIyNDZJSEp2ZHp0Y2JpQWdabXhsZUMxM2NtRndPaUIzY21Gd08xeHVJQ0JuWVhBNklEQWdkWFJwYkhNdWMybDZaU2d4S1R0Y2JseHVJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4dUlDQnFkWE4wYVdaNUxXTnZiblJsYm5RNklHWnNaWGd0YzNSaGNuUTdYRzRnSUdKdmNtUmxjaTFpYjNSMGIyMDZJREZ3ZUNCemIyeHBaQ0IyWVhJb0xTMHRkMk53TFhCeVpYWnBaWGN0YldWdWRTMWliM0prWlhJdFkyOXNiM0lwTzF4dWZWeHVYRzR1Y0d4MVoybHVPbTV2ZENoYllYWmhhV3hoWW14bFhTa2dlMXh1SUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1ZlZ4dVhHNW9jaUI3WEc0Z0lHMWhjbWRwYmpvZ01EdGNiaUFnY0dGa1pHbHVaem9nTUR0Y2JpQWdhR1ZwWjJoME9pQjFkR2xzY3k1emFYcGxLREl1TWlrN1hHNGdJSGRwWkhSb09pQXhjSGc3WEc1Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dkbUZ5S0MwdExYZGpjQzF3Y21WMmFXVjNMVzFsYm5VdFltOXlaR1Z5TFdOdmJHOXlLVHRjYmlBZ1ltOXlaR1Z5T2lBd08xeHVYRzRnSUNZNmFHRnpLQ3NnTG5Cc2RXZHBianB1YjNRb1cyRjJZV2xzWVdKc1pWMHBLU0I3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dibTl1WlR0Y2JpQWdmVnh1ZlZ4dVhHNXpaV04wYVc5dUlIdGNiaUFnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQnBjMjlzWVhScGIyNDZJR2x6YjJ4aGRHVTdYRzRnSUhCaFpHUnBibWM2SURFd2NIZzdYRzU5WEc1Y2JpTjNjbUZ3Y0dWeUlIdGNiaUFnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQnRZWEpuYVc0NklEQWdZWFYwYnp0Y2JuMWNibHh1STNOMFlXZGxJSHRjYmlBZ1kyOXVkR0ZwYm1WeU9pQjNZM0F0Y0hKbGRtbGxkeTF6ZEdGblpTQXZJR2x1YkdsdVpTMXphWHBsTzF4dUlDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdZMjl1ZEdGcGJqb2dZMjl1ZEdWdWREdGNiaUFnYVhOdmJHRjBhVzl1T2lCcGMyOXNZWFJsTzF4dVhHNGdJRUJwYm1Oc2RXUmxJSFYwYVd4ekxtTjFjM1J2YlMxelkzSnZiR3hpWVhJb0tTQjdYRzRnSUNBZ2IzWmxjbVpzYjNjNklHRjFkRzg3WEc0Z0lIMWNibjFjYmlJc0lrQnRhWGhwYmlCM2FYUm9MV052Ykc5eUxYTmphR1Z0WlMxaGRIUnlhV0oxZEdVb0pHTnZiRzl5TFhOamFHVnRaU3dnSkhOb1lXUnZkem9nZEhKMVpTd2dKR0Z3Y0dWdVpEb2dabUZzYzJVcElIdGNiaUFnSkcxdlpHbG1hV1Z5T2lBblcyTnZiRzl5TFhOamFHVnRaVDFjSWlON0pHTnZiRzl5TFhOamFHVnRaWDFjSWwwbk8xeHVJQ0FrYlc5a2FXWnBaV1E2SUdsbUtDUnphR0ZrYjNjc0lDYzZhRzl6ZENnamV5UnRiMlJwWm1sbGNuMHBKeXdnSkcxdlpHbG1hV1Z5S1R0Y2JseHVJQ0JBYVdZZ0pHRndjR1Z1WkNBOVBTQnliMjkwSUh0Y2JpQWdJQ0JBWVhRdGNtOXZkQ0FvZDJsMGFHOTFkRG9nWVd4c0tTQjdYRzRnSUNBZ0lDQWpleVJ0YjJScFptbGxaSDBqZXlaOUlIdGNiaUFnSUNBZ0lDQWdRR052Ym5SbGJuUTdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5SUVCbGJITmxJR2xtSUNSaGNIQmxibVFnUFQwZ2NHRnlaVzUwSUh0Y2JpQWdJQ0JBWVhRdGNtOXZkQ0FvZDJsMGFHOTFkRG9nWVd4c0tTQjdYRzRnSUNBZ0lDQWpleVo5STNza2JXOWthV1pwWldSOUlIdGNiaUFnSUNBZ0lDQWdRR052Ym5SbGJuUTdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5SUVCbGJITmxJSHRjYmlBZ0lDQWpleVJ0YjJScFptbGxaSDBnZTF4dUlDQWdJQ0FnUUdOdmJuUmxiblE3WEc0Z0lDQWdmVnh1SUNCOVhHNTlYRzVjYmtCdGFYaHBiaUIzYVhSb0xXTnZiRzl5TFhOamFHVnRaUzF0WldScFlTZ2tZMjlzYjNJdGMyTm9aVzFsS1NCN1hHNGdJRUJ0WldScFlTQW9jSEpsWm1WeWN5MWpiMnh2Y2kxelkyaGxiV1U2SUNON0pHTnZiRzl5TFhOamFHVnRaWDBwSUh0Y2JpQWdJQ0JBWTI5dWRHVnVkRHRjYmlBZ2ZWeHVmVnh1WEc0dkx5OGdRMjlzYjNJZ1UyTm9aVzFsSUcxcGVHbHVYRzR2THk4Z1FXeHNiM2R6SUhSdklHRndjR3g1SUhOMGVXeGxjeUJpWVhObFpDQnZiaUIwYUdVZ1QxTWdaR1ZtWVhWc2RDQmpiMnh2Y2lCelkyaGxiV1VnWVc1a0lHRnVJRzkyWlhKeWFXUmxJR0o1SUdGdUlHRjBkSEpwWW5WMFpTQnpaV3hsWTNSdmNseHVRRzFwZUdsdUlHTnZiRzl5TFhOamFHVnRaU2hjYmlBZ0pITm9ZV1J2ZHpvZ2RISjFaU3hjYmlBZ0pHRndjR1Z1WkRvZ2NtOXZkQ3hjYmlBZ0pHTnZiRzl5TFhOamFHVnRaWE02SUNoY2JpQWdJQ0JrWVhKckxGeHVJQ0FnSUd4cFoyaDBMRnh1SUNBcFhHNHBJSHRjYmlBZ1FHVmhZMmdnSkdOdmJHOXlMWE5qYUdWdFpTQnBiaUFrWTI5c2IzSXRjMk5vWlcxbGN5QjdYRzRnSUNBZ0x5OGdiV0YwWTJnZ2RHOGdiV1ZrYVdFZ2NYVmxjbmtnWW5rZ1QxTWdaR1ZtWVhWc2RGeHVJQ0FnSUVCcGJtTnNkV1JsSUhkcGRHZ3RZMjlzYjNJdGMyTm9aVzFsTFcxbFpHbGhLQ1JqYjJ4dmNpMXpZMmhsYldVcElIdGNiaUFnSUNBZ0lFQmpiMjUwWlc1MElDZ2tZMjlzYjNJdGMyTm9aVzFsS1R0Y2JpQWdJQ0I5WEc0Z0lDQWdMeThnYldGMFkyZ2dkRzhnWld4bGJXVnVkQ0JoZEhSeWFXSjFkR1VnYzJWc1pXTjBiM0lnYjNabGNuSnBaR1ZjYmlBZ0lDQkFhVzVqYkhWa1pTQjNhWFJvTFdOdmJHOXlMWE5qYUdWdFpTMWhkSFJ5YVdKMWRHVW9KR052Ykc5eUxYTmphR1Z0WlN3Z0pITm9ZV1J2ZHl3Z0pHRndjR1Z1WkNrZ2UxeHVJQ0FnSUNBZ1FHTnZiblJsYm5RZ0tDUmpiMnh2Y2kxelkyaGxiV1VwTzF4dUlDQWdJSDFjYmlBZ2ZWeHVmVnh1SWl3aVFIVnpaU0FuTGk0dlpuVnVZM1JwYjI1ekwzTnBlbVV1Wm5WdVkzUnBiMjRuSUdGeklDbzdYRzVjYmtCdGFYaHBiaUJqZFhOMGIyMHRjMk55YjJ4c1ltRnlLQ1J3YzJWMVpHODZJR0psWm05eVpTd2dKR3hsZG1Wc09pQXhLU0I3WEc0Z0lITmpjbTlzYkdKaGNpMWpiMnh2Y2pvZ2RtRnlLQzB0ZDJOd0xXTnZiRzl5TFdKc2RXVXRNelFwSUhSeVlXNXpjR0Z5Wlc1ME8xeHVYRzRnSUNZNk9pMTNaV0pyYVhRdGMyTnliMnhzWW1GeUlIdGNiaUFnSUNCM2FXUjBhRG9nTUM0MWNtVnRPMXh1SUNCOVhHNWNiaUFnSmpvNkxYZGxZbXRwZEMxelkzSnZiR3hpWVhJdGRHaDFiV0lnZTF4dUlDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFpoY2lndExYZGpjQzFqYjJ4dmNpMWliSFZsTFRNMEtUdGNiaUFnSUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUF3TGpWeVpXMDdYRzRnSUgxY2JseHVJQ0FtT2pvdGQyVmlhMmwwTFhOamNtOXNiR0poY2kxMGNtRmpheUI3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dibTl1WlR0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUIwY21GdWMzQmhjbVZ1ZER0Y2JpQWdmVnh1WEc0Z0lDOHZJR0ZzYkc5M0lHOTJaWEp5YVdSbGN5QnBiaUJqYjNKeVpXTjBJRzl5WkdWeUxDQjBhSFZ6TENCMGFHVmNiaUFnTHk4Z2NHOXphWFJwYjI0Z2IyWWdkR2hsSUcxcGVHbHVJSFZ6WVdkbElHbHpJRzV2ZENCeVpXeGxkbUZ1ZEZ4dUlDQkFZMjl1ZEdWdWREdGNibjFjYmlKZGZRPT0gKiIsInNvdXJjZXNDb250ZW50IjpbIkB1c2UgJ0Avc3R5bGVzL3V0aWxzJyBhcyB1dGlscztcblxuOmhvc3Qge1xuICAtLS13Y3AtcHJldmlldy1tZW51LWRhcmstYm9yZGVyLWNvbG9yOiB2YXIoLS13Y3AtZnJhbWUtbWVudS1kYXJrLWJvcmRlci1jb2xvciwgdmFyKC0td2NwLWNvbG9yLWdyZXktMjQpKTtcbiAgLS0td2NwLXByZXZpZXctbWVudS1saWdodC1ib3JkZXItY29sb3I6IHZhcigtLXdjcC1mcmFtZS1tZW51LWxpZ2h0LWJvcmRlci1jb2xvciwgdmFyKC0td2NwLWNvbG9yLWdyZXktNjUpKTtcbn1cblxuOmhvc3Qge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtaW4taGVpZ2h0OiB1dGlscy5zaXplKDQuMik7XG5cbiAgQGluY2x1ZGUgdXRpbHMuY29sb3Itc2NoZW1lKCkgdXNpbmcgKCRjb2xvci1zY2hlbWUpIHtcbiAgICAtLS13Y3AtcHJldmlldy1tZW51LWJvcmRlci1jb2xvcjogdmFyKC0tLXdjcC1wcmV2aWV3LW1lbnUtI3skY29sb3Itc2NoZW1lfS1ib3JkZXItY29sb3IpO1xuICB9XG59XG5cbjpob3N0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbi1yZXZlcnNlO1xufVxuXG5uYXYge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGdhcDogMCB1dGlscy5zaXplKDEpO1xuXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHZhcigtLS13Y3AtcHJldmlldy1tZW51LWJvcmRlci1jb2xvcik7XG59XG5cbi5wbHVnaW46bm90KFthdmFpbGFibGVdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbmhyIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBoZWlnaHQ6IHV0aWxzLnNpemUoMi4yKTtcbiAgd2lkdGg6IDFweDtcblxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS0td2NwLXByZXZpZXctbWVudS1ib3JkZXItY29sb3IpO1xuICBib3JkZXI6IDA7XG5cbiAgJjpoYXMoKyAucGx1Z2luOm5vdChbYXZhaWxhYmxlXSkpIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbnNlY3Rpb24ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGlzb2xhdGlvbjogaXNvbGF0ZTtcbiAgcGFkZGluZzogMTBweDtcbn1cblxuI3dyYXBwZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4jc3RhZ2Uge1xuICBjb250YWluZXI6IHdjcC1wcmV2aWV3LXN0YWdlIC8gaW5saW5lLXNpemU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjb250YWluOiBjb250ZW50O1xuICBpc29sYXRpb246IGlzb2xhdGU7XG5cbiAgQGluY2x1ZGUgdXRpbHMuY3VzdG9tLXNjcm9sbGJhcigpIHtcbiAgICBvdmVyZmxvdzogYXV0bztcbiAgfVxufVxuIiwiOmhvc3Qge1xuICAtLS13Y3AtcHJldmlldy1tZW51LWRhcmstYm9yZGVyLWNvbG9yOiB2YXIoLS13Y3AtZnJhbWUtbWVudS1kYXJrLWJvcmRlci1jb2xvciwgdmFyKC0td2NwLWNvbG9yLWdyZXktMjQpKTtcbiAgLS0td2NwLXByZXZpZXctbWVudS1saWdodC1ib3JkZXItY29sb3I6IHZhcigtLXdjcC1mcmFtZS1tZW51LWxpZ2h0LWJvcmRlci1jb2xvciwgdmFyKC0td2NwLWNvbG9yLWdyZXktNjUpKTtcbn1cblxuOmhvc3Qge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtaW4taGVpZ2h0OiBjYWxjKHZhcigtLXdjcC1iYXNlLXNpemUsIDEwcHgpICogNC4yKTtcbn1cbkBtZWRpYSAocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspIHtcbiAgOmhvc3Qge1xuICAgIC0tLXdjcC1wcmV2aWV3LW1lbnUtYm9yZGVyLWNvbG9yOiB2YXIoLS0td2NwLXByZXZpZXctbWVudS1kYXJrLWJvcmRlci1jb2xvcik7XG4gIH1cbn1cbjpob3N0KFtjb2xvci1zY2hlbWU9ZGFya10pOmhvc3Qge1xuICAtLS13Y3AtcHJldmlldy1tZW51LWJvcmRlci1jb2xvcjogdmFyKC0tLXdjcC1wcmV2aWV3LW1lbnUtZGFyay1ib3JkZXItY29sb3IpO1xufVxuXG5AbWVkaWEgKHByZWZlcnMtY29sb3Itc2NoZW1lOiBsaWdodCkge1xuICA6aG9zdCB7XG4gICAgLS0td2NwLXByZXZpZXctbWVudS1ib3JkZXItY29sb3I6IHZhcigtLS13Y3AtcHJldmlldy1tZW51LWxpZ2h0LWJvcmRlci1jb2xvcik7XG4gIH1cbn1cbjpob3N0KFtjb2xvci1zY2hlbWU9bGlnaHRdKTpob3N0IHtcbiAgLS0td2NwLXByZXZpZXctbWVudS1ib3JkZXItY29sb3I6IHZhcigtLS13Y3AtcHJldmlldy1tZW51LWxpZ2h0LWJvcmRlci1jb2xvcik7XG59XG5cbjpob3N0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbi1yZXZlcnNlO1xufVxuXG5uYXYge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGdhcDogMCBjYWxjKHZhcigtLXdjcC1iYXNlLXNpemUsIDEwcHgpICogMSk7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHZhcigtLS13Y3AtcHJldmlldy1tZW51LWJvcmRlci1jb2xvcik7XG59XG5cbi5wbHVnaW46bm90KFthdmFpbGFibGVdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbmhyIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBoZWlnaHQ6IGNhbGModmFyKC0td2NwLWJhc2Utc2l6ZSwgMTBweCkgKiAyLjIpO1xuICB3aWR0aDogMXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS0td2NwLXByZXZpZXctbWVudS1ib3JkZXItY29sb3IpO1xuICBib3JkZXI6IDA7XG59XG5ocjpoYXMoKyAucGx1Z2luOm5vdChbYXZhaWxhYmxlXSkpIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuc2VjdGlvbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaXNvbGF0aW9uOiBpc29sYXRlO1xuICBwYWRkaW5nOiAxMHB4O1xufVxuXG4jd3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbiNzdGFnZSB7XG4gIGNvbnRhaW5lcjogd2NwLXByZXZpZXctc3RhZ2UvaW5saW5lLXNpemU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjb250YWluOiBjb250ZW50O1xuICBpc29sYXRpb246IGlzb2xhdGU7XG4gIHNjcm9sbGJhci1jb2xvcjogdmFyKC0td2NwLWNvbG9yLWJsdWUtMzQpIHRyYW5zcGFyZW50O1xuICBvdmVyZmxvdzogYXV0bztcbn1cbiNzdGFnZTo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICB3aWR0aDogMC41cmVtO1xufVxuI3N0YWdlOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXdjcC1jb2xvci1ibHVlLTM0KTtcbiAgYm9yZGVyLXJhZGl1czogMC41cmVtO1xufVxuI3N0YWdlOjotd2Via2l0LXNjcm9sbGJhci10cmFjayB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVlNiMjkwSWpvaUwyaHZiV1V2Y25WdWJtVnlMM2R2Y21zdlkyeHBaVzUwTDJOc2FXVnVkQzl6Y21NdlkyOXRjRzl1Wlc1MGN5OW1aV0YwZFhKbGN5OXdjbVYyYVdWM0lpd2ljMjkxY21ObGN5STZXeUp3Y21WMmFXVjNMbU52YlhCdmJtVnVkQzV6WTNOeklpd2lMaTR2TGk0dkxpNHZjM1I1YkdWekwyMXBlR2x1Y3k5amIyeHZjaTF6WTJobGJXVXViV2w0YVc0dWMyTnpjeUlzSWk0dUx5NHVMeTR1TDNOMGVXeGxjeTl0YVhocGJuTXZZM1Z6ZEc5dExYTmpjbTlzYkdKaGNpNXRhWGhwYmk1elkzTnpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJRVVZCTzBWQlEwVTdSVUZEUVRzN08wRkJSMFk3UlVGRFJUdEZRVU5CTzBWQlEwRTdPMEZEWTBFN1JVUnFRa1k3U1VGTlNUczdPMEZEVUVVN1JVUlBSanM3TzBGRFYwWTdSVVJxUWtZN1NVRk5TVHM3TzBGRFVFVTdSVVJQUmpzN08wRkJTVW83UlVGRFJUdEZRVU5CT3pzN1FVRkhSanRGUVVORk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlJVRTdSVUZEUVR0RlFVTkJPenM3UVVGSFJqdEZRVU5GT3pzN1FVRkhSanRGUVVORk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlJVRTdSVUZEUVRzN1FVRkZRVHRGUVVORk96czdRVUZKU2p0RlFVTkZPMFZCUTBFN1JVRkRRVHM3TzBGQlIwWTdSVUZEUlR0RlFVTkJPenM3UVVGSFJqdEZRVU5GTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZGTDBSQk8wVkdhMFZGT3p0QlJXaEZSanRGUVVORk96dEJRVWRHTzBWQlEwVTdSVUZEUVRzN1FVRkhSanRGUVVORk8wVkJRMEVpTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKQWRYTmxJQ2RBTDNOMGVXeGxjeTkxZEdsc2N5Y2dZWE1nZFhScGJITTdYRzVjYmpwb2IzTjBJSHRjYmlBZ0xTMHRkMk53TFhCeVpYWnBaWGN0YldWdWRTMWtZWEpyTFdKdmNtUmxjaTFqYjJ4dmNqb2dkbUZ5S0MwdGQyTndMV1p5WVcxbExXMWxiblV0WkdGeWF5MWliM0prWlhJdFkyOXNiM0lzSUhaaGNpZ3RMWGRqY0MxamIyeHZjaTFuY21WNUxUSTBLU2s3WEc0Z0lDMHRMWGRqY0Mxd2NtVjJhV1YzTFcxbGJuVXRiR2xuYUhRdFltOXlaR1Z5TFdOdmJHOXlPaUIyWVhJb0xTMTNZM0F0Wm5KaGJXVXRiV1Z1ZFMxc2FXZG9kQzFpYjNKa1pYSXRZMjlzYjNJc0lIWmhjaWd0TFhkamNDMWpiMnh2Y2kxbmNtVjVMVFkxS1NrN1hHNTlYRzVjYmpwb2IzTjBJSHRjYmlBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnYldsdUxXaGxhV2RvZERvZ2RYUnBiSE11YzJsNlpTZzBMaklwTzF4dVhHNGdJRUJwYm1Oc2RXUmxJSFYwYVd4ekxtTnZiRzl5TFhOamFHVnRaU2dwSUhWemFXNW5JQ2drWTI5c2IzSXRjMk5vWlcxbEtTQjdYRzRnSUNBZ0xTMHRkMk53TFhCeVpYWnBaWGN0YldWdWRTMWliM0prWlhJdFkyOXNiM0k2SUhaaGNpZ3RMUzEzWTNBdGNISmxkbWxsZHkxdFpXNTFMU043SkdOdmJHOXlMWE5qYUdWdFpYMHRZbTl5WkdWeUxXTnZiRzl5S1R0Y2JpQWdmVnh1ZlZ4dVhHNDZhRzl6ZENCN1hHNGdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJR1pzWlhndFpHbHlaV04wYVc5dU9pQmpiMngxYlc0dGNtVjJaWEp6WlR0Y2JuMWNibHh1Ym1GMklIdGNiaUFnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnWm14bGVDMWthWEpsWTNScGIyNDZJSEp2ZHp0Y2JpQWdabXhsZUMxM2NtRndPaUIzY21Gd08xeHVJQ0JuWVhBNklEQWdkWFJwYkhNdWMybDZaU2d4S1R0Y2JseHVJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4dUlDQnFkWE4wYVdaNUxXTnZiblJsYm5RNklHWnNaWGd0YzNSaGNuUTdYRzRnSUdKdmNtUmxjaTFpYjNSMGIyMDZJREZ3ZUNCemIyeHBaQ0IyWVhJb0xTMHRkMk53TFhCeVpYWnBaWGN0YldWdWRTMWliM0prWlhJdFkyOXNiM0lwTzF4dWZWeHVYRzR1Y0d4MVoybHVPbTV2ZENoYllYWmhhV3hoWW14bFhTa2dlMXh1SUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1ZlZ4dVhHNW9jaUI3WEc0Z0lHMWhjbWRwYmpvZ01EdGNiaUFnY0dGa1pHbHVaem9nTUR0Y2JpQWdhR1ZwWjJoME9pQjFkR2xzY3k1emFYcGxLREl1TWlrN1hHNGdJSGRwWkhSb09pQXhjSGc3WEc1Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dkbUZ5S0MwdExYZGpjQzF3Y21WMmFXVjNMVzFsYm5VdFltOXlaR1Z5TFdOdmJHOXlLVHRjYmlBZ1ltOXlaR1Z5T2lBd08xeHVYRzRnSUNZNmFHRnpLQ3NnTG5Cc2RXZHBianB1YjNRb1cyRjJZV2xzWVdKc1pWMHBLU0I3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dibTl1WlR0Y2JpQWdmVnh1ZlZ4dVhHNXpaV04wYVc5dUlIdGNiaUFnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQnBjMjlzWVhScGIyNDZJR2x6YjJ4aGRHVTdYRzRnSUhCaFpHUnBibWM2SURFd2NIZzdYRzU5WEc1Y2JpTjNjbUZ3Y0dWeUlIdGNiaUFnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQnRZWEpuYVc0NklEQWdZWFYwYnp0Y2JuMWNibHh1STNOMFlXZGxJSHRjYmlBZ1kyOXVkR0ZwYm1WeU9pQjNZM0F0Y0hKbGRtbGxkeTF6ZEdGblpTQXZJR2x1YkdsdVpTMXphWHBsTzF4dUlDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdZMjl1ZEdGcGJqb2dZMjl1ZEdWdWREdGNiaUFnYVhOdmJHRjBhVzl1T2lCcGMyOXNZWFJsTzF4dVhHNGdJRUJwYm1Oc2RXUmxJSFYwYVd4ekxtTjFjM1J2YlMxelkzSnZiR3hpWVhJb0tTQjdYRzRnSUNBZ2IzWmxjbVpzYjNjNklHRjFkRzg3WEc0Z0lIMWNibjFjYmlJc0lrQnRhWGhwYmlCM2FYUm9MV052Ykc5eUxYTmphR1Z0WlMxaGRIUnlhV0oxZEdVb0pHTnZiRzl5TFhOamFHVnRaU3dnSkhOb1lXUnZkem9nZEhKMVpTd2dKR0Z3Y0dWdVpEb2dabUZzYzJVcElIdGNiaUFnSkcxdlpHbG1hV1Z5T2lBblcyTnZiRzl5TFhOamFHVnRaVDFjSWlON0pHTnZiRzl5TFhOamFHVnRaWDFjSWwwbk8xeHVJQ0FrYlc5a2FXWnBaV1E2SUdsbUtDUnphR0ZrYjNjc0lDYzZhRzl6ZENnamV5UnRiMlJwWm1sbGNuMHBKeXdnSkcxdlpHbG1hV1Z5S1R0Y2JseHVJQ0JBYVdZZ0pHRndjR1Z1WkNBOVBTQnliMjkwSUh0Y2JpQWdJQ0JBWVhRdGNtOXZkQ0FvZDJsMGFHOTFkRG9nWVd4c0tTQjdYRzRnSUNBZ0lDQWpleVJ0YjJScFptbGxaSDBqZXlaOUlIdGNiaUFnSUNBZ0lDQWdRR052Ym5SbGJuUTdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5SUVCbGJITmxJR2xtSUNSaGNIQmxibVFnUFQwZ2NHRnlaVzUwSUh0Y2JpQWdJQ0JBWVhRdGNtOXZkQ0FvZDJsMGFHOTFkRG9nWVd4c0tTQjdYRzRnSUNBZ0lDQWpleVo5STNza2JXOWthV1pwWldSOUlIdGNiaUFnSUNBZ0lDQWdRR052Ym5SbGJuUTdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5SUVCbGJITmxJSHRjYmlBZ0lDQWpleVJ0YjJScFptbGxaSDBnZTF4dUlDQWdJQ0FnUUdOdmJuUmxiblE3WEc0Z0lDQWdmVnh1SUNCOVhHNTlYRzVjYmtCdGFYaHBiaUIzYVhSb0xXTnZiRzl5TFhOamFHVnRaUzF0WldScFlTZ2tZMjlzYjNJdGMyTm9aVzFsS1NCN1hHNGdJRUJ0WldScFlTQW9jSEpsWm1WeWN5MWpiMnh2Y2kxelkyaGxiV1U2SUNON0pHTnZiRzl5TFhOamFHVnRaWDBwSUh0Y2JpQWdJQ0JBWTI5dWRHVnVkRHRjYmlBZ2ZWeHVmVnh1WEc0dkx5OGdRMjlzYjNJZ1UyTm9aVzFsSUcxcGVHbHVYRzR2THk4Z1FXeHNiM2R6SUhSdklHRndjR3g1SUhOMGVXeGxjeUJpWVhObFpDQnZiaUIwYUdVZ1QxTWdaR1ZtWVhWc2RDQmpiMnh2Y2lCelkyaGxiV1VnWVc1a0lHRnVJRzkyWlhKeWFXUmxJR0o1SUdGdUlHRjBkSEpwWW5WMFpTQnpaV3hsWTNSdmNseHVRRzFwZUdsdUlHTnZiRzl5TFhOamFHVnRaU2hjYmlBZ0pITm9ZV1J2ZHpvZ2RISjFaU3hjYmlBZ0pHRndjR1Z1WkRvZ2NtOXZkQ3hjYmlBZ0pHTnZiRzl5TFhOamFHVnRaWE02SUNoY2JpQWdJQ0JrWVhKckxGeHVJQ0FnSUd4cFoyaDBMRnh1SUNBcFhHNHBJSHRjYmlBZ1FHVmhZMmdnSkdOdmJHOXlMWE5qYUdWdFpTQnBiaUFrWTI5c2IzSXRjMk5vWlcxbGN5QjdYRzRnSUNBZ0x5OGdiV0YwWTJnZ2RHOGdiV1ZrYVdFZ2NYVmxjbmtnWW5rZ1QxTWdaR1ZtWVhWc2RGeHVJQ0FnSUVCcGJtTnNkV1JsSUhkcGRHZ3RZMjlzYjNJdGMyTm9aVzFsTFcxbFpHbGhLQ1JqYjJ4dmNpMXpZMmhsYldVcElIdGNiaUFnSUNBZ0lFQmpiMjUwWlc1MElDZ2tZMjlzYjNJdGMyTm9aVzFsS1R0Y2JpQWdJQ0I5WEc0Z0lDQWdMeThnYldGMFkyZ2dkRzhnWld4bGJXVnVkQ0JoZEhSeWFXSjFkR1VnYzJWc1pXTjBiM0lnYjNabGNuSnBaR1ZjYmlBZ0lDQkFhVzVqYkhWa1pTQjNhWFJvTFdOdmJHOXlMWE5qYUdWdFpTMWhkSFJ5YVdKMWRHVW9KR052Ykc5eUxYTmphR1Z0WlN3Z0pITm9ZV1J2ZHl3Z0pHRndjR1Z1WkNrZ2UxeHVJQ0FnSUNBZ1FHTnZiblJsYm5RZ0tDUmpiMnh2Y2kxelkyaGxiV1VwTzF4dUlDQWdJSDFjYmlBZ2ZWeHVmVnh1SWl3aVFIVnpaU0FuTGk0dlpuVnVZM1JwYjI1ekwzTnBlbVV1Wm5WdVkzUnBiMjRuSUdGeklDbzdYRzVjYmtCdGFYaHBiaUJqZFhOMGIyMHRjMk55YjJ4c1ltRnlLQ1J3YzJWMVpHODZJR0psWm05eVpTd2dKR3hsZG1Wc09pQXhLU0I3WEc0Z0lITmpjbTlzYkdKaGNpMWpiMnh2Y2pvZ2RtRnlLQzB0ZDJOd0xXTnZiRzl5TFdKc2RXVXRNelFwSUhSeVlXNXpjR0Z5Wlc1ME8xeHVYRzRnSUNZNk9pMTNaV0pyYVhRdGMyTnliMnhzWW1GeUlIdGNiaUFnSUNCM2FXUjBhRG9nTUM0MWNtVnRPMXh1SUNCOVhHNWNiaUFnSmpvNkxYZGxZbXRwZEMxelkzSnZiR3hpWVhJdGRHaDFiV0lnZTF4dUlDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFpoY2lndExYZGpjQzFqYjJ4dmNpMWliSFZsTFRNMEtUdGNiaUFnSUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUF3TGpWeVpXMDdYRzRnSUgxY2JseHVJQ0FtT2pvdGQyVmlhMmwwTFhOamNtOXNiR0poY2kxMGNtRmpheUI3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dibTl1WlR0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUIwY21GdWMzQmhjbVZ1ZER0Y2JpQWdmVnh1WEc0Z0lDOHZJR0ZzYkc5M0lHOTJaWEp5YVdSbGN5QnBiaUJqYjNKeVpXTjBJRzl5WkdWeUxDQjBhSFZ6TENCMGFHVmNiaUFnTHk4Z2NHOXphWFJwYjI0Z2IyWWdkR2hsSUcxcGVHbHVJSFZ6WVdkbElHbHpJRzV2ZENCeVpXeGxkbUZ1ZEZ4dUlDQkFZMjl1ZEdWdWREdGNibjFjYmlKZGZRPT0gKi8iLCJAbWl4aW4gd2l0aC1jb2xvci1zY2hlbWUtYXR0cmlidXRlKCRjb2xvci1zY2hlbWUsICRzaGFkb3c6IHRydWUsICRhcHBlbmQ6IGZhbHNlKSB7XG4gICRtb2RpZmllcjogJ1tjb2xvci1zY2hlbWU9XCIjeyRjb2xvci1zY2hlbWV9XCJdJztcbiAgJG1vZGlmaWVkOiBpZigkc2hhZG93LCAnOmhvc3QoI3skbW9kaWZpZXJ9KScsICRtb2RpZmllcik7XG5cbiAgQGlmICRhcHBlbmQgPT0gcm9vdCB7XG4gICAgQGF0LXJvb3QgKHdpdGhvdXQ6IGFsbCkge1xuICAgICAgI3skbW9kaWZpZWR9I3smfSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgICAgfVxuICAgIH1cbiAgfSBAZWxzZSBpZiAkYXBwZW5kID09IHBhcmVudCB7XG4gICAgQGF0LXJvb3QgKHdpdGhvdXQ6IGFsbCkge1xuICAgICAgI3smfSN7JG1vZGlmaWVkfSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgICAgfVxuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgI3skbW9kaWZpZWR9IHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxufVxuXG5AbWl4aW4gd2l0aC1jb2xvci1zY2hlbWUtbWVkaWEoJGNvbG9yLXNjaGVtZSkge1xuICBAbWVkaWEgKHByZWZlcnMtY29sb3Itc2NoZW1lOiAjeyRjb2xvci1zY2hlbWV9KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8vIENvbG9yIFNjaGVtZSBtaXhpblxuLy8vIEFsbG93cyB0byBhcHBseSBzdHlsZXMgYmFzZWQgb24gdGhlIE9TIGRlZmF1bHQgY29sb3Igc2NoZW1lIGFuZCBhbiBvdmVycmlkZSBieSBhbiBhdHRyaWJ1dGUgc2VsZWN0b3JcbkBtaXhpbiBjb2xvci1zY2hlbWUoXG4gICRzaGFkb3c6IHRydWUsXG4gICRhcHBlbmQ6IHJvb3QsXG4gICRjb2xvci1zY2hlbWVzOiAoXG4gICAgZGFyayxcbiAgICBsaWdodCxcbiAgKVxuKSB7XG4gIEBlYWNoICRjb2xvci1zY2hlbWUgaW4gJGNvbG9yLXNjaGVtZXMge1xuICAgIC8vIG1hdGNoIHRvIG1lZGlhIHF1ZXJ5IGJ5IE9TIGRlZmF1bHRcbiAgICBAaW5jbHVkZSB3aXRoLWNvbG9yLXNjaGVtZS1tZWRpYSgkY29sb3Itc2NoZW1lKSB7XG4gICAgICBAY29udGVudCAoJGNvbG9yLXNjaGVtZSk7XG4gICAgfVxuICAgIC8vIG1hdGNoIHRvIGVsZW1lbnQgYXR0cmlidXRlIHNlbGVjdG9yIG92ZXJyaWRlXG4gICAgQGluY2x1ZGUgd2l0aC1jb2xvci1zY2hlbWUtYXR0cmlidXRlKCRjb2xvci1zY2hlbWUsICRzaGFkb3csICRhcHBlbmQpIHtcbiAgICAgIEBjb250ZW50ICgkY29sb3Itc2NoZW1lKTtcbiAgICB9XG4gIH1cbn1cbiIsIkB1c2UgJy4uL2Z1bmN0aW9ucy9zaXplLmZ1bmN0aW9uJyBhcyAqO1xuXG5AbWl4aW4gY3VzdG9tLXNjcm9sbGJhcigkcHNldWRvOiBiZWZvcmUsICRsZXZlbDogMSkge1xuICBzY3JvbGxiYXItY29sb3I6IHZhcigtLXdjcC1jb2xvci1ibHVlLTM0KSB0cmFuc3BhcmVudDtcblxuICAmOjotd2Via2l0LXNjcm9sbGJhciB7XG4gICAgd2lkdGg6IDAuNXJlbTtcbiAgfVxuXG4gICY6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS13Y3AtY29sb3ItYmx1ZS0zNCk7XG4gICAgYm9yZGVyLXJhZGl1czogMC41cmVtO1xuICB9XG5cbiAgJjo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2sge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIH1cblxuICAvLyBhbGxvdyBvdmVycmlkZXMgaW4gY29ycmVjdCBvcmRlciwgdGh1cywgdGhlXG4gIC8vIHBvc2l0aW9uIG9mIHRoZSBtaXhpbiB1c2FnZSBpcyBub3QgcmVsZXZhbnRcbiAgQGNvbnRlbnQ7XG59XG4iXX0= */`;\n", "import { LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { until } from 'lit/directives/until.js';\nimport { html } from 'lit/static-html.js';\n\nimport { ColorSchemable } from '@/mixins/color-schemable.mixin.js';\nimport { renderMarkdown } from '@/utils/markdown.utils.js';\n\nimport styles from './readme.component.scss';\n\n/**\n * Displays a Readme file by its URL.\n *\n * @cssprop --wcp-readme-dark-color - Text color of the readme in dark mode.\n * @cssprop --wcp-readme-dark-color-accent - Accent text color (e.g. links) of the readme in dark mode.\n * @cssprop --wcp-readme-dark-color-muted - Muted text color of the readme in dark mode.\n * @cssprop --wcp-readme-dark-border-color - Border color of the readme in dark mode.\n * @cssprop --wcp-readme-dark-highlight-background - Background color of highlighted table rows in dark mode.\n *\n * @cssprop --wcp-readme-light-color - Text color of the readme in light mode.\n * @cssprop --wcp-readme-light-color-accent - Accent text color (e.g. links) of the readme in light mode.\n * @cssprop --wcp-readme-light-color-muted - Muted text color of the readme in light mode.\n * @cssprop --wcp-readme-light-border-color - Border color of the readme in light mode.\n * @cssprop --wcp-readme-light-highlight-background - Background color of highlighted table rows in light mode.\n *\n */\n@customElement('wcp-readme')\nexport class Readme extends ColorSchemable(LitElement) {\n  static override readonly styles = unsafeCSS(styles);\n\n  @property({ type: Boolean, reflect: true, attribute: 'add-code-preview' })\n  readonly showCodePreview = false;\n\n  @property({ type: String, reflect: true, attribute: 'preview-tag-name' })\n  readonly previewTagName?: string;\n\n  @property({ type: String })\n  readonly markdown = '';\n\n  @property({ type: String, reflect: true })\n  readonly hash?: string;\n\n  protected override updated() {\n    if (this.hash) {\n      this.scrollToId(this.hash);\n    }\n  }\n\n  scrollToId(section: string) {\n    const element = this.querySelector(`#${section}`);\n    if (element !== null) {\n      // as hash routing may be used, we can't rely on the `:target` pseudo selector, thus we set a class\n      this.querySelectorAll('.target').forEach((el) => el.classList.remove('target'));\n      element.classList.add('target');\n\n      // finally, scroll to the element\n      element.scrollIntoView({ behavior: 'auto' });\n    }\n  }\n\n  protected override render(): TemplateResult {\n    return html`\n      <div\n        class=\"markdown-body\"\n        .innerHTML=\"${until(renderMarkdown(this.markdown, this.showCodePreview, this.previewTagName))}\"\n      ></div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-readme': Readme;\n  }\n}\n", "/**\n * Gets the original marked default options.\n */\nexport function _getDefaults() {\n    return {\n        async: false,\n        breaks: false,\n        extensions: null,\n        gfm: true,\n        hooks: null,\n        pedantic: false,\n        renderer: null,\n        silent: false,\n        tokenizer: null,\n        walkTokens: null\n    };\n}\nexport let _defaults = _getDefaults();\nexport function changeDefaults(newDefaults) {\n    _defaults = newDefaults;\n}\n", "/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nexport function escape(html, encode) {\n    if (encode) {\n        if (escapeTest.test(html)) {\n            return html.replace(escapeReplace, getEscapeReplacement);\n        }\n    }\n    else {\n        if (escapeTestNoEncode.test(html)) {\n            return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n        }\n    }\n    return html;\n}\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\nexport function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, (_, n) => {\n        n = n.toLowerCase();\n        if (n === 'colon')\n            return ':';\n        if (n.charAt(0) === '#') {\n            return n.charAt(1) === 'x'\n                ? String.fromCharCode(parseInt(n.substring(2), 16))\n                : String.fromCharCode(+n.substring(1));\n        }\n        return '';\n    });\n}\nconst caret = /(^|[^\\[])\\^/g;\nexport function edit(regex, opt) {\n    let source = typeof regex === 'string' ? regex : regex.source;\n    opt = opt || '';\n    const obj = {\n        replace: (name, val) => {\n            let valSource = typeof val === 'string' ? val : val.source;\n            valSource = valSource.replace(caret, '$1');\n            source = source.replace(name, valSource);\n            return obj;\n        },\n        getRegex: () => {\n            return new RegExp(source, opt);\n        }\n    };\n    return obj;\n}\nexport function cleanUrl(href) {\n    try {\n        href = encodeURI(href).replace(/%25/g, '%');\n    }\n    catch (e) {\n        return null;\n    }\n    return href;\n}\nexport const noopTest = { exec: () => null };\nexport function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n        let escaped = false;\n        let curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\')\n            escaped = !escaped;\n        if (escaped) {\n            // odd number of slashes means | is escaped\n            // so we leave it alone\n            return '|';\n        }\n        else {\n            // add space before unescaped |\n            return ' |';\n        }\n    }), cells = row.split(/ \\|/);\n    let i = 0;\n    // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n    if (!cells[0].trim()) {\n        cells.shift();\n    }\n    if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n        cells.pop();\n    }\n    if (count) {\n        if (cells.length > count) {\n            cells.splice(count);\n        }\n        else {\n            while (cells.length < count)\n                cells.push('');\n        }\n    }\n    for (; i < cells.length; i++) {\n        // leading or trailing whitespace is ignored per the gfm spec\n        cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n    return cells;\n}\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param str\n * @param c\n * @param invert Remove suffix of non-c chars instead. Default falsey.\n */\nexport function rtrim(str, c, invert) {\n    const l = str.length;\n    if (l === 0) {\n        return '';\n    }\n    // Length of suffix matching the invert condition.\n    let suffLen = 0;\n    // Step left until we fail to match the invert condition.\n    while (suffLen < l) {\n        const currChar = str.charAt(l - suffLen - 1);\n        if (currChar === c && !invert) {\n            suffLen++;\n        }\n        else if (currChar !== c && invert) {\n            suffLen++;\n        }\n        else {\n            break;\n        }\n    }\n    return str.slice(0, l - suffLen);\n}\nexport function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n        return -1;\n    }\n    let level = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] === '\\\\') {\n            i++;\n        }\n        else if (str[i] === b[0]) {\n            level++;\n        }\n        else if (str[i] === b[1]) {\n            level--;\n            if (level < 0) {\n                return i;\n            }\n        }\n    }\n    return -1;\n}\n", "import { _defaults } from './defaults.ts';\nimport { rtrim, splitCells, escape, findClosingBracket } from './helpers.ts';\nfunction outputLink(cap, link, raw, lexer) {\n    const href = link.href;\n    const title = link.title ? escape(link.title) : null;\n    const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n    if (cap[0].charAt(0) !== '!') {\n        lexer.state.inLink = true;\n        const token = {\n            type: 'link',\n            raw,\n            href,\n            title,\n            text,\n            tokens: lexer.inlineTokens(text)\n        };\n        lexer.state.inLink = false;\n        return token;\n    }\n    return {\n        type: 'image',\n        raw,\n        href,\n        title,\n        text: escape(text)\n    };\n}\nfunction indentCodeCompensation(raw, text) {\n    const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n    if (matchIndentToCode === null) {\n        return text;\n    }\n    const indentToCode = matchIndentToCode[1];\n    return text\n        .split('\\n')\n        .map(node => {\n        const matchIndentInNode = node.match(/^\\s+/);\n        if (matchIndentInNode === null) {\n            return node;\n        }\n        const [indentInNode] = matchIndentInNode;\n        if (indentInNode.length >= indentToCode.length) {\n            return node.slice(indentToCode.length);\n        }\n        return node;\n    })\n        .join('\\n');\n}\n/**\n * Tokenizer\n */\nexport class _Tokenizer {\n    options;\n    rules; // set by the lexer\n    lexer; // set by the lexer\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(src) {\n        const cap = this.rules.block.newline.exec(src);\n        if (cap && cap[0].length > 0) {\n            return {\n                type: 'space',\n                raw: cap[0]\n            };\n        }\n    }\n    code(src) {\n        const cap = this.rules.block.code.exec(src);\n        if (cap) {\n            const text = cap[0].replace(/^ {1,4}/gm, '');\n            return {\n                type: 'code',\n                raw: cap[0],\n                codeBlockStyle: 'indented',\n                text: !this.options.pedantic\n                    ? rtrim(text, '\\n')\n                    : text\n            };\n        }\n    }\n    fences(src) {\n        const cap = this.rules.block.fences.exec(src);\n        if (cap) {\n            const raw = cap[0];\n            const text = indentCodeCompensation(raw, cap[3] || '');\n            return {\n                type: 'code',\n                raw,\n                lang: cap[2] ? cap[2].trim().replace(this.rules.inline.anyPunctuation, '$1') : cap[2],\n                text\n            };\n        }\n    }\n    heading(src) {\n        const cap = this.rules.block.heading.exec(src);\n        if (cap) {\n            let text = cap[2].trim();\n            // remove trailing #s\n            if (/#$/.test(text)) {\n                const trimmed = rtrim(text, '#');\n                if (this.options.pedantic) {\n                    text = trimmed.trim();\n                }\n                else if (!trimmed || / $/.test(trimmed)) {\n                    // CommonMark requires space before trailing #s\n                    text = trimmed.trim();\n                }\n            }\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[1].length,\n                text,\n                tokens: this.lexer.inline(text)\n            };\n        }\n    }\n    hr(src) {\n        const cap = this.rules.block.hr.exec(src);\n        if (cap) {\n            return {\n                type: 'hr',\n                raw: cap[0]\n            };\n        }\n    }\n    blockquote(src) {\n        const cap = this.rules.block.blockquote.exec(src);\n        if (cap) {\n            const text = rtrim(cap[0].replace(/^ *>[ \\t]?/gm, ''), '\\n');\n            const top = this.lexer.state.top;\n            this.lexer.state.top = true;\n            const tokens = this.lexer.blockTokens(text);\n            this.lexer.state.top = top;\n            return {\n                type: 'blockquote',\n                raw: cap[0],\n                tokens,\n                text\n            };\n        }\n    }\n    list(src) {\n        let cap = this.rules.block.list.exec(src);\n        if (cap) {\n            let bull = cap[1].trim();\n            const isordered = bull.length > 1;\n            const list = {\n                type: 'list',\n                raw: '',\n                ordered: isordered,\n                start: isordered ? +bull.slice(0, -1) : '',\n                loose: false,\n                items: []\n            };\n            bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n            if (this.options.pedantic) {\n                bull = isordered ? bull : '[*+-]';\n            }\n            // Get next list item\n            const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n            let raw = '';\n            let itemContents = '';\n            let endsWithBlankLine = false;\n            // Check if current bullet point can start a new List Item\n            while (src) {\n                let endEarly = false;\n                if (!(cap = itemRegex.exec(src))) {\n                    break;\n                }\n                if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n                    break;\n                }\n                raw = cap[0];\n                src = src.substring(raw.length);\n                let line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n                let nextLine = src.split('\\n', 1)[0];\n                let indent = 0;\n                if (this.options.pedantic) {\n                    indent = 2;\n                    itemContents = line.trimStart();\n                }\n                else {\n                    indent = cap[2].search(/[^ ]/); // Find first non-space char\n                    indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n                    itemContents = line.slice(indent);\n                    indent += cap[1].length;\n                }\n                let blankLine = false;\n                if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n                    raw += nextLine + '\\n';\n                    src = src.substring(nextLine.length + 1);\n                    endEarly = true;\n                }\n                if (!endEarly) {\n                    const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n                    const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n                    const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n                    const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n                    // Check if following lines should be included in List Item\n                    while (src) {\n                        const rawLine = src.split('\\n', 1)[0];\n                        nextLine = rawLine;\n                        // Re-align to follow commonmark nesting rules\n                        if (this.options.pedantic) {\n                            nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n                        }\n                        // End list item if found code fences\n                        if (fencesBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new heading\n                        if (headingBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new bullet\n                        if (nextBulletRegex.test(nextLine)) {\n                            break;\n                        }\n                        // Horizontal rule found\n                        if (hrRegex.test(src)) {\n                            break;\n                        }\n                        if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n                            itemContents += '\\n' + nextLine.slice(indent);\n                        }\n                        else {\n                            // not enough indentation\n                            if (blankLine) {\n                                break;\n                            }\n                            // paragraph continuation unless last line was a different block level element\n                            if (line.search(/[^ ]/) >= 4) { // indented code block\n                                break;\n                            }\n                            if (fencesBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (headingBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (hrRegex.test(line)) {\n                                break;\n                            }\n                            itemContents += '\\n' + nextLine;\n                        }\n                        if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n                            blankLine = true;\n                        }\n                        raw += rawLine + '\\n';\n                        src = src.substring(rawLine.length + 1);\n                        line = nextLine.slice(indent);\n                    }\n                }\n                if (!list.loose) {\n                    // If the previous item ended with a blank line, the list is loose\n                    if (endsWithBlankLine) {\n                        list.loose = true;\n                    }\n                    else if (/\\n *\\n *$/.test(raw)) {\n                        endsWithBlankLine = true;\n                    }\n                }\n                let istask = null;\n                let ischecked;\n                // Check for task list items\n                if (this.options.gfm) {\n                    istask = /^\\[[ xX]\\] /.exec(itemContents);\n                    if (istask) {\n                        ischecked = istask[0] !== '[ ] ';\n                        itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n                    }\n                }\n                list.items.push({\n                    type: 'list_item',\n                    raw,\n                    task: !!istask,\n                    checked: ischecked,\n                    loose: false,\n                    text: itemContents,\n                    tokens: []\n                });\n                list.raw += raw;\n            }\n            // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n            list.items[list.items.length - 1].raw = raw.trimEnd();\n            (list.items[list.items.length - 1]).text = itemContents.trimEnd();\n            list.raw = list.raw.trimEnd();\n            // Item child tokens handled here at end because we needed to have the final item to trim it first\n            for (let i = 0; i < list.items.length; i++) {\n                this.lexer.state.top = false;\n                list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n                if (!list.loose) {\n                    // Check if list should be loose\n                    const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n                    const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n                    list.loose = hasMultipleLineBreaks;\n                }\n            }\n            // Set all items to loose if list is loose\n            if (list.loose) {\n                for (let i = 0; i < list.items.length; i++) {\n                    list.items[i].loose = true;\n                }\n            }\n            return list;\n        }\n    }\n    html(src) {\n        const cap = this.rules.block.html.exec(src);\n        if (cap) {\n            const token = {\n                type: 'html',\n                block: true,\n                raw: cap[0],\n                pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n                text: cap[0]\n            };\n            return token;\n        }\n    }\n    def(src) {\n        const cap = this.rules.block.def.exec(src);\n        if (cap) {\n            const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n            const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline.anyPunctuation, '$1') : '';\n            const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline.anyPunctuation, '$1') : cap[3];\n            return {\n                type: 'def',\n                tag,\n                raw: cap[0],\n                href,\n                title\n            };\n        }\n    }\n    table(src) {\n        const cap = this.rules.block.table.exec(src);\n        if (!cap) {\n            return;\n        }\n        if (!/[:|]/.test(cap[2])) {\n            // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading\n            return;\n        }\n        const headers = splitCells(cap[1]);\n        const aligns = cap[2].replace(/^\\||\\| *$/g, '').split('|');\n        const rows = cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : [];\n        const item = {\n            type: 'table',\n            raw: cap[0],\n            header: [],\n            align: [],\n            rows: []\n        };\n        if (headers.length !== aligns.length) {\n            // header and align columns must be equal, rows can be different.\n            return;\n        }\n        for (const align of aligns) {\n            if (/^ *-+: *$/.test(align)) {\n                item.align.push('right');\n            }\n            else if (/^ *:-+: *$/.test(align)) {\n                item.align.push('center');\n            }\n            else if (/^ *:-+ *$/.test(align)) {\n                item.align.push('left');\n            }\n            else {\n                item.align.push(null);\n            }\n        }\n        for (const header of headers) {\n            item.header.push({\n                text: header,\n                tokens: this.lexer.inline(header)\n            });\n        }\n        for (const row of rows) {\n            item.rows.push(splitCells(row, item.header.length).map(cell => {\n                return {\n                    text: cell,\n                    tokens: this.lexer.inline(cell)\n                };\n            }));\n        }\n        return item;\n    }\n    lheading(src) {\n        const cap = this.rules.block.lheading.exec(src);\n        if (cap) {\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[2].charAt(0) === '=' ? 1 : 2,\n                text: cap[1],\n                tokens: this.lexer.inline(cap[1])\n            };\n        }\n    }\n    paragraph(src) {\n        const cap = this.rules.block.paragraph.exec(src);\n        if (cap) {\n            const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n                ? cap[1].slice(0, -1)\n                : cap[1];\n            return {\n                type: 'paragraph',\n                raw: cap[0],\n                text,\n                tokens: this.lexer.inline(text)\n            };\n        }\n    }\n    text(src) {\n        const cap = this.rules.block.text.exec(src);\n        if (cap) {\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                tokens: this.lexer.inline(cap[0])\n            };\n        }\n    }\n    escape(src) {\n        const cap = this.rules.inline.escape.exec(src);\n        if (cap) {\n            return {\n                type: 'escape',\n                raw: cap[0],\n                text: escape(cap[1])\n            };\n        }\n    }\n    tag(src) {\n        const cap = this.rules.inline.tag.exec(src);\n        if (cap) {\n            if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n                this.lexer.state.inLink = true;\n            }\n            else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n                this.lexer.state.inLink = false;\n            }\n            if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                this.lexer.state.inRawBlock = true;\n            }\n            else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                this.lexer.state.inRawBlock = false;\n            }\n            return {\n                type: 'html',\n                raw: cap[0],\n                inLink: this.lexer.state.inLink,\n                inRawBlock: this.lexer.state.inRawBlock,\n                block: false,\n                text: cap[0]\n            };\n        }\n    }\n    link(src) {\n        const cap = this.rules.inline.link.exec(src);\n        if (cap) {\n            const trimmedUrl = cap[2].trim();\n            if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n                // commonmark requires matching angle brackets\n                if (!(/>$/.test(trimmedUrl))) {\n                    return;\n                }\n                // ending angle bracket cannot be escaped\n                const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n                if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n                    return;\n                }\n            }\n            else {\n                // find closing parenthesis\n                const lastParenIndex = findClosingBracket(cap[2], '()');\n                if (lastParenIndex > -1) {\n                    const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n                    const linkLen = start + cap[1].length + lastParenIndex;\n                    cap[2] = cap[2].substring(0, lastParenIndex);\n                    cap[0] = cap[0].substring(0, linkLen).trim();\n                    cap[3] = '';\n                }\n            }\n            let href = cap[2];\n            let title = '';\n            if (this.options.pedantic) {\n                // split pedantic href and title\n                const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n                if (link) {\n                    href = link[1];\n                    title = link[3];\n                }\n            }\n            else {\n                title = cap[3] ? cap[3].slice(1, -1) : '';\n            }\n            href = href.trim();\n            if (/^</.test(href)) {\n                if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n                    // pedantic allows starting angle bracket without ending angle bracket\n                    href = href.slice(1);\n                }\n                else {\n                    href = href.slice(1, -1);\n                }\n            }\n            return outputLink(cap, {\n                href: href ? href.replace(this.rules.inline.anyPunctuation, '$1') : href,\n                title: title ? title.replace(this.rules.inline.anyPunctuation, '$1') : title\n            }, cap[0], this.lexer);\n        }\n    }\n    reflink(src, links) {\n        let cap;\n        if ((cap = this.rules.inline.reflink.exec(src))\n            || (cap = this.rules.inline.nolink.exec(src))) {\n            const linkString = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n            const link = links[linkString.toLowerCase()];\n            if (!link) {\n                const text = cap[0].charAt(0);\n                return {\n                    type: 'text',\n                    raw: text,\n                    text\n                };\n            }\n            return outputLink(cap, link, cap[0], this.lexer);\n        }\n    }\n    emStrong(src, maskedSrc, prevChar = '') {\n        let match = this.rules.inline.emStrongLDelim.exec(src);\n        if (!match)\n            return;\n        // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n        if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u))\n            return;\n        const nextChar = match[1] || match[2] || '';\n        if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n            // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)\n            const lLength = [...match[0]].length - 1;\n            let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n            const endReg = match[0][0] === '*' ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;\n            endReg.lastIndex = 0;\n            // Clip maskedSrc to same section of string as src (move to lexer?)\n            maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n            while ((match = endReg.exec(maskedSrc)) != null) {\n                rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n                if (!rDelim)\n                    continue; // skip single * in __abc*abc__\n                rLength = [...rDelim].length;\n                if (match[3] || match[4]) { // found another Left Delim\n                    delimTotal += rLength;\n                    continue;\n                }\n                else if (match[5] || match[6]) { // either Left or Right Delim\n                    if (lLength % 3 && !((lLength + rLength) % 3)) {\n                        midDelimTotal += rLength;\n                        continue; // CommonMark Emphasis Rules 9-10\n                    }\n                }\n                delimTotal -= rLength;\n                if (delimTotal > 0)\n                    continue; // Haven't found enough closing delimiters\n                // Remove extra characters. *a*** -> *a*\n                rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n                // char length can be >1 for unicode characters;\n                const lastCharLength = [...match[0]][0].length;\n                const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n                // Create `em` if smallest delimiter has odd char count. *a***\n                if (Math.min(lLength, rLength) % 2) {\n                    const text = raw.slice(1, -1);\n                    return {\n                        type: 'em',\n                        raw,\n                        text,\n                        tokens: this.lexer.inlineTokens(text)\n                    };\n                }\n                // Create 'strong' if smallest delimiter has even char count. **a***\n                const text = raw.slice(2, -2);\n                return {\n                    type: 'strong',\n                    raw,\n                    text,\n                    tokens: this.lexer.inlineTokens(text)\n                };\n            }\n        }\n    }\n    codespan(src) {\n        const cap = this.rules.inline.code.exec(src);\n        if (cap) {\n            let text = cap[2].replace(/\\n/g, ' ');\n            const hasNonSpaceChars = /[^ ]/.test(text);\n            const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n            if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n                text = text.substring(1, text.length - 1);\n            }\n            text = escape(text, true);\n            return {\n                type: 'codespan',\n                raw: cap[0],\n                text\n            };\n        }\n    }\n    br(src) {\n        const cap = this.rules.inline.br.exec(src);\n        if (cap) {\n            return {\n                type: 'br',\n                raw: cap[0]\n            };\n        }\n    }\n    del(src) {\n        const cap = this.rules.inline.del.exec(src);\n        if (cap) {\n            return {\n                type: 'del',\n                raw: cap[0],\n                text: cap[2],\n                tokens: this.lexer.inlineTokens(cap[2])\n            };\n        }\n    }\n    autolink(src) {\n        const cap = this.rules.inline.autolink.exec(src);\n        if (cap) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = escape(cap[1]);\n                href = 'mailto:' + text;\n            }\n            else {\n                text = escape(cap[1]);\n                href = text;\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text\n                    }\n                ]\n            };\n        }\n    }\n    url(src) {\n        let cap;\n        if (cap = this.rules.inline.url.exec(src)) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = escape(cap[0]);\n                href = 'mailto:' + text;\n            }\n            else {\n                // do extended autolink path validation\n                let prevCapZero;\n                do {\n                    prevCapZero = cap[0];\n                    cap[0] = this.rules.inline._backpedal.exec(cap[0])?.[0] ?? '';\n                } while (prevCapZero !== cap[0]);\n                text = escape(cap[0]);\n                if (cap[1] === 'www.') {\n                    href = 'http://' + cap[0];\n                }\n                else {\n                    href = cap[0];\n                }\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text\n                    }\n                ]\n            };\n        }\n    }\n    inlineText(src) {\n        const cap = this.rules.inline.text.exec(src);\n        if (cap) {\n            let text;\n            if (this.lexer.state.inRawBlock) {\n                text = cap[0];\n            }\n            else {\n                text = escape(cap[0]);\n            }\n            return {\n                type: 'text',\n                raw: cap[0],\n                text\n            };\n        }\n    }\n}\n", "import { edit, noopTest } from './helpers.ts';\n/**\n * Block-Level Grammar\n */\nconst newline = /^(?: *(?:\\n|$))+/;\nconst blockCode = /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/;\nconst fences = /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/;\nconst hr = /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/;\nconst heading = /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/;\nconst bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nconst lheading = edit(/^(?!bull )((?:.|\\n(?!\\s*?\\n|bull ))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/)\n    .replace(/bull/g, bullet) // lists can interrupt\n    .getRegex();\nconst _paragraph = /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/;\nconst blockText = /^[^\\n]+/;\nconst _blockLabel = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nconst def = edit(/^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/)\n    .replace('label', _blockLabel)\n    .replace('title', /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/)\n    .getRegex();\nconst list = edit(/^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/)\n    .replace(/bull/g, bullet)\n    .getRegex();\nconst _tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n    + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n    + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n    + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n    + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n    + '|track|ul';\nconst _comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nconst html = edit('^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')', 'i')\n    .replace('comment', _comment)\n    .replace('tag', _tag)\n    .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst paragraph = edit(_paragraph)\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n    .replace('|table', '')\n    .replace('blockquote', ' {0,3}>')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockquote = edit(/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/)\n    .replace('paragraph', paragraph)\n    .getRegex();\n/**\n * Normal Block Grammar\n */\nconst blockNormal = {\n    blockquote,\n    code: blockCode,\n    def,\n    fences,\n    heading,\n    hr,\n    html,\n    lheading,\n    list,\n    newline,\n    paragraph,\n    table: noopTest,\n    text: blockText\n};\n/**\n * GFM Block Grammar\n */\nconst gfmTable = edit('^ *([^\\\\n ].*)\\\\n' // Header\n    + ' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)') // Cells\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('blockquote', ' {0,3}>')\n    .replace('code', ' {4}[^\\\\n]')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // tables can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockGfm = {\n    ...blockNormal,\n    table: gfmTable,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n        .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n        .replace('table', gfmTable) // interrupt paragraphs with table\n        .replace('blockquote', ' {0,3}>')\n        .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n        .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n        .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n        .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n        .getRegex()\n};\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\nconst blockPedantic = {\n    ...blockNormal,\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)'\n        + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n        + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n        .replace('comment', _comment)\n        .replace(/tag/g, '(?!(?:'\n        + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n        + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n        + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n        .getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest, // fences not supported\n    lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' *#{1,6} *[^\\n]')\n        .replace('lheading', lheading)\n        .replace('|table', '')\n        .replace('blockquote', ' {0,3}>')\n        .replace('|fences', '')\n        .replace('|list', '')\n        .replace('|html', '')\n        .replace('|tag', '')\n        .getRegex()\n};\n/**\n * Inline-Level Grammar\n */\nconst escape = /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/;\nconst inlineCode = /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/;\nconst br = /^( {2,}|\\\\)\\n(?!\\s*$)/;\nconst inlineText = /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/;\n// list of unicode punctuation marks, plus any missing characters from CommonMark spec\nconst _punctuation = '\\\\p{P}$+<=>`^|~';\nconst punctuation = edit(/^((?![*_])[\\spunctuation])/, 'u')\n    .replace(/punctuation/g, _punctuation).getRegex();\n// sequences em should skip over [title](link), `code`, <html>\nconst blockSkip = /\\[[^[\\]]*?\\]\\([^\\(\\)]*?\\)|`[^`]*?`|<[^<>]*?>/g;\nconst emStrongLDelim = edit(/^(?:\\*+(?:((?!\\*)[punct])|[^\\s*]))|^_+(?:((?!_)[punct])|([^\\s_]))/, 'u')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst emStrongRDelimAst = edit('^[^_*]*?__[^_*]*?\\\\*[^_*]*?(?=__)' // Skip orphan inside strong\n    + '|[^*]+(?=[^*])' // Consume to delim\n    + '|(?!\\\\*)[punct](\\\\*+)(?=[\\\\s]|$)' // (1) #*** can only be a Right Delimiter\n    + '|[^punct\\\\s](\\\\*+)(?!\\\\*)(?=[punct\\\\s]|$)' // (2) a***#, a*** can only be a Right Delimiter\n    + '|(?!\\\\*)[punct\\\\s](\\\\*+)(?=[^punct\\\\s])' // (3) #***a, ***a can only be Left Delimiter\n    + '|[\\\\s](\\\\*+)(?!\\\\*)(?=[punct])' // (4) ***# can only be Left Delimiter\n    + '|(?!\\\\*)[punct](\\\\*+)(?!\\\\*)(?=[punct])' // (5) #***# can be either Left or Right Delimiter\n    + '|[^punct\\\\s](\\\\*+)(?=[^punct\\\\s])', 'gu') // (6) a***a can be either Left or Right Delimiter\n    .replace(/punct/g, _punctuation)\n    .getRegex();\n// (6) Not allowed for _\nconst emStrongRDelimUnd = edit('^[^_*]*?\\\\*\\\\*[^_*]*?_[^_*]*?(?=\\\\*\\\\*)' // Skip orphan inside strong\n    + '|[^_]+(?=[^_])' // Consume to delim\n    + '|(?!_)[punct](_+)(?=[\\\\s]|$)' // (1) #___ can only be a Right Delimiter\n    + '|[^punct\\\\s](_+)(?!_)(?=[punct\\\\s]|$)' // (2) a___#, a___ can only be a Right Delimiter\n    + '|(?!_)[punct\\\\s](_+)(?=[^punct\\\\s])' // (3) #___a, ___a can only be Left Delimiter\n    + '|[\\\\s](_+)(?!_)(?=[punct])' // (4) ___# can only be Left Delimiter\n    + '|(?!_)[punct](_+)(?!_)(?=[punct])', 'gu') // (5) #___# can be either Left or Right Delimiter\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst anyPunctuation = edit(/\\\\([punct])/, 'gu')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst autolink = edit(/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/)\n    .replace('scheme', /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/)\n    .replace('email', /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/)\n    .getRegex();\nconst _inlineComment = edit(_comment).replace('(?:-->|$)', '-->').getRegex();\nconst tag = edit('^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>') // CDATA section\n    .replace('comment', _inlineComment)\n    .replace('attribute', /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst _inlineLabel = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\nconst link = edit(/^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/)\n    .replace('label', _inlineLabel)\n    .replace('href', /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/)\n    .replace('title', /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/)\n    .getRegex();\nconst reflink = edit(/^!?\\[(label)\\]\\[(ref)\\]/)\n    .replace('label', _inlineLabel)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst nolink = edit(/^!?\\[(ref)\\](?:\\[\\])?/)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst reflinkSearch = edit('reflink|nolink(?!\\\\()', 'g')\n    .replace('reflink', reflink)\n    .replace('nolink', nolink)\n    .getRegex();\n/**\n * Normal Inline Grammar\n */\nconst inlineNormal = {\n    _backpedal: noopTest, // only used for GFM url\n    anyPunctuation,\n    autolink,\n    blockSkip,\n    br,\n    code: inlineCode,\n    del: noopTest,\n    emStrongLDelim,\n    emStrongRDelimAst,\n    emStrongRDelimUnd,\n    escape,\n    link,\n    nolink,\n    punctuation,\n    reflink,\n    reflinkSearch,\n    tag,\n    text: inlineText,\n    url: noopTest\n};\n/**\n * Pedantic Inline Grammar\n */\nconst inlinePedantic = {\n    ...inlineNormal,\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n        .replace('label', _inlineLabel)\n        .getRegex()\n};\n/**\n * GFM Inline Grammar\n */\nconst inlineGfm = {\n    ...inlineNormal,\n    escape: edit(escape).replace('])', '~|])').getRegex(),\n    url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/, 'i')\n        .replace('email', /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/)\n        .getRegex(),\n    _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n};\n/**\n * GFM + Line Breaks Inline Grammar\n */\nconst inlineBreaks = {\n    ...inlineGfm,\n    br: edit(br).replace('{2,}', '*').getRegex(),\n    text: edit(inlineGfm.text)\n        .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n        .replace(/\\{2,\\}/g, '*')\n        .getRegex()\n};\n/**\n * exports\n */\nexport const block = {\n    normal: blockNormal,\n    gfm: blockGfm,\n    pedantic: blockPedantic\n};\nexport const inline = {\n    normal: inlineNormal,\n    gfm: inlineGfm,\n    breaks: inlineBreaks,\n    pedantic: inlinePedantic\n};\n", "import { _Tokenizer } from './Tokenizer.ts';\nimport { _defaults } from './defaults.ts';\nimport { block, inline } from './rules.ts';\n/**\n * Block Lexer\n */\nexport class _Lexer {\n    tokens;\n    options;\n    state;\n    tokenizer;\n    inlineQueue;\n    constructor(options) {\n        // TokenList cannot be created in one go\n        this.tokens = [];\n        this.tokens.links = Object.create(null);\n        this.options = options || _defaults;\n        this.options.tokenizer = this.options.tokenizer || new _Tokenizer();\n        this.tokenizer = this.options.tokenizer;\n        this.tokenizer.options = this.options;\n        this.tokenizer.lexer = this;\n        this.inlineQueue = [];\n        this.state = {\n            inLink: false,\n            inRawBlock: false,\n            top: true\n        };\n        const rules = {\n            block: block.normal,\n            inline: inline.normal\n        };\n        if (this.options.pedantic) {\n            rules.block = block.pedantic;\n            rules.inline = inline.pedantic;\n        }\n        else if (this.options.gfm) {\n            rules.block = block.gfm;\n            if (this.options.breaks) {\n                rules.inline = inline.breaks;\n            }\n            else {\n                rules.inline = inline.gfm;\n            }\n        }\n        this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n    static get rules() {\n        return {\n            block,\n            inline\n        };\n    }\n    /**\n     * Static Lex Method\n     */\n    static lex(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    static lexInline(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    lex(src) {\n        src = src\n            .replace(/\\r\\n|\\r/g, '\\n');\n        this.blockTokens(src, this.tokens);\n        let next;\n        while (next = this.inlineQueue.shift()) {\n            this.inlineTokens(next.src, next.tokens);\n        }\n        return this.tokens;\n    }\n    blockTokens(src, tokens = []) {\n        if (this.options.pedantic) {\n            src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n        }\n        else {\n            src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n                return leading + '    '.repeat(tabs.length);\n            });\n        }\n        let token;\n        let lastToken;\n        let cutSrc;\n        let lastParagraphClipped;\n        while (src) {\n            if (this.options.extensions\n                && this.options.extensions.block\n                && this.options.extensions.block.some((extTokenizer) => {\n                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) {\n                continue;\n            }\n            // newline\n            if (token = this.tokenizer.space(src)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.length === 1 && tokens.length > 0) {\n                    // if there's a single \\n as a spacer, it's terminating the last line,\n                    // so move it there so that we don't get unnecessary paragraph tags\n                    tokens[tokens.length - 1].raw += '\\n';\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.code(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                // An indented code block cannot interrupt a paragraph.\n                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // fences\n            if (token = this.tokenizer.fences(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // heading\n            if (token = this.tokenizer.heading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // hr\n            if (token = this.tokenizer.hr(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // blockquote\n            if (token = this.tokenizer.blockquote(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // list\n            if (token = this.tokenizer.list(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // html\n            if (token = this.tokenizer.html(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // def\n            if (token = this.tokenizer.def(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.raw;\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else if (!this.tokens.links[token.tag]) {\n                    this.tokens.links[token.tag] = {\n                        href: token.href,\n                        title: token.title\n                    };\n                }\n                continue;\n            }\n            // table (gfm)\n            if (token = this.tokenizer.table(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // lheading\n            if (token = this.tokenizer.lheading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // top-level paragraph\n            // prevent paragraph consuming extensions by clipping 'src' to extension start\n            cutSrc = src;\n            if (this.options.extensions && this.options.extensions.startBlock) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startBlock.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n                lastToken = tokens[tokens.length - 1];\n                if (lastParagraphClipped && lastToken.type === 'paragraph') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                lastParagraphClipped = (cutSrc.length !== src.length);\n                src = src.substring(token.raw.length);\n                continue;\n            }\n            // text\n            if (token = this.tokenizer.text(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && lastToken.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        this.state.top = true;\n        return tokens;\n    }\n    inline(src, tokens = []) {\n        this.inlineQueue.push({ src, tokens });\n        return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    inlineTokens(src, tokens = []) {\n        let token, lastToken, cutSrc;\n        // String with links masked to avoid interference with em and strong\n        let maskedSrc = src;\n        let match;\n        let keepPrevChar, prevChar;\n        // Mask out reflinks\n        if (this.tokens.links) {\n            const links = Object.keys(this.tokens.links);\n            if (links.length > 0) {\n                while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n                    if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n                        maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n                    }\n                }\n            }\n        }\n        // Mask out other blocks\n        while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n        }\n        // Mask out escaped characters\n        while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n        }\n        while (src) {\n            if (!keepPrevChar) {\n                prevChar = '';\n            }\n            keepPrevChar = false;\n            // extensions\n            if (this.options.extensions\n                && this.options.extensions.inline\n                && this.options.extensions.inline.some((extTokenizer) => {\n                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) {\n                continue;\n            }\n            // escape\n            if (token = this.tokenizer.escape(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // tag\n            if (token = this.tokenizer.tag(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // link\n            if (token = this.tokenizer.link(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // reflink, nolink\n            if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // em & strong\n            if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.codespan(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // br\n            if (token = this.tokenizer.br(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // del (gfm)\n            if (token = this.tokenizer.del(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // autolink\n            if (token = this.tokenizer.autolink(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // url (gfm)\n            if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // text\n            // prevent inlineText consuming extensions by clipping 'src' to extension start\n            cutSrc = src;\n            if (this.options.extensions && this.options.extensions.startInline) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startInline.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (token = this.tokenizer.inlineText(cutSrc)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n                    prevChar = token.raw.slice(-1);\n                }\n                keepPrevChar = true;\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        return tokens;\n    }\n}\n", "import { _defaults } from './defaults.ts';\nimport { cleanUrl, escape } from './helpers.ts';\n/**\n * Renderer\n */\nexport class _Renderer {\n    options;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    code(code, infostring, escaped) {\n        const lang = (infostring || '').match(/^\\S*/)?.[0];\n        code = code.replace(/\\n$/, '') + '\\n';\n        if (!lang) {\n            return '<pre><code>'\n                + (escaped ? code : escape(code, true))\n                + '</code></pre>\\n';\n        }\n        return '<pre><code class=\"language-'\n            + escape(lang)\n            + '\">'\n            + (escaped ? code : escape(code, true))\n            + '</code></pre>\\n';\n    }\n    blockquote(quote) {\n        return `<blockquote>\\n${quote}</blockquote>\\n`;\n    }\n    html(html, block) {\n        return html;\n    }\n    heading(text, level, raw) {\n        // ignore IDs\n        return `<h${level}>${text}</h${level}>\\n`;\n    }\n    hr() {\n        return '<hr>\\n';\n    }\n    list(body, ordered, start) {\n        const type = ordered ? 'ol' : 'ul';\n        const startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n        return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    }\n    listitem(text, task, checked) {\n        return `<li>${text}</li>\\n`;\n    }\n    checkbox(checked) {\n        return '<input '\n            + (checked ? 'checked=\"\" ' : '')\n            + 'disabled=\"\" type=\"checkbox\">';\n    }\n    paragraph(text) {\n        return `<p>${text}</p>\\n`;\n    }\n    table(header, body) {\n        if (body)\n            body = `<tbody>${body}</tbody>`;\n        return '<table>\\n'\n            + '<thead>\\n'\n            + header\n            + '</thead>\\n'\n            + body\n            + '</table>\\n';\n    }\n    tablerow(content) {\n        return `<tr>\\n${content}</tr>\\n`;\n    }\n    tablecell(content, flags) {\n        const type = flags.header ? 'th' : 'td';\n        const tag = flags.align\n            ? `<${type} align=\"${flags.align}\">`\n            : `<${type}>`;\n        return tag + content + `</${type}>\\n`;\n    }\n    /**\n     * span level renderer\n     */\n    strong(text) {\n        return `<strong>${text}</strong>`;\n    }\n    em(text) {\n        return `<em>${text}</em>`;\n    }\n    codespan(text) {\n        return `<code>${text}</code>`;\n    }\n    br() {\n        return '<br>';\n    }\n    del(text) {\n        return `<del>${text}</del>`;\n    }\n    link(href, title, text) {\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = '<a href=\"' + href + '\"';\n        if (title) {\n            out += ' title=\"' + title + '\"';\n        }\n        out += '>' + text + '</a>';\n        return out;\n    }\n    image(href, title, text) {\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = `<img src=\"${href}\" alt=\"${text}\"`;\n        if (title) {\n            out += ` title=\"${title}\"`;\n        }\n        out += '>';\n        return out;\n    }\n    text(text) {\n        return text;\n    }\n}\n", "/**\n * TextRenderer\n * returns only the textual part of the token\n */\nexport class _TextRenderer {\n    // no need for block level renderers\n    strong(text) {\n        return text;\n    }\n    em(text) {\n        return text;\n    }\n    codespan(text) {\n        return text;\n    }\n    del(text) {\n        return text;\n    }\n    html(text) {\n        return text;\n    }\n    text(text) {\n        return text;\n    }\n    link(href, title, text) {\n        return '' + text;\n    }\n    image(href, title, text) {\n        return '' + text;\n    }\n    br() {\n        return '';\n    }\n}\n", "import { _Renderer } from './Renderer.ts';\nimport { _TextRenderer } from './TextRenderer.ts';\nimport { _defaults } from './defaults.ts';\nimport { unescape } from './helpers.ts';\n/**\n * Parsing & Compiling\n */\nexport class _Parser {\n    options;\n    renderer;\n    textRenderer;\n    constructor(options) {\n        this.options = options || _defaults;\n        this.options.renderer = this.options.renderer || new _Renderer();\n        this.renderer = this.options.renderer;\n        this.renderer.options = this.options;\n        this.textRenderer = new _TextRenderer();\n    }\n    /**\n     * Static Parse Method\n     */\n    static parse(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    static parseInline(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    parse(tokens, top = true) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const token = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n                const genericToken = token;\n                const ret = this.options.extensions.renderers[genericToken.type].call({ parser: this }, genericToken);\n                if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            switch (token.type) {\n                case 'space': {\n                    continue;\n                }\n                case 'hr': {\n                    out += this.renderer.hr();\n                    continue;\n                }\n                case 'heading': {\n                    const headingToken = token;\n                    out += this.renderer.heading(this.parseInline(headingToken.tokens), headingToken.depth, unescape(this.parseInline(headingToken.tokens, this.textRenderer)));\n                    continue;\n                }\n                case 'code': {\n                    const codeToken = token;\n                    out += this.renderer.code(codeToken.text, codeToken.lang, !!codeToken.escaped);\n                    continue;\n                }\n                case 'table': {\n                    const tableToken = token;\n                    let header = '';\n                    // header\n                    let cell = '';\n                    for (let j = 0; j < tableToken.header.length; j++) {\n                        cell += this.renderer.tablecell(this.parseInline(tableToken.header[j].tokens), { header: true, align: tableToken.align[j] });\n                    }\n                    header += this.renderer.tablerow(cell);\n                    let body = '';\n                    for (let j = 0; j < tableToken.rows.length; j++) {\n                        const row = tableToken.rows[j];\n                        cell = '';\n                        for (let k = 0; k < row.length; k++) {\n                            cell += this.renderer.tablecell(this.parseInline(row[k].tokens), { header: false, align: tableToken.align[k] });\n                        }\n                        body += this.renderer.tablerow(cell);\n                    }\n                    out += this.renderer.table(header, body);\n                    continue;\n                }\n                case 'blockquote': {\n                    const blockquoteToken = token;\n                    const body = this.parse(blockquoteToken.tokens);\n                    out += this.renderer.blockquote(body);\n                    continue;\n                }\n                case 'list': {\n                    const listToken = token;\n                    const ordered = listToken.ordered;\n                    const start = listToken.start;\n                    const loose = listToken.loose;\n                    let body = '';\n                    for (let j = 0; j < listToken.items.length; j++) {\n                        const item = listToken.items[j];\n                        const checked = item.checked;\n                        const task = item.task;\n                        let itemBody = '';\n                        if (item.task) {\n                            const checkbox = this.renderer.checkbox(!!checked);\n                            if (loose) {\n                                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                                    item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                                    if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                                    }\n                                }\n                                else {\n                                    item.tokens.unshift({\n                                        type: 'text',\n                                        text: checkbox + ' '\n                                    });\n                                }\n                            }\n                            else {\n                                itemBody += checkbox + ' ';\n                            }\n                        }\n                        itemBody += this.parse(item.tokens, loose);\n                        body += this.renderer.listitem(itemBody, task, !!checked);\n                    }\n                    out += this.renderer.list(body, ordered, start);\n                    continue;\n                }\n                case 'html': {\n                    const htmlToken = token;\n                    out += this.renderer.html(htmlToken.text, htmlToken.block);\n                    continue;\n                }\n                case 'paragraph': {\n                    const paragraphToken = token;\n                    out += this.renderer.paragraph(this.parseInline(paragraphToken.tokens));\n                    continue;\n                }\n                case 'text': {\n                    let textToken = token;\n                    let body = textToken.tokens ? this.parseInline(textToken.tokens) : textToken.text;\n                    while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {\n                        textToken = tokens[++i];\n                        body += '\\n' + (textToken.tokens ? this.parseInline(textToken.tokens) : textToken.text);\n                    }\n                    out += top ? this.renderer.paragraph(body) : body;\n                    continue;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    parseInline(tokens, renderer) {\n        renderer = renderer || this.renderer;\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const token = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n                const ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n                if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            switch (token.type) {\n                case 'escape': {\n                    const escapeToken = token;\n                    out += renderer.text(escapeToken.text);\n                    break;\n                }\n                case 'html': {\n                    const tagToken = token;\n                    out += renderer.html(tagToken.text);\n                    break;\n                }\n                case 'link': {\n                    const linkToken = token;\n                    out += renderer.link(linkToken.href, linkToken.title, this.parseInline(linkToken.tokens, renderer));\n                    break;\n                }\n                case 'image': {\n                    const imageToken = token;\n                    out += renderer.image(imageToken.href, imageToken.title, imageToken.text);\n                    break;\n                }\n                case 'strong': {\n                    const strongToken = token;\n                    out += renderer.strong(this.parseInline(strongToken.tokens, renderer));\n                    break;\n                }\n                case 'em': {\n                    const emToken = token;\n                    out += renderer.em(this.parseInline(emToken.tokens, renderer));\n                    break;\n                }\n                case 'codespan': {\n                    const codespanToken = token;\n                    out += renderer.codespan(codespanToken.text);\n                    break;\n                }\n                case 'br': {\n                    out += renderer.br();\n                    break;\n                }\n                case 'del': {\n                    const delToken = token;\n                    out += renderer.del(this.parseInline(delToken.tokens, renderer));\n                    break;\n                }\n                case 'text': {\n                    const textToken = token;\n                    out += renderer.text(textToken.text);\n                    break;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n}\n", "import { _defaults } from './defaults.ts';\nexport class _Hooks {\n    options;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    static passThroughHooks = new Set([\n        'preprocess',\n        'postprocess'\n    ]);\n    /**\n     * Process markdown before marked\n     */\n    preprocess(markdown) {\n        return markdown;\n    }\n    /**\n     * Process HTML after marked is finished\n     */\n    postprocess(html) {\n        return html;\n    }\n}\n", "import { _getDefaults } from './defaults.ts';\nimport { _Lexer } from './Lexer.ts';\nimport { _Parser } from './Parser.ts';\nimport { _Hooks } from './Hooks.ts';\nimport { _Renderer } from './Renderer.ts';\nimport { _Tokenizer } from './Tokenizer.ts';\nimport { _TextRenderer } from './TextRenderer.ts';\nimport { escape } from './helpers.ts';\nexport class Marked {\n    defaults = _getDefaults();\n    options = this.setOptions;\n    parse = this.#parseMarkdown(_Lexer.lex, _Parser.parse);\n    parseInline = this.#parseMarkdown(_Lexer.lexInline, _Parser.parseInline);\n    Parser = _Parser;\n    Renderer = _Renderer;\n    TextRenderer = _TextRenderer;\n    Lexer = _Lexer;\n    Tokenizer = _Tokenizer;\n    Hooks = _Hooks;\n    constructor(...args) {\n        this.use(...args);\n    }\n    /**\n     * Run callback for every token\n     */\n    walkTokens(tokens, callback) {\n        let values = [];\n        for (const token of tokens) {\n            values = values.concat(callback.call(this, token));\n            switch (token.type) {\n                case 'table': {\n                    const tableToken = token;\n                    for (const cell of tableToken.header) {\n                        values = values.concat(this.walkTokens(cell.tokens, callback));\n                    }\n                    for (const row of tableToken.rows) {\n                        for (const cell of row) {\n                            values = values.concat(this.walkTokens(cell.tokens, callback));\n                        }\n                    }\n                    break;\n                }\n                case 'list': {\n                    const listToken = token;\n                    values = values.concat(this.walkTokens(listToken.items, callback));\n                    break;\n                }\n                default: {\n                    const genericToken = token;\n                    if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n                        this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens) => {\n                            values = values.concat(this.walkTokens(genericToken[childTokens], callback));\n                        });\n                    }\n                    else if (genericToken.tokens) {\n                        values = values.concat(this.walkTokens(genericToken.tokens, callback));\n                    }\n                }\n            }\n        }\n        return values;\n    }\n    use(...args) {\n        const extensions = this.defaults.extensions || { renderers: {}, childTokens: {} };\n        args.forEach((pack) => {\n            // copy options to new object\n            const opts = { ...pack };\n            // set async to true if it was set to true before\n            opts.async = this.defaults.async || opts.async || false;\n            // ==-- Parse \"addon\" extensions --== //\n            if (pack.extensions) {\n                pack.extensions.forEach((ext) => {\n                    if (!ext.name) {\n                        throw new Error('extension name required');\n                    }\n                    if ('renderer' in ext) { // Renderer extensions\n                        const prevRenderer = extensions.renderers[ext.name];\n                        if (prevRenderer) {\n                            // Replace extension with func to run new extension but fall back if false\n                            extensions.renderers[ext.name] = function (...args) {\n                                let ret = ext.renderer.apply(this, args);\n                                if (ret === false) {\n                                    ret = prevRenderer.apply(this, args);\n                                }\n                                return ret;\n                            };\n                        }\n                        else {\n                            extensions.renderers[ext.name] = ext.renderer;\n                        }\n                    }\n                    if ('tokenizer' in ext) { // Tokenizer Extensions\n                        if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n                            throw new Error(\"extension level must be 'block' or 'inline'\");\n                        }\n                        const extLevel = extensions[ext.level];\n                        if (extLevel) {\n                            extLevel.unshift(ext.tokenizer);\n                        }\n                        else {\n                            extensions[ext.level] = [ext.tokenizer];\n                        }\n                        if (ext.start) { // Function to check for start of token\n                            if (ext.level === 'block') {\n                                if (extensions.startBlock) {\n                                    extensions.startBlock.push(ext.start);\n                                }\n                                else {\n                                    extensions.startBlock = [ext.start];\n                                }\n                            }\n                            else if (ext.level === 'inline') {\n                                if (extensions.startInline) {\n                                    extensions.startInline.push(ext.start);\n                                }\n                                else {\n                                    extensions.startInline = [ext.start];\n                                }\n                            }\n                        }\n                    }\n                    if ('childTokens' in ext && ext.childTokens) { // Child tokens to be visited by walkTokens\n                        extensions.childTokens[ext.name] = ext.childTokens;\n                    }\n                });\n                opts.extensions = extensions;\n            }\n            // ==-- Parse \"overwrite\" extensions --== //\n            if (pack.renderer) {\n                const renderer = this.defaults.renderer || new _Renderer(this.defaults);\n                for (const prop in pack.renderer) {\n                    if (!(prop in renderer) || prop === 'options') {\n                        throw new Error(`renderer '${prop}' does not exist`);\n                    }\n                    const rendererProp = prop;\n                    const rendererFunc = pack.renderer[rendererProp];\n                    const prevRenderer = renderer[rendererProp];\n                    // Replace renderer with func to run extension, but fall back if false\n                    renderer[rendererProp] = (...args) => {\n                        let ret = rendererFunc.apply(renderer, args);\n                        if (ret === false) {\n                            ret = prevRenderer.apply(renderer, args);\n                        }\n                        return ret || '';\n                    };\n                }\n                opts.renderer = renderer;\n            }\n            if (pack.tokenizer) {\n                const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);\n                for (const prop in pack.tokenizer) {\n                    if (!(prop in tokenizer) || ['options', 'rules', 'lexer'].includes(prop)) {\n                        throw new Error(`tokenizer '${prop}' does not exist`);\n                    }\n                    const tokenizerProp = prop;\n                    const tokenizerFunc = pack.tokenizer[tokenizerProp];\n                    const prevTokenizer = tokenizer[tokenizerProp];\n                    // Replace tokenizer with func to run extension, but fall back if false\n                    // @ts-expect-error cannot type tokenizer function dynamically\n                    tokenizer[tokenizerProp] = (...args) => {\n                        let ret = tokenizerFunc.apply(tokenizer, args);\n                        if (ret === false) {\n                            ret = prevTokenizer.apply(tokenizer, args);\n                        }\n                        return ret;\n                    };\n                }\n                opts.tokenizer = tokenizer;\n            }\n            // ==-- Parse Hooks extensions --== //\n            if (pack.hooks) {\n                const hooks = this.defaults.hooks || new _Hooks();\n                for (const prop in pack.hooks) {\n                    if (!(prop in hooks) || prop === 'options') {\n                        throw new Error(`hook '${prop}' does not exist`);\n                    }\n                    const hooksProp = prop;\n                    const hooksFunc = pack.hooks[hooksProp];\n                    const prevHook = hooks[hooksProp];\n                    if (_Hooks.passThroughHooks.has(prop)) {\n                        hooks[hooksProp] = (arg) => {\n                            if (this.defaults.async) {\n                                return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {\n                                    return prevHook.call(hooks, ret);\n                                });\n                            }\n                            const ret = hooksFunc.call(hooks, arg);\n                            return prevHook.call(hooks, ret);\n                        };\n                    }\n                    else {\n                        hooks[hooksProp] = (...args) => {\n                            let ret = hooksFunc.apply(hooks, args);\n                            if (ret === false) {\n                                ret = prevHook.apply(hooks, args);\n                            }\n                            return ret;\n                        };\n                    }\n                }\n                opts.hooks = hooks;\n            }\n            // ==-- Parse WalkTokens extensions --== //\n            if (pack.walkTokens) {\n                const walkTokens = this.defaults.walkTokens;\n                const packWalktokens = pack.walkTokens;\n                opts.walkTokens = function (token) {\n                    let values = [];\n                    values.push(packWalktokens.call(this, token));\n                    if (walkTokens) {\n                        values = values.concat(walkTokens.call(this, token));\n                    }\n                    return values;\n                };\n            }\n            this.defaults = { ...this.defaults, ...opts };\n        });\n        return this;\n    }\n    setOptions(opt) {\n        this.defaults = { ...this.defaults, ...opt };\n        return this;\n    }\n    lexer(src, options) {\n        return _Lexer.lex(src, options ?? this.defaults);\n    }\n    parser(tokens, options) {\n        return _Parser.parse(tokens, options ?? this.defaults);\n    }\n    #parseMarkdown(lexer, parser) {\n        return (src, options) => {\n            const origOpt = { ...options };\n            const opt = { ...this.defaults, ...origOpt };\n            // Show warning if an extension set async to true but the parse was called with async: false\n            if (this.defaults.async === true && origOpt.async === false) {\n                if (!opt.silent) {\n                    console.warn('marked(): The async option was set to true by an extension. The async: false option sent to parse will be ignored.');\n                }\n                opt.async = true;\n            }\n            const throwError = this.#onError(!!opt.silent, !!opt.async);\n            // throw error in case of non string input\n            if (typeof src === 'undefined' || src === null) {\n                return throwError(new Error('marked(): input parameter is undefined or null'));\n            }\n            if (typeof src !== 'string') {\n                return throwError(new Error('marked(): input parameter is of type '\n                    + Object.prototype.toString.call(src) + ', string expected'));\n            }\n            if (opt.hooks) {\n                opt.hooks.options = opt;\n            }\n            if (opt.async) {\n                return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n                    .then(src => lexer(src, opt))\n                    .then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n                    .then(tokens => parser(tokens, opt))\n                    .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n                    .catch(throwError);\n            }\n            try {\n                if (opt.hooks) {\n                    src = opt.hooks.preprocess(src);\n                }\n                const tokens = lexer(src, opt);\n                if (opt.walkTokens) {\n                    this.walkTokens(tokens, opt.walkTokens);\n                }\n                let html = parser(tokens, opt);\n                if (opt.hooks) {\n                    html = opt.hooks.postprocess(html);\n                }\n                return html;\n            }\n            catch (e) {\n                return throwError(e);\n            }\n        };\n    }\n    #onError(silent, async) {\n        return (e) => {\n            e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n            if (silent) {\n                const msg = '<p>An error occurred:</p><pre>'\n                    + escape(e.message + '', true)\n                    + '</pre>';\n                if (async) {\n                    return Promise.resolve(msg);\n                }\n                return msg;\n            }\n            if (async) {\n                return Promise.reject(e);\n            }\n            throw e;\n        };\n    }\n}\n", "import { _Lexer } from './Lexer.ts';\nimport { _Parser } from './Parser.ts';\nimport { _Tokenizer } from './Tokenizer.ts';\nimport { _Renderer } from './Renderer.ts';\nimport { _TextRenderer } from './TextRenderer.ts';\nimport { _Hooks } from './Hooks.ts';\nimport { Marked } from './Instance.ts';\nimport { _getDefaults, changeDefaults, _defaults } from './defaults.ts';\nconst markedInstance = new Marked();\nexport function marked(src, opt) {\n    return markedInstance.parse(src, opt);\n}\n/**\n * Sets the default options.\n *\n * @param options Hash of options\n */\nmarked.options =\n    marked.setOptions = function (options) {\n        markedInstance.setOptions(options);\n        marked.defaults = markedInstance.defaults;\n        changeDefaults(marked.defaults);\n        return marked;\n    };\n/**\n * Gets the original marked default options.\n */\nmarked.getDefaults = _getDefaults;\nmarked.defaults = _defaults;\n/**\n * Use Extension\n */\nmarked.use = function (...args) {\n    markedInstance.use(...args);\n    marked.defaults = markedInstance.defaults;\n    changeDefaults(marked.defaults);\n    return marked;\n};\n/**\n * Run callback for every token\n */\nmarked.walkTokens = function (tokens, callback) {\n    return markedInstance.walkTokens(tokens, callback);\n};\n/**\n * Compiles markdown to HTML without enclosing `p` tag.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options\n * @return String of compiled HTML\n */\nmarked.parseInline = markedInstance.parseInline;\n/**\n * Expose\n */\nmarked.Parser = _Parser;\nmarked.parser = _Parser.parse;\nmarked.Renderer = _Renderer;\nmarked.TextRenderer = _TextRenderer;\nmarked.Lexer = _Lexer;\nmarked.lexer = _Lexer.lex;\nmarked.Tokenizer = _Tokenizer;\nmarked.Hooks = _Hooks;\nmarked.parse = marked;\nexport const options = marked.options;\nexport const setOptions = marked.setOptions;\nexport const use = marked.use;\nexport const walkTokens = marked.walkTokens;\nexport const parseInline = marked.parseInline;\nexport const parse = marked;\nexport const parser = _Parser.parse;\nexport const lexer = _Lexer.lex;\nexport { _defaults as defaults, _getDefaults as getDefaults } from './defaults.ts';\nexport { _Lexer as Lexer } from './Lexer.ts';\nexport { _Parser as Parser } from './Parser.ts';\nexport { _Tokenizer as Tokenizer } from './Tokenizer.ts';\nexport { _Renderer as Renderer } from './Renderer.ts';\nexport { _TextRenderer as TextRenderer } from './TextRenderer.ts';\nexport { _Hooks as Hooks } from './Hooks.ts';\nexport { Marked } from './Instance.ts';\n", "export function markedHighlight(options) {\n  if (typeof options === 'function') {\n    options = {\n      highlight: options\n    };\n  }\n\n  if (!options || typeof options.highlight !== 'function') {\n    throw new Error('Must provide highlight function');\n  }\n\n  if (typeof options.langPrefix !== 'string') {\n    options.langPrefix = 'language-';\n  }\n\n  return {\n    async: !!options.async,\n    walkTokens(token) {\n      if (token.type !== 'code') {\n        return;\n      }\n\n      const lang = getLang(token);\n\n      if (options.async) {\n        return Promise.resolve(options.highlight(token.text, lang)).then(updateToken(token));\n      }\n\n      const code = options.highlight(token.text, lang);\n      if (code instanceof Promise) {\n        throw new Error('markedHighlight is not set to async but the highlight function is async. Set the async option to true on markedHighlight to await the async highlight function.');\n      }\n      updateToken(token)(code);\n    },\n    renderer: {\n      code(code, infoString, escaped) {\n        const lang = (infoString || '').match(/\\S*/)[0];\n        const classAttr = lang\n          ? ` class=\"${options.langPrefix}${escape(lang)}\"`\n          : '';\n        code = code.replace(/\\n$/, '');\n        return `<pre><code${classAttr}>${escaped ? code : escape(code, true)}\\n</code></pre>`;\n      }\n    }\n  };\n}\n\nfunction getLang(token) {\n  return (token.lang || '').match(/\\S*/)[0];\n}\n\nfunction updateToken(token) {\n  return (code) => {\n    if (typeof code === 'string' && code !== token.text) {\n      token.escaped = true;\n      token.text = code;\n    }\n  };\n}\n\n// copied from marked helpers\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n", "import { marked, Renderer } from 'marked';\nimport { markedHighlight } from 'marked-highlight';\nimport * as Prism from 'prismjs';\n\nexport function getCodeExample(slot: HTMLSlotElement): string {\n  return slot.assignedElements().reduce((acc, el) => `${acc}\\n${el.outerHTML}`, '');\n}\n\n/**\n * Custom marked renderer to wrap code in a custom element.\n */\nexport class CustomRenderer extends Renderer {\n  // for some unknown reason, the raw code is no more available in the code renderer since we switched\n  // marked to asynchronous highlighting. Thus, we store the raw code along with the highlighted code\n  // for later use in this convenient internal map.\n  #rawCodeMap = new Map<string, string>();\n\n  constructor(\n    private readonly addCodePreview = true,\n    private readonly previewTagName?: string,\n  ) {\n    super();\n  }\n\n  storeRawCode(raw: string, highlighted: string) {\n    this.#rawCodeMap.set(highlighted, raw);\n  }\n\n  override code(code: string, language = 'plaintext', escaped = false): string {\n    // do not use example component for anything but html examples\n    if (language !== 'html' || !this.addCodePreview || (escaped && !this.#rawCodeMap.has(code))) {\n      return `<wcp-code>${super.code(code, language, escaped)}</wcp-code>`;\n    }\n\n    // if a tag name is provided, use it to parametrize the preview component\n    const previewTagName = this.previewTagName ? ` preview-tag-name=\"${this.previewTagName}\"` : '';\n    const raw = escaped ? this.#rawCodeMap.get(code) : code;\n\n    // wrap the code in a custom element to preview it\n    return `\n      <wcp-markdown-example>\n        <wcp-code slot=\"code\">${super.code(code, language, escaped)}</wcp-code>\n        <wcp-preview slot=\"preview\"${previewTagName}>${raw}</wcp-preview>\n      </wcp-markdown-example>\n    `;\n  }\n}\n\nexport function resolveRelativePath(path: string): string {\n  const stripLeadingSlash = (str: string) => str.replace(/^\\//, '');\n  const url = new URL(`/${stripLeadingSlash(path)}`, location.origin);\n  return stripLeadingSlash(url.pathname);\n}\n\n/**\n * Only relative links will be handled. If a markdown file (*.md, *.mdx) is linked, it will be prefixed with the route additionally.\n */\nexport function prefixRelativeUrls(markdown: string, currentPath: string, basePath = ''): string {\n  const currentDir = currentPath.substring(0, currentPath.lastIndexOf('/') + 1);\n  // https://regex101.com/r/mi812s/7\n  return markdown.replace(\n    /((?:\\[[^\\]]*\\]\\()|(?:href|src)=[\"'])(?!(?:[a-z]+:\\/\\/)|\\/)(?:\\.\\/)?([^)]*?)(\\.mdx?)?(?:#(.*?))?(\\)|[\"'])/gi,\n    (_, before, path = '', ext = '', hash = '', after) => {\n      const isMarkdownLink = ext !== '';\n      const hasPath = path !== '';\n      const hasHash = hash !== '';\n      const isHashLink = hasHash && !hasPath;\n      if (isMarkdownLink || isHashLink) {\n        const nextPath = hasPath ? resolveRelativePath(`${currentDir}${path}${ext}`) : currentPath;\n        const link = encodeURIComponent(nextPath);\n        const section = hasHash ? `/${hash}` : '';\n        return `${before}${basePath}${link}${section}${after}`;\n      }\n      // is any assetic relative link\n      const nextPath = resolveRelativePath(`${currentDir}${path}${ext}`);\n      return [before, nextPath, after].join('');\n    },\n  );\n}\n\n/**\n * Maps a given markdown code block language to a prism grammar.\n */\nexport function mapLangToGrammar(lang: string): string {\n  switch (lang) {\n    case 'ts':\n      return 'prism-typescript';\n    case 'js':\n      return 'prism-javascript';\n    case 'html':\n      return 'prism-cshtml';\n    default:\n      return `prism-${lang}`;\n  }\n}\n\n/**\n * Convenience function to render a given markdown string to html.\n */\nexport async function renderMarkdown(\n  markdown: string,\n  addCodePreview = true,\n  previewTagName?: string,\n): Promise<string> {\n  // prepare an individual renderer\n  const renderer = new CustomRenderer(addCodePreview, previewTagName);\n\n  // instruct individual highlighting for language\n  marked.use(\n    markedHighlight({\n      async: true,\n      async highlight(code, lang) {\n        // no language, no highlight\n        if (lang === undefined) return code;\n        // load grammar if not already loaded\n        if (!Prism.languages[lang]) {\n          try {\n            await import(`/grammars/${mapLangToGrammar(lang)}.js`);\n          } catch (e) {\n            return code;\n          }\n        }\n        // highlight code and store it for later use in renderer\n        const highlighted = Prism.highlight(code, Prism.languages[lang], lang);\n        renderer.storeRawCode(code, highlighted);\n        return highlighted;\n      },\n    }),\n  );\n\n  return marked(markdown, { renderer });\n}\n", "export default `:host {\n  ---wcp-readme-dark-color: var(--wcp-readme-dark-color, var(--wcp-color-grey-96));\n  ---wcp-readme-dark-color-accent: var(--wcp-readme-dark-color-accent, #58a6ff);\n  ---wcp-readme-dark-color-muted: var(--wcp-readme-dark-color-muted, var(--wcp-color-grey-80));\n  ---wcp-readme-dark-border-color: var(--wcp-readme-dark-border-color, var(--wcp-color-grey-24));\n  ---wcp-readme-dark-highlight-background: var(--wcp-readme-dark-highlight-background, var(--wcp-color-grey-17));\n  ---wcp-readme-light-color: var(--wcp-readme-light-color, var(--wcp-color-grey-17));\n  ---wcp-readme-light-color-accent: var(--wcp-readme-light-color-accent, #122df5);\n  ---wcp-readme-light-color-muted: var(--wcp-readme-light-color-muted, var(--wcp-color-grey-24));\n  ---wcp-readme-light-border-color: var(--wcp-readme-light-border-color, var(--wcp-color-grey-65));\n  ---wcp-readme-light-highlight-background: var(--wcp-readme-light-highlight-background, var(--wcp-color-blue-91));\n}\n\n@media (prefers-color-scheme: dark) {\n  :host {\n    ---wcp-readme-border-color: var(---wcp-readme-dark-border-color);\n    ---wcp-readme-color: var(---wcp-readme-dark-color);\n    ---wcp-readme-color-accent: var(---wcp-readme-dark-color-accent);\n    ---wcp-readme-color-muted: var(---wcp-readme-dark-color-muted);\n    ---wcp-readme-highlight-background: var(---wcp-readme-dark-highlight-background);\n  }\n}\n:host([color-scheme=dark]):host {\n  ---wcp-readme-border-color: var(---wcp-readme-dark-border-color);\n  ---wcp-readme-color: var(---wcp-readme-dark-color);\n  ---wcp-readme-color-accent: var(---wcp-readme-dark-color-accent);\n  ---wcp-readme-color-muted: var(---wcp-readme-dark-color-muted);\n  ---wcp-readme-highlight-background: var(---wcp-readme-dark-highlight-background);\n}\n\n@media (prefers-color-scheme: light) {\n  :host {\n    ---wcp-readme-border-color: var(---wcp-readme-light-border-color);\n    ---wcp-readme-color: var(---wcp-readme-light-color);\n    ---wcp-readme-color-accent: var(---wcp-readme-light-color-accent);\n    ---wcp-readme-color-muted: var(---wcp-readme-light-color-muted);\n    ---wcp-readme-highlight-background: var(---wcp-readme-light-highlight-background);\n  }\n}\n:host([color-scheme=light]):host {\n  ---wcp-readme-border-color: var(---wcp-readme-light-border-color);\n  ---wcp-readme-color: var(---wcp-readme-light-color);\n  ---wcp-readme-color-accent: var(---wcp-readme-light-color-accent);\n  ---wcp-readme-color-muted: var(---wcp-readme-light-color-muted);\n  ---wcp-readme-highlight-background: var(---wcp-readme-light-highlight-background);\n}\n\n@media (prefers-color-scheme: dark) {\n  .markdown-body {\n    --csstools-color-scheme--dark: initial;\n    color-scheme: dark;\n    --wcp-github-markdown-color-prettylights-syntax-comment: #8b949e;\n    --wcp-github-markdown-color-prettylights-syntax-constant: #79c0ff;\n    --wcp-github-markdown-color-prettylights-syntax-entity: #d2a8ff;\n    --wcp-github-markdown-color-prettylights-syntax-storage-modifier-import: #c9d1d9;\n    --wcp-github-markdown-color-prettylights-syntax-entity-tag: #7ee787;\n    --wcp-github-markdown-color-prettylights-syntax-keyword: #ff7b72;\n    --wcp-github-markdown-color-prettylights-syntax-string: #a5d6ff;\n    --wcp-github-markdown-color-prettylights-syntax-variable: #ffa657;\n    --wcp-github-markdown-color-prettylights-syntax-brackethighlighter-unmatched: #f85149;\n    --wcp-github-markdown-color-prettylights-syntax-invalid-illegal-text: #f0f6fc;\n    --wcp-github-markdown-color-prettylights-syntax-invalid-illegal-bg: #8e1519;\n    --wcp-github-markdown-color-prettylights-syntax-carriage-return-text: #f0f6fc;\n    --wcp-github-markdown-color-prettylights-syntax-carriage-return-bg: #b62324;\n    --wcp-github-markdown-color-prettylights-syntax-string-regexp: #7ee787;\n    --wcp-github-markdown-color-prettylights-syntax-markup-list: #f2cc60;\n    --wcp-github-markdown-color-prettylights-syntax-markup-heading: #1f6feb;\n    --wcp-github-markdown-color-prettylights-syntax-markup-italic: #c9d1d9;\n    --wcp-github-markdown-color-prettylights-syntax-markup-bold: #c9d1d9;\n    --wcp-github-markdown-color-prettylights-syntax-markup-deleted-text: #ffdcd7;\n    --wcp-github-markdown-color-prettylights-syntax-markup-deleted-bg: #67060c;\n    --wcp-github-markdown-color-prettylights-syntax-markup-inserted-text: #aff5b4;\n    --wcp-github-markdown-color-prettylights-syntax-markup-inserted-bg: #033a16;\n    --wcp-github-markdown-color-prettylights-syntax-markup-changed-text: #ffdfb6;\n    --wcp-github-markdown-color-prettylights-syntax-markup-changed-bg: #5a1e02;\n    --wcp-github-markdown-color-prettylights-syntax-markup-ignored-text: #c9d1d9;\n    --wcp-github-markdown-color-prettylights-syntax-markup-ignored-bg: #1158c7;\n    --wcp-github-markdown-color-prettylights-syntax-meta-diff-range: #d2a8ff;\n    --wcp-github-markdown-color-prettylights-syntax-brackethighlighter-angle: #8b949e;\n    --wcp-github-markdown-color-prettylights-syntax-sublimelinter-gutter-mark: #484f58;\n    --wcp-github-markdown-color-prettylights-syntax-constant-other-reference-link: #a5d6ff;\n    --wcp-github-markdown-color-fg-default: #c9d1d9;\n    --wcp-github-markdown-color-fg-muted: #8b949e;\n    --wcp-github-markdown-color-fg-subtle: #6e7681;\n    --wcp-github-markdown-color-canvas-default: #0d1117;\n    --wcp-github-markdown-color-canvas-subtle: #161b22;\n    --wcp-github-markdown-color-border-default: #30363d;\n    --wcp-github-markdown-color-border-muted: #21262d;\n    --wcp-github-markdown-color-neutral-muted: rgba(110, 118, 129, 0.4);\n    --wcp-github-markdown-color-accent-fg: #58a6ff;\n    --wcp-github-markdown-color-accent-emphasis: #1f6feb;\n    --wcp-github-markdown-color-attention-subtle: rgba(187, 128, 9, 0.15);\n    --wcp-github-markdown-color-danger-fg: #f85149;\n  }\n}\n@media (prefers-color-scheme: light) {\n  .markdown-body {\n    --csstools-color-scheme--dark:  ;\n    color-scheme: light;\n    --wcp-github-markdown-color-prettylights-syntax-comment: #6e7781;\n    --wcp-github-markdown-color-prettylights-syntax-constant: #0550ae;\n    --wcp-github-markdown-color-prettylights-syntax-entity: #8250df;\n    --wcp-github-markdown-color-prettylights-syntax-storage-modifier-import: #24292f;\n    --wcp-github-markdown-color-prettylights-syntax-entity-tag: #116329;\n    --wcp-github-markdown-color-prettylights-syntax-keyword: #cf222e;\n    --wcp-github-markdown-color-prettylights-syntax-string: #0a3069;\n    --wcp-github-markdown-color-prettylights-syntax-variable: #953800;\n    --wcp-github-markdown-color-prettylights-syntax-brackethighlighter-unmatched: #82071e;\n    --wcp-github-markdown-color-prettylights-syntax-invalid-illegal-text: #f6f8fa;\n    --wcp-github-markdown-color-prettylights-syntax-invalid-illegal-bg: #82071e;\n    --wcp-github-markdown-color-prettylights-syntax-carriage-return-text: #f6f8fa;\n    --wcp-github-markdown-color-prettylights-syntax-carriage-return-bg: #cf222e;\n    --wcp-github-markdown-color-prettylights-syntax-string-regexp: #116329;\n    --wcp-github-markdown-color-prettylights-syntax-markup-list: #3b2300;\n    --wcp-github-markdown-color-prettylights-syntax-markup-heading: #0550ae;\n    --wcp-github-markdown-color-prettylights-syntax-markup-italic: #24292f;\n    --wcp-github-markdown-color-prettylights-syntax-markup-bold: #24292f;\n    --wcp-github-markdown-color-prettylights-syntax-markup-deleted-text: #82071e;\n    --wcp-github-markdown-color-prettylights-syntax-markup-deleted-bg: #ffebe9;\n    --wcp-github-markdown-color-prettylights-syntax-markup-inserted-text: #116329;\n    --wcp-github-markdown-color-prettylights-syntax-markup-inserted-bg: #dafbe1;\n    --wcp-github-markdown-color-prettylights-syntax-markup-changed-text: #953800;\n    --wcp-github-markdown-color-prettylights-syntax-markup-changed-bg: #ffd8b5;\n    --wcp-github-markdown-color-prettylights-syntax-markup-ignored-text: #eaeef2;\n    --wcp-github-markdown-color-prettylights-syntax-markup-ignored-bg: #0550ae;\n    --wcp-github-markdown-color-prettylights-syntax-meta-diff-range: #8250df;\n    --wcp-github-markdown-color-prettylights-syntax-brackethighlighter-angle: #57606a;\n    --wcp-github-markdown-color-prettylights-syntax-sublimelinter-gutter-mark: #8c959f;\n    --wcp-github-markdown-color-prettylights-syntax-constant-other-reference-link: #0a3069;\n    --wcp-github-markdown-color-fg-default: #24292f;\n    --wcp-github-markdown-color-fg-muted: #57606a;\n    --wcp-github-markdown-color-fg-subtle: #6e7781;\n    --wcp-github-markdown-color-canvas-default: #ffffff;\n    --wcp-github-markdown-color-canvas-subtle: #f6f8fa;\n    --wcp-github-markdown-color-border-default: #d0d7de;\n    --wcp-github-markdown-color-border-muted: hsla(210, 18%, 87%, 1);\n    --wcp-github-markdown-color-neutral-muted: rgba(175, 184, 193, 0.2);\n    --wcp-github-markdown-color-accent-fg: #0969da;\n    --wcp-github-markdown-color-accent-emphasis: #0969da;\n    --wcp-github-markdown-color-attention-subtle: #fff8c5;\n    --wcp-github-markdown-color-danger-fg: #cf222e;\n  }\n}\n.markdown-body .octicon:not(wcp-preview *) {\n  display: inline-block;\n  fill: currentColor;\n  vertical-align: text-bottom;\n}\n\n.markdown-body h1:not(wcp-preview *),\n.markdown-body h2:not(wcp-preview *),\n.markdown-body h3:not(wcp-preview *),\n.markdown-body h4:not(wcp-preview *),\n.markdown-body h5:not(wcp-preview *),\n.markdown-body h6:not(wcp-preview *) {\n  margin-top: 24px;\n  margin-bottom: 16px;\n  font-weight: 600;\n  font-weight: var(--base-text-weight-semibold, 600);\n  line-height: 1.25;\n}\n\n.markdown-body h1:not(wcp-preview *):hover .anchor .octicon-link:before,\n.markdown-body h2:not(wcp-preview *):hover .anchor .octicon-link:before,\n.markdown-body h3:not(wcp-preview *):hover .anchor .octicon-link:before,\n.markdown-body h4:not(wcp-preview *):hover .anchor .octicon-link:before,\n.markdown-body h5:not(wcp-preview *):hover .anchor .octicon-link:before,\n.markdown-body h6:not(wcp-preview *):hover .anchor .octicon-link:before {\n  width: 16px;\n  height: 16px;\n  content: \" \";\n  display: inline-block;\n  background-color: currentColor;\n  -webkit-mask-image: url(\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' version='1.1' aria-hidden='true'><path fill-rule='evenodd' d='M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z'></path></svg>\");\n  mask-image: url(\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' version='1.1' aria-hidden='true'><path fill-rule='evenodd' d='M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z'></path></svg>\");\n}\n\n.markdown-body h1:not(wcp-preview *) .octicon-link,\n.markdown-body h2:not(wcp-preview *) .octicon-link,\n.markdown-body h3:not(wcp-preview *) .octicon-link,\n.markdown-body h4:not(wcp-preview *) .octicon-link,\n.markdown-body h5:not(wcp-preview *) .octicon-link,\n.markdown-body h6:not(wcp-preview *) .octicon-link {\n  color: var(--wcp-github-markdown-color-fg-default);\n  vertical-align: middle;\n  visibility: hidden;\n}\n\n.markdown-body h1:not(wcp-preview *):hover .anchor,\n.markdown-body h2:not(wcp-preview *):hover .anchor,\n.markdown-body h3:not(wcp-preview *):hover .anchor,\n.markdown-body h4:not(wcp-preview *):hover .anchor,\n.markdown-body h5:not(wcp-preview *):hover .anchor,\n.markdown-body h6:not(wcp-preview *):hover .anchor {\n  -webkit-text-decoration: none;\n  text-decoration: none;\n}\n\n.markdown-body h1:not(wcp-preview *):hover .anchor .octicon-link,\n.markdown-body h2:not(wcp-preview *):hover .anchor .octicon-link,\n.markdown-body h3:not(wcp-preview *):hover .anchor .octicon-link,\n.markdown-body h4:not(wcp-preview *):hover .anchor .octicon-link,\n.markdown-body h5:not(wcp-preview *):hover .anchor .octicon-link,\n.markdown-body h6:not(wcp-preview *):hover .anchor .octicon-link {\n  visibility: visible;\n}\n\n.markdown-body h1:not(wcp-preview *) tt,\n.markdown-body h1:not(wcp-preview *) code,\n.markdown-body h2:not(wcp-preview *) tt,\n.markdown-body h2:not(wcp-preview *) code,\n.markdown-body h3:not(wcp-preview *) tt,\n.markdown-body h3:not(wcp-preview *) code,\n.markdown-body h4:not(wcp-preview *) tt,\n.markdown-body h4:not(wcp-preview *) code,\n.markdown-body h5:not(wcp-preview *) tt,\n.markdown-body h5:not(wcp-preview *) code,\n.markdown-body h6:not(wcp-preview *) tt,\n.markdown-body h6:not(wcp-preview *) code {\n  padding: 0 0.2em;\n  font-size: inherit;\n}\n\n.markdown-body details:not(wcp-preview *),\n.markdown-body figcaption:not(wcp-preview *),\n.markdown-body figure:not(wcp-preview *) {\n  display: block;\n}\n\n.markdown-body summary:not(wcp-preview *) {\n  display: list-item;\n}\n\n.markdown-body [hidden]:not(wcp-preview *) {\n  display: none !important;\n}\n\n.markdown-body a:not(wcp-preview *) {\n  background-color: transparent;\n  color: var(--wcp-github-markdown-color-accent-fg);\n  -webkit-text-decoration: none;\n  text-decoration: none;\n}\n\n.markdown-body abbr[title]:not(wcp-preview *) {\n  border-bottom: none;\n  text-decoration: underline;\n  -webkit-text-decoration: underline dotted;\n          text-decoration: underline dotted;\n}\n\n.markdown-body b :not(wcp-preview *),\n.markdown-body strong :not(wcp-preview *) {\n  font-weight: 600;\n  font-weight: var(--base-text-weight-semibold, 600);\n}\n\n.markdown-body dfn:not(wcp-preview *) {\n  font-style: italic;\n}\n\n.markdown-body h1:not(wcp-preview *) {\n  margin: 0.67em 0;\n  font-weight: 600;\n  font-weight: var(--base-text-weight-semibold, 600);\n  padding-bottom: 0.3em;\n  font-size: 2em;\n  border-bottom: 1px solid var(--wcp-github-markdown-color-border-muted);\n}\n\n.markdown-body mark:not(wcp-preview *) {\n  background-color: var(--wcp-github-markdown-color-attention-subtle);\n  color: var(--wcp-github-markdown-color-fg-default);\n}\n\n.markdown-body small:not(wcp-preview *) {\n  font-size: 90%;\n}\n\n.markdown-body sub:not(wcp-preview *),\n.markdown-body sup:not(wcp-preview *) {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\n.markdown-body sub:not(wcp-preview *) {\n  bottom: -0.25em;\n}\n\n.markdown-body sup:not(wcp-preview *) {\n  top: -0.5em;\n}\n\n.markdown-body img:not(wcp-preview *) {\n  border-style: none;\n  max-width: 100%;\n  box-sizing: content-box;\n  background-color: var(--wcp-github-markdown-color-canvas-default);\n}\n\n.markdown-body code:not(wcp-preview *),\n.markdown-body kbd:not(wcp-preview *),\n.markdown-body pre:not(wcp-preview *),\n.markdown-body samp:not(wcp-preview *) {\n  font-family: monospace;\n  font-size: 1em;\n}\n\n.markdown-body figure:not(wcp-preview *) {\n  margin: 1em 40px;\n}\n\n.markdown-body hr:not(wcp-preview *) {\n  box-sizing: content-box;\n  overflow: hidden;\n  background: transparent;\n  border-bottom: 1px solid var(--wcp-github-markdown-color-border-muted);\n  height: 0.25em;\n  padding: 0;\n  margin: 24px 0;\n  background-color: var(--wcp-github-markdown-color-border-default);\n  border: 0;\n}\n\n.markdown-body input:not(wcp-preview *) {\n  font: inherit;\n  margin: 0;\n  overflow: visible;\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit;\n}\n\n.markdown-body [type=button]:not(wcp-preview *),\n.markdown-body [type=reset]:not(wcp-preview *),\n.markdown-body [type=submit]:not(wcp-preview *) {\n  -webkit-appearance: button;\n}\n\n.markdown-body [type=checkbox]:not(wcp-preview *),\n.markdown-body [type=radio]:not(wcp-preview *) {\n  box-sizing: border-box;\n  padding: 0;\n}\n\n.markdown-body [type=number]::-webkit-inner-spin-button:not(wcp-preview *),\n.markdown-body [type=number]::-webkit-outer-spin-button:not(wcp-preview *) {\n  height: auto;\n}\n\n.markdown-body [type=search]::-webkit-search-cancel-button:not(wcp-preview *),\n.markdown-body [type=search]::-webkit-search-decoration:not(wcp-preview *) {\n  -webkit-appearance: none;\n}\n\n.markdown-body :not(wcp-preview *)::-webkit-input-placeholder {\n  color: inherit;\n  opacity: 0.54;\n}\n\n.markdown-body :not(wcp-preview *)::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  font: inherit;\n}\n\n.markdown-body :not(wcp-preview *) ::-moz-placeholder {\n  color: var(--wcp-github-markdown-color-fg-subtle);\n  opacity: 1;\n}\n\n.markdown-body :not(wcp-preview *) ::placeholder {\n  color: var(--wcp-github-markdown-color-fg-subtle);\n  opacity: 1;\n}\n\n.markdown-body a:not(wcp-preview *):hover {\n  -webkit-text-decoration: underline;\n  text-decoration: underline;\n}\n\n.markdown-body hr:not(wcp-preview *)::before {\n  display: table;\n  content: \"\";\n}\n\n.markdown-body hr:not(wcp-preview *)::after {\n  display: table;\n  clear: both;\n  content: \"\";\n}\n\n.markdown-body table:not(wcp-preview *) {\n  display: block;\n  width: -moz-max-content;\n  width: max-content;\n  max-width: 100%;\n  border-spacing: 0;\n  border-collapse: collapse;\n  scrollbar-color: var(--wcp-color-blue-34) transparent;\n  overflow: auto;\n}\n\n.markdown-body table:not(wcp-preview *)::-webkit-scrollbar {\n  width: 0.5rem;\n}\n\n.markdown-body table:not(wcp-preview *)::-webkit-scrollbar-thumb {\n  background-color: var(--wcp-color-blue-34);\n  border-radius: 0.5rem;\n}\n\n.markdown-body table:not(wcp-preview *)::-webkit-scrollbar-track {\n  display: none;\n  background-color: transparent;\n}\n\n.markdown-body td:not(wcp-preview *),\n.markdown-body th:not(wcp-preview *) {\n  padding: 0;\n}\n\n.markdown-body details:not(wcp-preview *) summary {\n  cursor: pointer;\n}\n\n.markdown-body details:not(wcp-preview *):not([open]) > *:not(summary) {\n  display: none !important;\n}\n\n.markdown-body a:focus:not(wcp-preview *),\n.markdown-body [role=button]:focus:not(wcp-preview *),\n.markdown-body input[type=radio]:focus:not(wcp-preview *),\n.markdown-body input[type=checkbox]:focus:not(wcp-preview *) {\n  outline: 2px solid var(--wcp-github-markdown-color-accent-fg);\n  outline-offset: -2px;\n  box-shadow: none;\n}\n\n.markdown-body a:focus:not(:focus-visible):not(wcp-preview *),\n.markdown-body [role=button]:focus:not(:focus-visible):not(wcp-preview *),\n.markdown-body input[type=radio]:focus:not(:focus-visible):not(wcp-preview *),\n.markdown-body input[type=checkbox]:focus:not(:focus-visible):not(wcp-preview *) {\n  outline: solid 1px transparent;\n}\n\n.markdown-body a:focus-visible:not(wcp-preview *),\n.markdown-body [role=button]:focus-visible:not(wcp-preview *),\n.markdown-body input[type=radio]:focus-visible:not(wcp-preview *),\n.markdown-body input[type=checkbox]:focus-visible:not(wcp-preview *) {\n  outline: 2px solid var(--wcp-github-markdown-color-accent-fg);\n  outline-offset: -2px;\n  box-shadow: none;\n}\n\n.markdown-body a:not([class]):focus:not(wcp-preview *),\n.markdown-body a:not([class]):focus-visible:not(wcp-preview *),\n.markdown-body input[type=radio]:focus:not(wcp-preview *),\n.markdown-body input[type=radio]:focus-visible:not(wcp-preview *),\n.markdown-body input[type=checkbox]:focus:not(wcp-preview *),\n.markdown-body input[type=checkbox]:focus-visible:not(wcp-preview *) {\n  outline-offset: 0;\n}\n\n.markdown-body kbd:not(wcp-preview *) {\n  display: inline-block;\n  padding: 3px 5px;\n  font: 11px ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace;\n  line-height: 10px;\n  color: var(--wcp-github-markdown-color-fg-default);\n  vertical-align: middle;\n  background-color: var(--wcp-github-markdown-color-canvas-subtle);\n  border: solid 1px var(--wcp-github-markdown-color-neutral-muted);\n  border-bottom-color: var(--wcp-github-markdown-color-neutral-muted);\n  border-radius: 6px;\n  box-shadow: inset 0 -1px 0 var(--wcp-github-markdown-color-neutral-muted);\n}\n\n.markdown-body h2:not(wcp-preview *) {\n  font-weight: 600;\n  font-weight: var(--base-text-weight-semibold, 600);\n  padding-bottom: 0.3em;\n  font-size: 1.5em;\n  border-bottom: 1px solid var(--wcp-github-markdown-color-border-muted);\n}\n\n.markdown-body h3:not(wcp-preview *) {\n  font-weight: 600;\n  font-weight: var(--base-text-weight-semibold, 600);\n  font-size: 1.25em;\n}\n\n.markdown-body h4:not(wcp-preview *) {\n  font-weight: 600;\n  font-weight: var(--base-text-weight-semibold, 600);\n  font-size: 1em;\n}\n\n.markdown-body h5:not(wcp-preview *) {\n  font-weight: 600;\n  font-weight: var(--base-text-weight-semibold, 600);\n  font-size: 0.875em;\n}\n\n.markdown-body h6:not(wcp-preview *) {\n  font-weight: 600;\n  font-weight: var(--base-text-weight-semibold, 600);\n  font-size: 0.85em;\n  color: var(--wcp-github-markdown-color-fg-muted);\n}\n\n.markdown-body p:not(wcp-preview *) {\n  margin-top: 0;\n  margin-bottom: 10px;\n}\n\n.markdown-body blockquote:not(wcp-preview *) {\n  margin: 0;\n  padding: 0 1em;\n  color: var(--wcp-github-markdown-color-fg-muted);\n  border-left: 0.25em solid var(--wcp-github-markdown-color-border-default);\n}\n\n.markdown-body ul:not(wcp-preview *),\n.markdown-body ol:not(wcp-preview *) {\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 2em;\n}\n\n.markdown-body ol ol:not(wcp-preview *),\n.markdown-body ul ol:not(wcp-preview *) {\n  list-style-type: lower-roman;\n}\n\n.markdown-body ul ul ol:not(wcp-preview *),\n.markdown-body ul ol ol:not(wcp-preview *),\n.markdown-body ol ul ol:not(wcp-preview *),\n.markdown-body ol ol ol:not(wcp-preview *) {\n  list-style-type: lower-alpha;\n}\n\n.markdown-body dd:not(wcp-preview *) {\n  margin-left: 0;\n}\n\n.markdown-body tt:not(wcp-preview *),\n.markdown-body code:not(wcp-preview *),\n.markdown-body samp:not(wcp-preview *) {\n  font-family: ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace;\n  font-size: 12px;\n}\n\n.markdown-body pre:not(wcp-preview *) {\n  margin-top: 0;\n  margin-bottom: 0;\n  font-family: ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace;\n  font-size: 12px;\n  word-wrap: normal;\n}\n\n.markdown-body .octicon:not(wcp-preview *) {\n  display: inline-block;\n  overflow: visible !important;\n  vertical-align: text-bottom;\n  fill: currentColor;\n}\n\n.markdown-body input:not(wcp-preview *)::-webkit-outer-spin-button,\n.markdown-body input:not(wcp-preview *)::-webkit-inner-spin-button {\n  margin: 0;\n  -webkit-appearance: none;\n  appearance: none;\n}\n\n.markdown-body::before {\n  display: table;\n  content: \"\";\n}\n\n.markdown-body::after {\n  display: table;\n  clear: both;\n  content: \"\";\n}\n\n.markdown-body > *:not(wcp-preview *):first-child {\n  margin-top: 0 !important;\n}\n\n.markdown-body > *:not(wcp-preview *):last-child {\n  margin-bottom: 0 !important;\n}\n\n.markdown-body a:not(wcp-preview *):not([href]) {\n  color: inherit;\n  -webkit-text-decoration: none;\n  text-decoration: none;\n}\n\n.markdown-body .absent:not(wcp-preview *) {\n  color: var(--wcp-github-markdown-color-danger-fg);\n}\n\n.markdown-body .anchor:not(wcp-preview *) {\n  float: left;\n  padding-right: 4px;\n  margin-left: -20px;\n  line-height: 1;\n}\n\n.markdown-body .anchor:not(wcp-preview *):focus {\n  outline: none;\n}\n\n.markdown-body p:not(wcp-preview *),\n.markdown-body blockquote:not(wcp-preview *),\n.markdown-body ul:not(wcp-preview *),\n.markdown-body ol:not(wcp-preview *),\n.markdown-body dl:not(wcp-preview *),\n.markdown-body table:not(wcp-preview *),\n.markdown-body pre:not(wcp-preview *),\n.markdown-body details:not(wcp-preview *) {\n  margin-top: 0;\n  margin-bottom: 16px;\n}\n\n.markdown-body blockquote:not(wcp-preview *) > :first-child {\n  margin-top: 0;\n}\n\n.markdown-body blockquote:not(wcp-preview *) > :last-child {\n  margin-bottom: 0;\n}\n\n.markdown-body summary:not(wcp-preview *) h1,\n.markdown-body summary:not(wcp-preview *) h2,\n.markdown-body summary:not(wcp-preview *) h3,\n.markdown-body summary:not(wcp-preview *) h4,\n.markdown-body summary:not(wcp-preview *) h5,\n.markdown-body summary:not(wcp-preview *) h6 {\n  display: inline-block;\n}\n\n.markdown-body summary:not(wcp-preview *) h1 .anchor,\n.markdown-body summary:not(wcp-preview *) h2 .anchor,\n.markdown-body summary:not(wcp-preview *) h3 .anchor,\n.markdown-body summary:not(wcp-preview *) h4 .anchor,\n.markdown-body summary:not(wcp-preview *) h5 .anchor,\n.markdown-body summary:not(wcp-preview *) h6 .anchor {\n  margin-left: -40px;\n}\n\n.markdown-body summary:not(wcp-preview *) h1,\n.markdown-body summary:not(wcp-preview *) h2 {\n  padding-bottom: 0;\n  border-bottom: 0;\n}\n\n.markdown-body ul:not(wcp-preview *).no-list,\n.markdown-body ol:not(wcp-preview *).no-list {\n  padding: 0;\n  list-style-type: none;\n}\n\n.markdown-body ol:not(wcp-preview *)[type=a] {\n  list-style-type: lower-alpha;\n}\n\n.markdown-body ol:not(wcp-preview *)[type=A] {\n  list-style-type: upper-alpha;\n}\n\n.markdown-body ol:not(wcp-preview *)[type=i] {\n  list-style-type: lower-roman;\n}\n\n.markdown-body ol:not(wcp-preview *)[type=I] {\n  list-style-type: upper-roman;\n}\n\n.markdown-body ol:not(wcp-preview *)[type=\"1\"] {\n  list-style-type: decimal;\n}\n\n.markdown-body div > ol:not(wcp-preview *):not([type]) {\n  list-style-type: decimal;\n}\n\n.markdown-body ul ul:not(wcp-preview *),\n.markdown-body ul ol:not(wcp-preview *),\n.markdown-body ol ol:not(wcp-preview *),\n.markdown-body ol ul:not(wcp-preview *) {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.markdown-body li:not(wcp-preview *) > p {\n  margin-top: 16px;\n}\n\n.markdown-body li:not(wcp-preview *) + li {\n  margin-top: 0.25em;\n}\n\n.markdown-body dl:not(wcp-preview *) {\n  padding: 0;\n}\n\n.markdown-body dl:not(wcp-preview *) dt {\n  padding: 0;\n  margin-top: 16px;\n  font-size: 1em;\n  font-style: italic;\n  font-weight: 600;\n  font-weight: var(--base-text-weight-semibold, 600);\n}\n\n.markdown-body dl:not(wcp-preview *) dd {\n  padding: 0 16px;\n  margin-bottom: 16px;\n}\n\n.markdown-body table:not(wcp-preview *) th {\n  font-weight: 600;\n  font-weight: var(--base-text-weight-semibold, 600);\n}\n\n.markdown-body table:not(wcp-preview *) th,\n.markdown-body table:not(wcp-preview *) td {\n  padding: 6px 13px;\n  border: 1px solid var(--wcp-github-markdown-color-border-default);\n}\n\n.markdown-body table:not(wcp-preview *) tr {\n  background-color: var(--wcp-github-markdown-color-canvas-default);\n  border-top: 1px solid var(--wcp-github-markdown-color-border-muted);\n}\n\n.markdown-body table:not(wcp-preview *) tr:nth-child(2n) {\n  background-color: var(--wcp-github-markdown-color-canvas-subtle);\n}\n\n.markdown-body table:not(wcp-preview *) img {\n  background-color: transparent;\n}\n\n.markdown-body img:not(wcp-preview *)[align=right] {\n  padding-left: 20px;\n}\n\n.markdown-body img:not(wcp-preview *)[align=left] {\n  padding-right: 20px;\n}\n\n.markdown-body .emoji:not(wcp-preview *) {\n  max-width: none;\n  vertical-align: text-top;\n  background-color: transparent;\n}\n\n.markdown-body span:not(wcp-preview *).frame {\n  display: block;\n  overflow: hidden;\n}\n\n.markdown-body span:not(wcp-preview *).frame > span {\n  display: block;\n  float: left;\n  width: auto;\n  padding: 7px;\n  margin: 13px 0 0;\n  overflow: hidden;\n  border: 1px solid var(--wcp-github-markdown-color-border-default);\n}\n\n.markdown-body span:not(wcp-preview *).frame > span img {\n  display: block;\n  float: left;\n}\n\n.markdown-body span:not(wcp-preview *).frame span span {\n  display: block;\n  padding: 5px 0 0;\n  clear: both;\n  color: var(--wcp-github-markdown-color-fg-default);\n}\n\n.markdown-body span:not(wcp-preview *).align-center {\n  display: block;\n  overflow: hidden;\n  clear: both;\n}\n\n.markdown-body span:not(wcp-preview *).align-center > span {\n  display: block;\n  margin: 13px auto 0;\n  overflow: hidden;\n  text-align: center;\n}\n\n.markdown-body span:not(wcp-preview *).align-center span img {\n  margin: 0 auto;\n  text-align: center;\n}\n\n.markdown-body span:not(wcp-preview *).align-right {\n  display: block;\n  overflow: hidden;\n  clear: both;\n}\n\n.markdown-body span:not(wcp-preview *).align-right > span {\n  display: block;\n  margin: 13px 0 0;\n  overflow: hidden;\n  text-align: right;\n}\n\n.markdown-body span:not(wcp-preview *).align-right span img {\n  margin: 0;\n  text-align: right;\n}\n\n.markdown-body span:not(wcp-preview *).float-left {\n  display: block;\n  float: left;\n  margin-right: 13px;\n  overflow: hidden;\n}\n\n.markdown-body span:not(wcp-preview *).float-left span {\n  margin: 13px 0 0;\n}\n\n.markdown-body span:not(wcp-preview *).float-right {\n  display: block;\n  float: right;\n  margin-left: 13px;\n  overflow: hidden;\n}\n\n.markdown-body span:not(wcp-preview *).float-right > span {\n  display: block;\n  margin: 13px auto 0;\n  overflow: hidden;\n  text-align: right;\n}\n\n.markdown-body code:not(wcp-preview *),\n.markdown-body tt:not(wcp-preview *) {\n  padding: 0.2em 0.4em;\n  margin: 0;\n  font-size: 85%;\n  white-space: break-spaces;\n  background-color: var(--wcp-github-markdown-color-neutral-muted);\n  border-radius: 6px;\n}\n\n.markdown-body code br:not(wcp-preview *),\n.markdown-body tt br:not(wcp-preview *) {\n  display: none;\n}\n\n.markdown-body del:not(wcp-preview *) code {\n  text-decoration: inherit;\n}\n\n.markdown-body samp:not(wcp-preview *) {\n  font-size: 85%;\n}\n\n.markdown-body pre:not(wcp-preview *) code {\n  font-size: 100%;\n}\n\n.markdown-body pre:not(wcp-preview *) > code {\n  padding: 0;\n  margin: 0;\n  word-break: normal;\n  white-space: pre;\n  background: transparent;\n  border: 0;\n}\n\n.markdown-body .highlight:not(wcp-preview *) {\n  margin-bottom: 16px;\n}\n\n.markdown-body .highlight:not(wcp-preview *) pre {\n  margin-bottom: 0;\n  word-break: normal;\n}\n\n.markdown-body .highlight pre:not(wcp-preview *),\n.markdown-body pre:not(wcp-preview *) {\n  padding: 16px;\n  font-size: 85%;\n  line-height: 1.45;\n  background-color: var(--wcp-github-markdown-color-canvas-subtle);\n  border-radius: 6px;\n  scrollbar-color: var(--wcp-color-blue-34) transparent;\n}\n\n.markdown-body .highlight pre:not(wcp-preview *)::-webkit-scrollbar,\n.markdown-body pre:not(wcp-preview *)::-webkit-scrollbar {\n  width: 0.5rem;\n}\n\n.markdown-body .highlight pre:not(wcp-preview *)::-webkit-scrollbar-thumb,\n.markdown-body pre:not(wcp-preview *)::-webkit-scrollbar-thumb {\n  background-color: var(--wcp-color-blue-34);\n  border-radius: 0.5rem;\n}\n\n.markdown-body .highlight pre:not(wcp-preview *)::-webkit-scrollbar-track,\n.markdown-body pre:not(wcp-preview *)::-webkit-scrollbar-track {\n  display: none;\n  background-color: transparent;\n}\n\n.markdown-body pre code:not(wcp-preview *),\n.markdown-body pre tt:not(wcp-preview *) {\n  display: inline;\n  max-width: auto;\n  padding: 0;\n  margin: 0;\n  overflow: visible;\n  line-height: inherit;\n  word-wrap: normal;\n  background-color: transparent;\n  border: 0;\n}\n\n.markdown-body .csv-data:not(wcp-preview *) td,\n.markdown-body .csv-data:not(wcp-preview *) th {\n  padding: 5px;\n  overflow: hidden;\n  font-size: 12px;\n  line-height: 1;\n  text-align: left;\n  white-space: nowrap;\n}\n\n.markdown-body .csv-data:not(wcp-preview *) .blob-num {\n  padding: 10px 8px 9px;\n  text-align: right;\n  background: var(--wcp-github-markdown-color-canvas-default);\n  border: 0;\n}\n\n.markdown-body .csv-data:not(wcp-preview *) tr {\n  border-top: 0;\n}\n\n.markdown-body .csv-data:not(wcp-preview *) th {\n  font-weight: 600;\n  font-weight: var(--base-text-weight-semibold, 600);\n  background: var(--wcp-github-markdown-color-canvas-subtle);\n  border-top: 0;\n}\n\n.markdown-body [data-footnote-ref]:not(wcp-preview *)::before {\n  content: \"[\";\n}\n\n.markdown-body [data-footnote-ref]:not(wcp-preview *)::after {\n  content: \"]\";\n}\n\n.markdown-body .footnotes:not(wcp-preview *) {\n  font-size: 12px;\n  color: var(--wcp-github-markdown-color-fg-muted);\n  border-top: 1px solid var(--wcp-github-markdown-color-border-default);\n}\n\n.markdown-body .footnotes:not(wcp-preview *) ol {\n  padding-left: 16px;\n}\n\n.markdown-body .footnotes:not(wcp-preview *) ol ul {\n  display: inline-block;\n  padding-left: 16px;\n  margin-top: 16px;\n}\n\n.markdown-body .footnotes:not(wcp-preview *) li {\n  position: relative;\n}\n\n.markdown-body .footnotes:not(wcp-preview *) li:target {\n  color: var(--wcp-github-markdown-color-fg-default);\n}\n\n.markdown-body .footnotes:not(wcp-preview *) li:target::before {\n  position: absolute;\n  top: -8px;\n  right: -8px;\n  bottom: -8px;\n  left: -24px;\n  pointer-events: none;\n  content: \"\";\n  border: 2px solid var(--wcp-github-markdown-color-accent-emphasis);\n  border-radius: 6px;\n}\n\n.markdown-body .footnotes:not(wcp-preview *) .data-footnote-backref g-emoji {\n  font-family: monospace;\n}\n\n.markdown-body .pl-c:not(wcp-preview *) {\n  color: var(--wcp-github-markdown-color-prettylights-syntax-comment);\n}\n\n.markdown-body .pl-c1:not(wcp-preview *),\n.markdown-body .pl-s .pl-v:not(wcp-preview *) {\n  color: var(--wcp-github-markdown-color-prettylights-syntax-constant);\n}\n\n.markdown-body .pl-e:not(wcp-preview *),\n.markdown-body .pl-en:not(wcp-preview *) {\n  color: var(--wcp-github-markdown-color-prettylights-syntax-entity);\n}\n\n.markdown-body .pl-smi:not(wcp-preview *),\n.markdown-body .pl-s .pl-s1:not(wcp-preview *) {\n  color: var(--wcp-github-markdown-color-prettylights-syntax-storage-modifier-import);\n}\n\n.markdown-body .pl-ent:not(wcp-preview *) {\n  color: var(--wcp-github-markdown-color-prettylights-syntax-entity-tag);\n}\n\n.markdown-body .pl-k:not(wcp-preview *) {\n  color: var(--wcp-github-markdown-color-prettylights-syntax-keyword);\n}\n\n.markdown-body .pl-s:not(wcp-preview *),\n.markdown-body .pl-pds:not(wcp-preview *),\n.markdown-body .pl-s .pl-pse .pl-s1:not(wcp-preview *),\n.markdown-body .pl-sr:not(wcp-preview *),\n.markdown-body .pl-sr .pl-cce:not(wcp-preview *),\n.markdown-body .pl-sr .pl-sre:not(wcp-preview *),\n.markdown-body .pl-sr .pl-sra:not(wcp-preview *) {\n  color: var(--wcp-github-markdown-color-prettylights-syntax-string);\n}\n\n.markdown-body .pl-v:not(wcp-preview *),\n.markdown-body .pl-smw:not(wcp-preview *) {\n  color: var(--wcp-github-markdown-color-prettylights-syntax-variable);\n}\n\n.markdown-body .pl-bu:not(wcp-preview *) {\n  color: var(--wcp-github-markdown-color-prettylights-syntax-brackethighlighter-unmatched);\n}\n\n.markdown-body .pl-ii:not(wcp-preview *) {\n  color: var(--wcp-github-markdown-color-prettylights-syntax-invalid-illegal-text);\n  background-color: var(--wcp-github-markdown-color-prettylights-syntax-invalid-illegal-bg);\n}\n\n.markdown-body .pl-c2:not(wcp-preview *) {\n  color: var(--wcp-github-markdown-color-prettylights-syntax-carriage-return-text);\n  background-color: var(--wcp-github-markdown-color-prettylights-syntax-carriage-return-bg);\n}\n\n.markdown-body .pl-sr:not(wcp-preview *) .pl-cce {\n  font-weight: bold;\n  color: var(--wcp-github-markdown-color-prettylights-syntax-string-regexp);\n}\n\n.markdown-body .pl-ml:not(wcp-preview *) {\n  color: var(--wcp-github-markdown-color-prettylights-syntax-markup-list);\n}\n\n.markdown-body .pl-mh:not(wcp-preview *),\n.markdown-body .pl-mh .pl-en:not(wcp-preview *),\n.markdown-body .pl-ms:not(wcp-preview *) {\n  font-weight: bold;\n  color: var(--wcp-github-markdown-color-prettylights-syntax-markup-heading);\n}\n\n.markdown-body .pl-mi:not(wcp-preview *) {\n  font-style: italic;\n  color: var(--wcp-github-markdown-color-prettylights-syntax-markup-italic);\n}\n\n.markdown-body .pl-mb:not(wcp-preview *) {\n  font-weight: bold;\n  color: var(--wcp-github-markdown-color-prettylights-syntax-markup-bold);\n}\n\n.markdown-body .pl-md:not(wcp-preview *) {\n  color: var(--wcp-github-markdown-color-prettylights-syntax-markup-deleted-text);\n  background-color: var(--wcp-github-markdown-color-prettylights-syntax-markup-deleted-bg);\n}\n\n.markdown-body .pl-mi1:not(wcp-preview *) {\n  color: var(--wcp-github-markdown-color-prettylights-syntax-markup-inserted-text);\n  background-color: var(--wcp-github-markdown-color-prettylights-syntax-markup-inserted-bg);\n}\n\n.markdown-body .pl-mc:not(wcp-preview *) {\n  color: var(--wcp-github-markdown-color-prettylights-syntax-markup-changed-text);\n  background-color: var(--wcp-github-markdown-color-prettylights-syntax-markup-changed-bg);\n}\n\n.markdown-body .pl-mi2:not(wcp-preview *) {\n  color: var(--wcp-github-markdown-color-prettylights-syntax-markup-ignored-text);\n  background-color: var(--wcp-github-markdown-color-prettylights-syntax-markup-ignored-bg);\n}\n\n.markdown-body .pl-mdr:not(wcp-preview *) {\n  font-weight: bold;\n  color: var(--wcp-github-markdown-color-prettylights-syntax-meta-diff-range);\n}\n\n.markdown-body .pl-ba:not(wcp-preview *) {\n  color: var(--wcp-github-markdown-color-prettylights-syntax-brackethighlighter-angle);\n}\n\n.markdown-body .pl-sg:not(wcp-preview *) {\n  color: var(--wcp-github-markdown-color-prettylights-syntax-sublimelinter-gutter-mark);\n}\n\n.markdown-body .pl-corl:not(wcp-preview *) {\n  -webkit-text-decoration: underline;\n  text-decoration: underline;\n  color: var(--wcp-github-markdown-color-prettylights-syntax-constant-other-reference-link);\n}\n\n.markdown-body g-emoji:not(wcp-preview *) {\n  display: inline-block;\n  min-width: 1ch;\n  font-family: \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n  font-size: 1em;\n  font-style: normal !important;\n  font-weight: 400;\n  font-weight: var(--base-text-weight-normal, 400);\n  line-height: 1;\n  vertical-align: -0.075em;\n}\n\n.markdown-body g-emoji:not(wcp-preview *) img {\n  width: 1em;\n  height: 1em;\n}\n\n.markdown-body .task-list-item:not(wcp-preview *) {\n  list-style-type: none;\n}\n\n.markdown-body .task-list-item:not(wcp-preview *) label {\n  font-weight: 400;\n  font-weight: var(--base-text-weight-normal, 400);\n}\n\n.markdown-body .task-list-item:not(wcp-preview *).enabled label {\n  cursor: pointer;\n}\n\n.markdown-body .task-list-item:not(wcp-preview *) + .task-list-item {\n  margin-top: 4px;\n}\n\n.markdown-body .task-list-item:not(wcp-preview *) .handle {\n  display: none;\n}\n\n.markdown-body .task-list-item-checkbox:not(wcp-preview *) {\n  margin: 0 0.2em 0.25em -1.4em;\n  vertical-align: middle;\n}\n\n.markdown-body .contains-task-list:not(wcp-preview *) {\n  position: relative;\n}\n\n[dir=\"rtl\"] .markdown-body .contains-task-list:not(wcp-preview *) .task-list-item-checkbox {\n  margin: 0 -1.6em 0.25em 0.2em;\n}\n\n.markdown-body .contains-task-list:not(wcp-preview *):hover .task-list-item-convert-container, .markdown-body .contains-task-list:not(wcp-preview *):focus-within .task-list-item-convert-container {\n  display: block;\n  width: auto;\n  height: 24px;\n  overflow: visible;\n  clip: auto;\n}\n\n.markdown-body :not(wcp-preview *)::-webkit-calendar-picker-indicator {\n  filter: invert(50%);\n}\n\n.markdown-body {\n  color: var(---wcp-readme-color);\n}\n.markdown-body wcp-readme-example:not(wcp-preview *) pre {\n  background: 0;\n  margin: 0;\n  padding: 0;\n}\n.markdown-body table:not(wcp-preview *) tr {\n  background-color: transparent;\n}\n.markdown-body img:not(wcp-preview *) {\n  background: none;\n}\n.markdown-body h1:not(wcp-preview *), .markdown-body h2:not(wcp-preview *), .markdown-body h3:not(wcp-preview *), .markdown-body h4:not(wcp-preview *), .markdown-body h5:not(wcp-preview *), .markdown-body h6:not(wcp-preview *), .markdown-body p:not(wcp-preview *), .markdown-body ul:not(wcp-preview *), .markdown-body ol:not(wcp-preview *), .markdown-body dl:not(wcp-preview *) {\n  max-width: var(--wcp-layout-flowing-width);\n}\n.markdown-body table:not(wcp-preview *), .markdown-body pre:not(wcp-preview *), .markdown-body blockquote:not(wcp-preview *) {\n  max-width: min(100%, var(--wcp-layout-fixed-width));\n}\n.markdown-body .target:not(wcp-preview *) {\n  -webkit-text-decoration: underline;\n  text-decoration: underline;\n}\n.markdown-body a:not(wcp-preview *) {\n  color: var(---wcp-readme-color-accent);\n}\n.markdown-body blockquote:not(wcp-preview *) {\n  border-left-color: var(---wcp-readme-border-color);\n  color: var(---wcp-readme-color-muted);\n}\n.markdown-body table td:not(wcp-preview *), .markdown-body table th:not(wcp-preview *), .markdown-body table tr:not(wcp-preview *),\n.markdown-body h1:not(wcp-preview *), .markdown-body h2:not(wcp-preview *), .markdown-body h3:not(wcp-preview *), .markdown-body h4:not(wcp-preview *), .markdown-body h5:not(wcp-preview *), .markdown-body h6:not(wcp-preview *) {\n  border-color: var(---wcp-readme-border-color);\n}\n.markdown-body > pre,\n.markdown-body table:not(wcp-preview *) tr:nth-child(2n) {\n  background-color: var(---wcp-readme-highlight-background);\n}\n.markdown-body wcp-code:not(wcp-preview *) pre {\n  background-color: var(---wcp-readme-highlight-background);\n  border-radius: var(--wcp-border-radius);\n  width: -moz-fit-content;\n  width: fit-content;\n}\n/*# sourceMappingURL=data:application/json;base64, */`;\n", "import { html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement } from 'lit/decorators.js';\n\nimport styles from './readme-frame.component.scss';\n\n/**\n * @slot - The readme frame is usually filled with a readme element.\n *\n * @cssprop --wcp-readme-frame-spacing - Inner padding of the preview frame\n */\n@customElement('wcp-readme-frame')\nexport class ReadmeFrame extends LitElement {\n  static override readonly styles = unsafeCSS(styles);\n\n  protected override render(): TemplateResult {\n    return html`<slot></slot>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-readme-frame': ReadmeFrame;\n  }\n}\n", "export default `:host {\n  ---wcp-readme-frame-spacing: var(--wcp-readme-frame-spacing, calc(var(--wcp-base-size, 10px) * 1) calc(var(--wcp-base-size, 10px) * 2));\n}\n\n:host {\n  display: block;\n  padding: var(---wcp-readme-frame-spacing);\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2NsaWVudC9jbGllbnQvc3JjL2NvbXBvbmVudHMvZmVhdHVyZXMvcmVhZG1lLWZyYW1lL3JlYWRtZS1mcmFtZS5jb21wb25lbnQuc2NzcyIsIjpob3N0JTIwJTdCJTBBJTIwJTIwLS0td2NwLXJlYWRtZS1mcmFtZS1zcGFjaW5nOiUyMHZhcigtLXdjcC1yZWFkbWUtZnJhbWUtc3BhY2luZywlMjBjYWxjKHZhcigtLXdjcC1iYXNlLXNpemUsJTIwMTBweCklMjAqJTIwMSklMjBjYWxjKHZhcigtLXdjcC1iYXNlLXNpemUsJTIwMTBweCklMjAqJTIwMikpOyUwQSU3RCUwQSUwQTpob3N0JTIwJTdCJTBBJTIwJTIwZGlzcGxheTolMjBibG9jazslMEElMjAlMjBwYWRkaW5nOiUyMHZhcigtLS13Y3AtcmVhZG1lLWZyYW1lLXNwYWNpbmcpOyUwQSU3RCUwQS8qJTIzJTIwc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWU2IyOTBJam9pTDJodmJXVXZjblZ1Ym1WeUwzZHZjbXN2WTJ4cFpXNTBMMk5zYVdWdWRDOXpjbU12WTI5dGNHOXVaVzUwY3k5bVpXRjBkWEpsY3k5eVpXRmtiV1V0Wm5KaGJXVWlMQ0p6YjNWeVkyVnpJanBiSW5KbFlXUnRaUzFtY21GdFpTNWpiMjF3YjI1bGJuUXVjMk56Y3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGSFFUdEZRVU5GT3pzN1FVRkhSanRGUVVORk8wVkJRMEVpTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKQWRYTmxJQ2RBTDNOMGVXeGxjeTkxZEdsc2N5Y2dZWE1nZFhScGJITTdYRzVjYmk4dklIQnlaWFIwYVdWeUxXbG5ibTl5WlZ4dU9taHZjM1FnZTF4dUlDQXRMUzEzWTNBdGNtVmhaRzFsTFdaeVlXMWxMWE53WVdOcGJtYzZJSFpoY2lndExYZGpjQzF5WldGa2JXVXRabkpoYldVdGMzQmhZMmx1Wnl3Z0kzdDFkR2xzY3k1emFYcGxLREVwSUhWMGFXeHpMbk5wZW1Vb01pbDlLVHRjYm4xY2JseHVPbWh2YzNRZ2UxeHVJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnY0dGa1pHbHVaem9nZG1GeUtDMHRMWGRqY0MxeVpXRmtiV1V0Wm5KaGJXVXRjM0JoWTJsdVp5azdYRzU5WEc0aVhYMD0lMjAqIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBO0VBQ0UsdUlBQUE7QUNGRjs7QURLQTtFQUNFLGNBQUE7RUFDQSx5Q0FBQTtBQ0ZGIiwiZmlsZSI6Ijpob3N0IHtcbiAgLS0td2NwLXJlYWRtZS1mcmFtZS1zcGFjaW5nOiB2YXIoLS13Y3AtcmVhZG1lLWZyYW1lLXNwYWNpbmcsIGNhbGModmFyKC0td2NwLWJhc2Utc2l6ZSwgMTBweCkgKiAxKSBjYWxjKHZhcigtLXdjcC1iYXNlLXNpemUsIDEwcHgpICogMikpO1xufVxuXG46aG9zdCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nOiB2YXIoLS0td2NwLXJlYWRtZS1mcmFtZS1zcGFjaW5nKTtcbn1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZTYjI5MElqb2lMMmh2YldVdmNuVnVibVZ5TDNkdmNtc3ZZMnhwWlc1MEwyTnNhV1Z1ZEM5emNtTXZZMjl0Y0c5dVpXNTBjeTltWldGMGRYSmxjeTl5WldGa2JXVXRabkpoYldVaUxDSnpiM1Z5WTJWeklqcGJJbkpsWVdSdFpTMW1jbUZ0WlM1amIyMXdiMjVsYm5RdWMyTnpjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZIUVR0RlFVTkZPenM3UVVGSFJqdEZRVU5GTzBWQlEwRWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpBZFhObElDZEFMM04wZVd4bGN5OTFkR2xzY3ljZ1lYTWdkWFJwYkhNN1hHNWNiaTh2SUhCeVpYUjBhV1Z5TFdsbmJtOXlaVnh1T21odmMzUWdlMXh1SUNBdExTMTNZM0F0Y21WaFpHMWxMV1p5WVcxbExYTndZV05wYm1jNklIWmhjaWd0TFhkamNDMXlaV0ZrYldVdFpuSmhiV1V0YzNCaFkybHVaeXdnSTN0MWRHbHNjeTV6YVhwbEtERXBJSFYwYVd4ekxuTnBlbVVvTWlsOUtUdGNibjFjYmx4dU9taHZjM1FnZTF4dUlDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdjR0ZrWkdsdVp6b2dkbUZ5S0MwdExYZGpjQzF5WldGa2JXVXRabkpoYldVdGMzQmhZMmx1WnlrN1hHNTlYRzRpWFgwPSAqIiwic291cmNlc0NvbnRlbnQiOlsiQHVzZSAnQC9zdHlsZXMvdXRpbHMnIGFzIHV0aWxzO1xuXG4vLyBwcmV0dGllci1pZ25vcmVcbjpob3N0IHtcbiAgLS0td2NwLXJlYWRtZS1mcmFtZS1zcGFjaW5nOiB2YXIoLS13Y3AtcmVhZG1lLWZyYW1lLXNwYWNpbmcsICN7dXRpbHMuc2l6ZSgxKSB1dGlscy5zaXplKDIpfSk7XG59XG5cbjpob3N0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IHZhcigtLS13Y3AtcmVhZG1lLWZyYW1lLXNwYWNpbmcpO1xufVxuIiwiOmhvc3Qge1xuICAtLS13Y3AtcmVhZG1lLWZyYW1lLXNwYWNpbmc6IHZhcigtLXdjcC1yZWFkbWUtZnJhbWUtc3BhY2luZywgY2FsYyh2YXIoLS13Y3AtYmFzZS1zaXplLCAxMHB4KSAqIDEpIGNhbGModmFyKC0td2NwLWJhc2Utc2l6ZSwgMTBweCkgKiAyKSk7XG59XG5cbjpob3N0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IHZhcigtLS13Y3AtcmVhZG1lLWZyYW1lLXNwYWNpbmcpO1xufVxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVlNiMjkwSWpvaUwyaHZiV1V2Y25WdWJtVnlMM2R2Y21zdlkyeHBaVzUwTDJOc2FXVnVkQzl6Y21NdlkyOXRjRzl1Wlc1MGN5OW1aV0YwZFhKbGN5OXlaV0ZrYldVdFpuSmhiV1VpTENKemIzVnlZMlZ6SWpwYkluSmxZV1J0WlMxbWNtRnRaUzVqYjIxd2IyNWxiblF1YzJOemN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkhRVHRGUVVORk96czdRVUZIUmp0RlFVTkZPMFZCUTBFaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SkFkWE5sSUNkQUwzTjBlV3hsY3k5MWRHbHNjeWNnWVhNZ2RYUnBiSE03WEc1Y2JpOHZJSEJ5WlhSMGFXVnlMV2xuYm05eVpWeHVPbWh2YzNRZ2UxeHVJQ0F0TFMxM1kzQXRjbVZoWkcxbExXWnlZVzFsTFhOd1lXTnBibWM2SUhaaGNpZ3RMWGRqY0MxeVpXRmtiV1V0Wm5KaGJXVXRjM0JoWTJsdVp5d2dJM3QxZEdsc2N5NXphWHBsS0RFcElIVjBhV3h6TG5OcGVtVW9NaWw5S1R0Y2JuMWNibHh1T21odmMzUWdlMXh1SUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ2NHRmtaR2x1WnpvZ2RtRnlLQzB0TFhkamNDMXlaV0ZrYldVdFpuSmhiV1V0YzNCaFkybHVaeWs3WEc1OVhHNGlYWDA9ICovIl19 */`;\n", "import { html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement, eventOptions, property, queryAssignedElements, state } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { map } from 'lit/directives/map.js';\nimport { when } from 'lit/directives/when.js';\n\nimport { ColorSchemable } from '@/mixins/color-schemable.mixin.js';\nimport { log } from '@/utils/log.utils.js';\nimport { isStagePlugin, type StagePlugin } from '@/utils/plugin.utils.js';\n\nimport styles from './stage.component.scss';\n\n/**\n * @slot - The preview frame can be filled with any number of plugins. The plugins will be rendered as tabs.\n *\n * @cssprop --wcp-stage-dark-background - Background color of the preview frame in dark mode\n * @cssprop --wcp-stage-dark-border-color - Border color of the example section in dark mode\n * @cssprop --wcp-stage-dark-color - Text color of the preview frame in dark mode\n *\n * @cssprop --wcp-stage-light-background - Background color of the preview frame in light mode\n * @cssprop --wcp-stage-light-border-color - Border color of the example section in light mode\n * @cssprop --wcp-stage-light-color - Text color of the preview frame in light mode\n *\n * @cssprop --wcp-stage-border-radius - Border radius of the preview frame\n * @cssprop --wcp-stage-border-width - Border width of the preview frame\n * @cssprop --wcp-stage-distance - Outer margin of the preview frame\n * @cssprop --wcp-stage-spacing - Inner padding of the preview frame\n */\n@customElement('wcp-stage')\nexport class Stage extends ColorSchemable(LitElement) {\n  static override readonly styles = unsafeCSS(styles);\n\n  @queryAssignedElements()\n  private readonly assignedPlugins!: HTMLElement[];\n\n  @state()\n  private _plugins: StagePlugin[] = [];\n\n  @state()\n  private _tabs: HTMLElementTagNameMap['wcp-tabs']['tabs'] = {};\n\n  @property({ type: String, reflect: true, attribute: 'active-plugin' })\n  private readonly activePlugin?: string;\n\n  emitActivePluginChange(activePlugin?: string) {\n    const event = new CustomEvent('wcp-stage:active-plugin-change', {\n      detail: activePlugin,\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n    });\n    this.dispatchEvent(event);\n  }\n\n  @eventOptions({ passive: true })\n  protected handleSlotChange() {\n    const plugins = this.assignedPlugins.filter(isStagePlugin);\n    log.info(`Found ${plugins.length} stage plugins.`);\n\n    // once the plugins are slotted into their respective targets, the slot\n    // change listener may be called again with an empty result set\n    if (plugins.length > 0) {\n      this._plugins = plugins;\n      this._plugins.forEach((tab) => tab.setAttribute('slot', tab.name));\n\n      this.preparePluginTabs();\n      this.alignActivePlugin();\n    }\n  }\n\n  @eventOptions({ passive: true })\n  protected handleAvailabilityChange() {\n    // this event has been triggered by a plugin changing its availability\n    // state, therefore we need to re-evaluate the tabs\n    this.preparePluginTabs();\n    this.alignActivePlugin();\n  }\n\n  @eventOptions({ passive: true })\n  protected handleActiveTabChange(event: CustomEvent<string>) {\n    const { currentTarget, target, detail: activePlugin } = event;\n\n    // re-emit as our own event\n    if (currentTarget === target) {\n      this.emitActivePluginChange(activePlugin);\n    }\n  }\n\n  protected preparePluginTabs() {\n    this._tabs = this._plugins.reduce(\n      (tabs, { available, label, name }) => ({ ...tabs, [name]: { label, disabled: !available } }),\n      {},\n    );\n  }\n\n  protected alignActivePlugin() {\n    let alignedActivePlugin = this.activePlugin;\n\n    // either the active tab is not set...\n    if (this.activePlugin === undefined && this._plugins.length > 0) {\n      // ... then we try to set the first available...\n      alignedActivePlugin = this._plugins.filter(({ available }) => available)?.[0]?.name;\n    }\n    // ... or the active tab is not available anymore...\n    else if (!this._plugins.find(({ name }) => name === this.activePlugin)?.available) {\n      // ... then we need to set the first available tab\n      alignedActivePlugin = this._plugins.find(({ available }) => available)?.name;\n    }\n\n    // if there are changes, let them know! \uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08\n    if (alignedActivePlugin !== this.activePlugin) {\n      this.emitActivePluginChange(alignedActivePlugin);\n    }\n  }\n\n  protected override render(): TemplateResult {\n    return html`\n      ${when(\n        this._plugins.length > 0,\n        () => html`\n          <wcp-tabs\n            .tabs=\"${this._tabs}\"\n            active-tab=\"${ifDefined(this.activePlugin)}\"\n            @wcp-tabs:active-tab-change=\"${this.handleActiveTabChange}\"\n            @wcp-stage-plugin:availability-change=\"${this.handleAvailabilityChange}\"\n          >\n            ${map(this._plugins, ({ name }) => html`<slot name=\"${name}\" slot=\"${name}\"></slot>`)}\n          </wcp-tabs>\n        `,\n      )}\n      <slot @slotchange=\"${this.handleSlotChange}\"></slot>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementEventMap {\n    'wcp-stage:active-plugin-change': CustomEvent<string>;\n  }\n  interface HTMLElementTagNameMap {\n    'wcp-stage': Stage;\n  }\n}\n", "import { getConfig } from './config.utils.js';\n\nconst LOG_PREFIX = '[wcp]';\n\nexport const log = {\n  info(...args: unknown[]) {\n    if (['error', 'warn', 'info'].includes(getConfig()?.logging?.severity ?? 'info')) {\n      console.log(LOG_PREFIX, ...args);\n    }\n  },\n  warn(...args: unknown[]) {\n    if (['error', 'warn'].includes(getConfig()?.logging?.severity ?? 'info')) {\n      console.warn(LOG_PREFIX, ...args);\n    }\n  },\n  error(...args: unknown[]) {\n    if (['error'].includes(getConfig()?.logging?.severity ?? 'info')) {\n      console.error(LOG_PREFIX, ...args);\n    }\n  },\n};\n", "// Preview Frame Plugins may emit a plugin data change event.\ndeclare global {\n  interface HTMLElementEventMap {\n    'wcp-stage-plugin:data-change': CustomEvent<string>;\n    'wcp-preview-plugin:data-change': CustomEvent<string>;\n  }\n}\n\n/**\n * Each plugin must implement this interface.\n * Additionally, the plugin may emits an event, notifying about\n * availability changes. This custom event should be named\n * `wcp-plugin:availability-change` and should carry a\n * boolean flag about its availability in the `detail` property.\n */\nexport type Plugin = HTMLElement & {\n  readonly name: string;\n  readonly label: string;\n  readonly available: boolean;\n};\n\n/**\n * Type to be used with stage plugins.\n */\nexport type StagePlugin = Plugin & {\n  readonly data?: string;\n  readonly previewTagName: string;\n};\n\n/**\n * Type to be used with preview plugins.\n */\nexport type PreviewPlugin = Plugin & {\n  readonly container?: HTMLElement;\n};\n\n/**\n * Type to be used with topbar plugins.\n */\nexport type TopbarPlugin = Plugin;\n\n/**\n * Type guard for generic plugins.\n */\nexport function isPlugin(element: HTMLElement): element is Plugin {\n  return 'name' in element && 'label' in element && 'available' in element;\n}\n\n/**\n * Type guard for stage plugins.\n */\nexport function isStagePlugin(element: HTMLElement): element is StagePlugin {\n  return isPlugin(element) && 'previewTagName' in element;\n}\n\n/**\n * Type guard for preview plugins.\n * TODO: add container type guard\n */\nexport function isPreviewPlugin(element: HTMLElement): element is PreviewPlugin {\n  return isPlugin(element) && 'previewTagName' in element && 'container' in element;\n}\n", "export default `:host {\n  ---wcp-stage-dark-background: var(--wcp-stage-dark-background, var(--wcp-color-blue-13));\n  ---wcp-stage-dark-border-color: var(--wcp-stage-border-color, var(--wcp-color-grey-24));\n  ---wcp-stage-dark-color: var(--wcp-stage-dark-color, var(--wcp-color-grey-96));\n  ---wcp-stage-light-background: var(--wcp-stage-light-background, var(--wcp-color-grey-96));\n  ---wcp-stage-light-border-color: var(--wcp-stage-border-color, var(--wcp-color-grey-80));\n  ---wcp-stage-light-color: var(--wcp-stage-light-color, var(--wcp-color-grey-17));\n  ---wcp-stage-border-radius: var(--wcp-stage-border-radius, var(--wcp-border-radius));\n  ---wcp-stage-border-width: var(--wcp-stage-border-width, 1px);\n  ---wcp-stage-distance: var(--wcp-stage-distance, 0 calc(var(--wcp-base-size, 10px) * 1));\n  ---wcp-stage-spacing: var(--wcp-stage-spacing, 0 calc(var(--wcp-base-size, 10px) * 1) calc(var(--wcp-base-size, 10px) * 1));\n}\n@media (prefers-color-scheme: dark) {\n  :host {\n    ---wcp-stage-background: var(---wcp-stage-dark-background);\n    ---wcp-stage-border-color: var(---wcp-stage-dark-border-color);\n    ---wcp-stage-color: var(---wcp-stage-dark-color);\n  }\n}\n:host([color-scheme=dark]):host {\n  ---wcp-stage-background: var(---wcp-stage-dark-background);\n  ---wcp-stage-border-color: var(---wcp-stage-dark-border-color);\n  ---wcp-stage-color: var(---wcp-stage-dark-color);\n}\n\n@media (prefers-color-scheme: light) {\n  :host {\n    ---wcp-stage-background: var(---wcp-stage-light-background);\n    ---wcp-stage-border-color: var(---wcp-stage-light-border-color);\n    ---wcp-stage-color: var(---wcp-stage-light-color);\n  }\n}\n:host([color-scheme=light]):host {\n  ---wcp-stage-background: var(---wcp-stage-light-background);\n  ---wcp-stage-border-color: var(---wcp-stage-light-border-color);\n  ---wcp-stage-color: var(---wcp-stage-light-color);\n}\n\n:host {\n  flex: 1 1 auto;\n  flex-direction: column;\n  display: flex;\n  padding: var(---wcp-stage-spacing);\n  background-color: var(---wcp-stage-background);\n  color: var(---wcp-stage-color);\n  scrollbar-color: var(--wcp-color-blue-34) transparent;\n  overflow: auto;\n}\n:host::-webkit-scrollbar {\n  width: 0.5rem;\n}\n:host::-webkit-scrollbar-thumb {\n  background-color: var(--wcp-color-blue-34);\n  border-radius: 0.5rem;\n}\n:host::-webkit-scrollbar-track {\n  display: none;\n  background-color: transparent;\n}\n@media (min-width: 768px) {\n  :host {\n    margin: var(---wcp-stage-distance);\n    border-top-right-radius: var(---wcp-stage-border-radius);\n    border-top-left-radius: var(---wcp-stage-border-radius);\n  }\n}\n\nwcp-tabs {\n  flex: 1 0 auto;\n}\nwcp-tabs::part(tablist) {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n  background-color: var(---wcp-stage-background);\n  min-height: calc(10px * 4);\n  min-height: calc(var(--wcp-base-size, 10px) * 4);\n}\nwcp-tabs::part(element-panel:not([hidden])) {\n  display: flex;\n  flex: 1 0 auto;\n  flex-direction: column;\n}\n\nslot:not([name]) {\n  display: none;\n}\n/*# sourceMappingURL=data:application/json;base64, */`;\n", "import { html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement, eventOptions } from 'lit/decorators.js';\n\nimport { ColorSchemable } from '@/mixins/color-schemable.mixin.js';\nimport { persist } from '@/utils/state.utils.js';\n\nimport styles from './toggle-color-scheme.component.scss';\n\n/**\n * Shows a button to toggle the desired color-scheme.\n *\n */\n@customElement('wcp-toggle-color-scheme')\nexport class ToggleColorScheme extends ColorSchemable(LitElement) {\n  static override readonly styles = unsafeCSS(styles);\n\n  @eventOptions({ passive: true })\n  handleButtonClick() {\n    const colorScheme = this.colorScheme === 'dark' ? 'light' : 'dark';\n    persist('color-scheme', colorScheme);\n  }\n\n  protected override render(): TemplateResult {\n    return html`\n      <wcp-button kind=\"icon\" @click=\"${this.handleButtonClick}\">\n        <wcp-icon name=\"${this.colorScheme === 'dark' ? 'moon' : 'sun'}\"></wcp-icon>\n      </wcp-button>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-toggle-color-scheme': ToggleColorScheme;\n  }\n}\n", "export default ``;\n", "import { html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement, eventOptions } from 'lit/decorators.js';\n\nimport { persist, read } from '@/utils/state.utils.js';\n\nimport styles from './toggle-sidebar.component.scss';\n\n/**\n * Shows a button to toggle sidebar.\n *\n */\n@customElement('wcp-toggle-sidebar')\nexport class ToggleSidebar extends LitElement {\n  static override readonly styles = unsafeCSS(styles);\n\n  @eventOptions({ passive: true })\n  handleButtonClick() {\n    persist('aside-visible', !read('aside-visible'));\n  }\n\n  protected override render(): TemplateResult {\n    return html`\n      <wcp-button kind=\"icon\" @click=\"${this.handleButtonClick}\"><wcp-icon name=\"menu\"></wcp-icon></wcp-button>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-toggle-sidebar': ToggleSidebar;\n  }\n}\n", "export default ``;\n", "import { html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement } from 'lit/decorators.js';\n\nimport { ColorSchemable } from '@/mixins/color-schemable.mixin.js';\n\nimport styles from './topbar.component.scss';\n\n/**\n * A wrapper above the preview frame content to contain various controls.\n *\n * @slot - Default slot for navigation items\n *\n * @cssprop --wcp-topbar-dark-background - Background color of the controls in dark mode\n * @cssprop --wcp-topbar-dark-color - Text color of the controls in dark mode\n * @cssprop --wcp-topbar-light-background - Background color of the controls in light mode\n * @cssprop --wcp-topbar-light-color - Text color of the controls in light mode\n *\n * @cssprop --wcp-topbar-height - Overall height of the preview controls nav bar\n * @cssprop --wcp-topbar-spacing - Inner spacing, used as padding of the controls\n *\n */\n@customElement('wcp-topbar')\nexport class Topbar extends ColorSchemable(LitElement) {\n  static override readonly styles = unsafeCSS(styles);\n\n  protected override render(): TemplateResult {\n    return html`<slot></slot>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-topbar': Topbar;\n  }\n}\n", "export default `:host {\n  ---wcp-topbar-dark-background: var(--wcp-topbar-dark-background, var(--wcp-color-blue-17));\n  ---wcp-topbar-dark-color: var(--wcp-topbar-dark-color, var(--wcp-color-grey-96));\n  ---wcp-topbar-light-background: var(--wcp-topbar-light-background, var(--wcp-color-blue-80));\n  ---wcp-topbar-light-color: var(--wcp-topbar-light-color, var(--wcp-color-grey-17));\n  ---wcp-topbar-height: var(--wcp-topbar-height, calc(var(--wcp-base-size, 10px) * 5));\n  ---wcp-topbar-spacing: var(--wcp-topbar-spacing, calc(var(--wcp-base-size, 10px) * 0.5) calc(var(--wcp-base-size, 10px) * 1));\n}\n\n:host {\n  display: flex;\n  flex-direction: row;\n  flex: 0 0 auto;\n  box-sizing: border-box;\n  height: var(---wcp-topbar-height);\n  padding: var(---wcp-topbar-spacing);\n}\n@media (prefers-color-scheme: dark) {\n  :host {\n    background-color: var(---wcp-topbar-dark-background);\n    color: var(---wcp-topbar-dark-color);\n  }\n}\n:host([color-scheme=dark]):host {\n  background-color: var(---wcp-topbar-dark-background);\n  color: var(---wcp-topbar-dark-color);\n}\n\n@media (prefers-color-scheme: light) {\n  :host {\n    background-color: var(---wcp-topbar-light-background);\n    color: var(---wcp-topbar-light-color);\n  }\n}\n:host([color-scheme=light]):host {\n  background-color: var(---wcp-topbar-light-background);\n  color: var(---wcp-topbar-light-color);\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2NsaWVudC9jbGllbnQvc3JjL2NvbXBvbmVudHMvZmVhdHVyZXMvdG9wYmFyL3RvcGJhci5jb21wb25lbnQuc2NzcyIsIjpob3N0JTIwJTdCJTBBJTIwJTIwLS0td2NwLXRvcGJhci1kYXJrLWJhY2tncm91bmQ6JTIwdmFyKC0td2NwLXRvcGJhci1kYXJrLWJhY2tncm91bmQsJTIwdmFyKC0td2NwLWNvbG9yLWJsdWUtMTcpKTslMEElMjAlMjAtLS13Y3AtdG9wYmFyLWRhcmstY29sb3I6JTIwdmFyKC0td2NwLXRvcGJhci1kYXJrLWNvbG9yLCUyMHZhcigtLXdjcC1jb2xvci1ncmV5LTk2KSk7JTBBJTIwJTIwLS0td2NwLXRvcGJhci1saWdodC1iYWNrZ3JvdW5kOiUyMHZhcigtLXdjcC10b3BiYXItbGlnaHQtYmFja2dyb3VuZCwlMjB2YXIoLS13Y3AtY29sb3ItYmx1ZS04MCkpOyUwQSUyMCUyMC0tLXdjcC10b3BiYXItbGlnaHQtY29sb3I6JTIwdmFyKC0td2NwLXRvcGJhci1saWdodC1jb2xvciwlMjB2YXIoLS13Y3AtY29sb3ItZ3JleS0xNykpOyUwQSUyMCUyMC0tLXdjcC10b3BiYXItaGVpZ2h0OiUyMHZhcigtLXdjcC10b3BiYXItaGVpZ2h0LCUyMGNhbGModmFyKC0td2NwLWJhc2Utc2l6ZSwlMjAxMHB4KSUyMColMjA1KSk7JTBBJTIwJTIwLS0td2NwLXRvcGJhci1zcGFjaW5nOiUyMHZhcigtLXdjcC10b3BiYXItc3BhY2luZywlMjBjYWxjKHZhcigtLXdjcC1iYXNlLXNpemUsJTIwMTBweCklMjAqJTIwMC41KSUyMGNhbGModmFyKC0td2NwLWJhc2Utc2l6ZSwlMjAxMHB4KSUyMColMjAxKSk7JTBBJTdEJTBBJTBBOmhvc3QlMjAlN0IlMEElMjAlMjBkaXNwbGF5OiUyMGZsZXg7JTBBJTIwJTIwZmxleC1kaXJlY3Rpb246JTIwcm93OyUwQSUyMCUyMGZsZXg6JTIwMCUyMDAlMjBhdXRvOyUwQSUyMCUyMGJveC1zaXppbmc6JTIwYm9yZGVyLWJveDslMEElMjAlMjBoZWlnaHQ6JTIwdmFyKC0tLXdjcC10b3BiYXItaGVpZ2h0KTslMEElMjAlMjBwYWRkaW5nOiUyMHZhcigtLS13Y3AtdG9wYmFyLXNwYWNpbmcpOyUwQSU3RCUwQUBtZWRpYSUyMChwcmVmZXJzLWNvbG9yLXNjaGVtZTolMjBkYXJrKSUyMCU3QiUwQSUyMCUyMDpob3N0JTIwJTdCJTBBJTIwJTIwJTIwJTIwYmFja2dyb3VuZC1jb2xvcjolMjB2YXIoLS0td2NwLXRvcGJhci1kYXJrLWJhY2tncm91bmQpOyUwQSUyMCUyMCUyMCUyMGNvbG9yOiUyMHZhcigtLS13Y3AtdG9wYmFyLWRhcmstY29sb3IpOyUwQSUyMCUyMCU3RCUwQSU3RCUwQTpob3N0KCU1QmNvbG9yLXNjaGVtZT1kYXJrJTVEKTpob3N0JTIwJTdCJTBBJTIwJTIwYmFja2dyb3VuZC1jb2xvcjolMjB2YXIoLS0td2NwLXRvcGJhci1kYXJrLWJhY2tncm91bmQpOyUwQSUyMCUyMGNvbG9yOiUyMHZhcigtLS13Y3AtdG9wYmFyLWRhcmstY29sb3IpOyUwQSU3RCUwQSUwQUBtZWRpYSUyMChwcmVmZXJzLWNvbG9yLXNjaGVtZTolMjBsaWdodCklMjAlN0IlMEElMjAlMjA6aG9zdCUyMCU3QiUwQSUyMCUyMCUyMCUyMGJhY2tncm91bmQtY29sb3I6JTIwdmFyKC0tLXdjcC10b3BiYXItbGlnaHQtYmFja2dyb3VuZCk7JTBBJTIwJTIwJTIwJTIwY29sb3I6JTIwdmFyKC0tLXdjcC10b3BiYXItbGlnaHQtY29sb3IpOyUwQSUyMCUyMCU3RCUwQSU3RCUwQTpob3N0KCU1QmNvbG9yLXNjaGVtZT1saWdodCU1RCk6aG9zdCUyMCU3QiUwQSUyMCUyMGJhY2tncm91bmQtY29sb3I6JTIwdmFyKC0tLXdjcC10b3BiYXItbGlnaHQtYmFja2dyb3VuZCk7JTBBJTIwJTIwY29sb3I6JTIwdmFyKC0tLXdjcC10b3BiYXItbGlnaHQtY29sb3IpOyUwQSU3RCUwQS8qJTIzJTIwc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWU2IyOTBJam9pTDJodmJXVXZjblZ1Ym1WeUwzZHZjbXN2WTJ4cFpXNTBMMk5zYVdWdWRDOXpjbU12WTI5dGNHOXVaVzUwY3k5bVpXRjBkWEpsY3k5MGIzQmlZWElpTENKemIzVnlZMlZ6SWpwYkluUnZjR0poY2k1amIyMXdiMjVsYm5RdWMyTnpjeUlzSWk0dUx5NHVMeTR1TDNOMGVXeGxjeTl0YVhocGJuTXZZMjlzYjNJdGMyTm9aVzFsTG0xcGVHbHVMbk5qYzNNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlIwRTdSVUZEUlR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVWQk8wVkJRMEU3T3p0QlFVZEdPMFZCUTBVN1JVRkRRVHRGUVVOQk8wVkJSVUU3UlVGRFFUdEZRVU5CT3p0QlEwbEJPMFZFV0VZN1NVRlZTVHRKUVVOQk96czdRVU5zUWtVN1JVUnBRa1k3UlVGRFFUczdPMEZEUVVZN1JVUllSanRKUVZWSk8wbEJRMEU3T3p0QlEyeENSVHRGUkdsQ1JqdEZRVU5CSWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaVFIVnpaU0FuUUM5emRIbHNaWE12ZFhScGJITW5JR0Z6SUhWMGFXeHpPMXh1WEc0dkx5QndjbVYwZEdsbGNpMXBaMjV2Y21WY2JqcG9iM04wSUh0Y2JpQWdMUzB0ZDJOd0xYUnZjR0poY2kxa1lYSnJMV0poWTJ0bmNtOTFibVE2SUhaaGNpZ3RMWGRqY0MxMGIzQmlZWEl0WkdGeWF5MWlZV05yWjNKdmRXNWtMQ0IyWVhJb0xTMTNZM0F0WTI5c2IzSXRZbXgxWlMweE55a3BPMXh1SUNBdExTMTNZM0F0ZEc5d1ltRnlMV1JoY21zdFkyOXNiM0k2SUhaaGNpZ3RMWGRqY0MxMGIzQmlZWEl0WkdGeWF5MWpiMnh2Y2l3Z2RtRnlLQzB0ZDJOd0xXTnZiRzl5TFdkeVpYa3RPVFlwS1R0Y2JpQWdMUzB0ZDJOd0xYUnZjR0poY2kxc2FXZG9kQzFpWVdOclozSnZkVzVrT2lCMllYSW9MUzEzWTNBdGRHOXdZbUZ5TFd4cFoyaDBMV0poWTJ0bmNtOTFibVFzSUhaaGNpZ3RMWGRqY0MxamIyeHZjaTFpYkhWbExUZ3dLU2s3WEc0Z0lDMHRMWGRqY0MxMGIzQmlZWEl0YkdsbmFIUXRZMjlzYjNJNklIWmhjaWd0TFhkamNDMTBiM0JpWVhJdGJHbG5hSFF0WTI5c2IzSXNJSFpoY2lndExYZGpjQzFqYjJ4dmNpMW5jbVY1TFRFM0tTazdYRzVjYmlBZ0xTMHRkMk53TFhSdmNHSmhjaTFvWldsbmFIUTZJSFpoY2lndExYZGpjQzEwYjNCaVlYSXRhR1ZwWjJoMExDQWplM1YwYVd4ekxuTnBlbVVvTlNsOUtUdGNiaUFnTFMwdGQyTndMWFJ2Y0dKaGNpMXpjR0ZqYVc1bk9pQjJZWElvTFMxM1kzQXRkRzl3WW1GeUxYTndZV05wYm1jc0lDTjdkWFJwYkhNdWMybDZaU2d1TlNrZ2RYUnBiSE11YzJsNlpTZ3hLWDBwTzF4dWZWeHVYRzQ2YUc5emRDQjdYRzRnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUdac1pYZ3RaR2x5WldOMGFXOXVPaUJ5YjNjN1hHNGdJR1pzWlhnNklEQWdNQ0JoZFhSdk8xeHVYRzRnSUdKdmVDMXphWHBwYm1jNklHSnZjbVJsY2kxaWIzZzdYRzRnSUdobGFXZG9kRG9nZG1GeUtDMHRMWGRqY0MxMGIzQmlZWEl0YUdWcFoyaDBLVHRjYmlBZ2NHRmtaR2x1WnpvZ2RtRnlLQzB0TFhkamNDMTBiM0JpWVhJdGMzQmhZMmx1WnlrN1hHNWNiaUFnUUdsdVkyeDFaR1VnZFhScGJITXVZMjlzYjNJdGMyTm9aVzFsS0NrZ2RYTnBibWNnS0NSamIyeHZjaTF6WTJobGJXVXBJSHRjYmlBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQjJZWElvTFMwdGQyTndMWFJ2Y0dKaGNpMGpleVJqYjJ4dmNpMXpZMmhsYldWOUxXSmhZMnRuY205MWJtUXBPMXh1SUNBZ0lHTnZiRzl5T2lCMllYSW9MUzB0ZDJOd0xYUnZjR0poY2kwamV5UmpiMnh2Y2kxelkyaGxiV1Y5TFdOdmJHOXlLVHRjYmlBZ2ZWeHVmVnh1SWl3aVFHMXBlR2x1SUhkcGRHZ3RZMjlzYjNJdGMyTm9aVzFsTFdGMGRISnBZblYwWlNna1kyOXNiM0l0YzJOb1pXMWxMQ0FrYzJoaFpHOTNPaUIwY25WbExDQWtZWEJ3Wlc1a09pQm1ZV3h6WlNrZ2UxeHVJQ0FrYlc5a2FXWnBaWEk2SUNkYlkyOXNiM0l0YzJOb1pXMWxQVndpSTNza1kyOXNiM0l0YzJOb1pXMWxmVndpWFNjN1hHNGdJQ1J0YjJScFptbGxaRG9nYVdZb0pITm9ZV1J2ZHl3Z0p6cG9iM04wS0NON0pHMXZaR2xtYVdWeWZTa25MQ0FrYlc5a2FXWnBaWElwTzF4dVhHNGdJRUJwWmlBa1lYQndaVzVrSUQwOUlISnZiM1FnZTF4dUlDQWdJRUJoZEMxeWIyOTBJQ2gzYVhSb2IzVjBPaUJoYkd3cElIdGNiaUFnSUNBZ0lDTjdKRzF2WkdsbWFXVmtmU043Sm4wZ2UxeHVJQ0FnSUNBZ0lDQkFZMjl1ZEdWdWREdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJSDBnUUdWc2MyVWdhV1lnSkdGd2NHVnVaQ0E5UFNCd1lYSmxiblFnZTF4dUlDQWdJRUJoZEMxeWIyOTBJQ2gzYVhSb2IzVjBPaUJoYkd3cElIdGNiaUFnSUNBZ0lDTjdKbjBqZXlSdGIyUnBabWxsWkgwZ2UxeHVJQ0FnSUNBZ0lDQkFZMjl1ZEdWdWREdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJSDBnUUdWc2MyVWdlMXh1SUNBZ0lDTjdKRzF2WkdsbWFXVmtmU0I3WEc0Z0lDQWdJQ0JBWTI5dWRHVnVkRHRjYmlBZ0lDQjlYRzRnSUgxY2JuMWNibHh1UUcxcGVHbHVJSGRwZEdndFkyOXNiM0l0YzJOb1pXMWxMVzFsWkdsaEtDUmpiMnh2Y2kxelkyaGxiV1VwSUh0Y2JpQWdRRzFsWkdsaElDaHdjbVZtWlhKekxXTnZiRzl5TFhOamFHVnRaVG9nSTNza1kyOXNiM0l0YzJOb1pXMWxmU2tnZTF4dUlDQWdJRUJqYjI1MFpXNTBPMXh1SUNCOVhHNTlYRzVjYmk4dkx5QkRiMnh2Y2lCVFkyaGxiV1VnYldsNGFXNWNiaTh2THlCQmJHeHZkM01nZEc4Z1lYQndiSGtnYzNSNWJHVnpJR0poYzJWa0lHOXVJSFJvWlNCUFV5QmtaV1poZFd4MElHTnZiRzl5SUhOamFHVnRaU0JoYm1RZ1lXNGdiM1psY25KcFpHVWdZbmtnWVc0Z1lYUjBjbWxpZFhSbElITmxiR1ZqZEc5eVhHNUFiV2w0YVc0Z1kyOXNiM0l0YzJOb1pXMWxLRnh1SUNBa2MyaGhaRzkzT2lCMGNuVmxMRnh1SUNBa1lYQndaVzVrT2lCeWIyOTBMRnh1SUNBa1kyOXNiM0l0YzJOb1pXMWxjem9nS0Z4dUlDQWdJR1JoY21zc1hHNGdJQ0FnYkdsbmFIUXNYRzRnSUNsY2Jpa2dlMXh1SUNCQVpXRmphQ0FrWTI5c2IzSXRjMk5vWlcxbElHbHVJQ1JqYjJ4dmNpMXpZMmhsYldWeklIdGNiaUFnSUNBdkx5QnRZWFJqYUNCMGJ5QnRaV1JwWVNCeGRXVnllU0JpZVNCUFV5QmtaV1poZFd4MFhHNGdJQ0FnUUdsdVkyeDFaR1VnZDJsMGFDMWpiMnh2Y2kxelkyaGxiV1V0YldWa2FXRW9KR052Ykc5eUxYTmphR1Z0WlNrZ2UxeHVJQ0FnSUNBZ1FHTnZiblJsYm5RZ0tDUmpiMnh2Y2kxelkyaGxiV1VwTzF4dUlDQWdJSDFjYmlBZ0lDQXZMeUJ0WVhSamFDQjBieUJsYkdWdFpXNTBJR0YwZEhKcFluVjBaU0J6Wld4bFkzUnZjaUJ2ZG1WeWNtbGtaVnh1SUNBZ0lFQnBibU5zZFdSbElIZHBkR2d0WTI5c2IzSXRjMk5vWlcxbExXRjBkSEpwWW5WMFpTZ2tZMjlzYjNJdGMyTm9aVzFsTENBa2MyaGhaRzkzTENBa1lYQndaVzVrS1NCN1hHNGdJQ0FnSUNCQVkyOXVkR1Z1ZENBb0pHTnZiRzl5TFhOamFHVnRaU2s3WEc0Z0lDQWdmVnh1SUNCOVhHNTlYRzRpWFgwPSUyMCoiLCIvaG9tZS9ydW5uZXIvd29yay9jbGllbnQvY2xpZW50L3NyYy9zdHlsZXMvbWl4aW5zL2NvbG9yLXNjaGVtZS5taXhpbi5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBO0VBQ0UsMEZBQUE7RUFDQSxnRkFBQTtFQUNBLDRGQUFBO0VBQ0Esa0ZBQUE7RUFFQSxvRkFBQTtFQUNBLDZIQUFBO0FDSEY7O0FETUE7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxjQUFBO0VBRUEsc0JBQUE7RUFDQSxpQ0FBQTtFQUNBLG1DQUFBO0FDSkY7QUNRRTtFRlhGO0lBVUksb0RBQUE7SUFDQSxvQ0FBQTtFQ0hGO0FBQ0Y7QUNoQk07RUZpQkYsb0RBQUE7RUFDQSxvQ0FBQTtBQ0VKOztBQ0ZFO0VGWEY7SUFVSSxxREFBQTtJQUNBLHFDQUFBO0VDUUY7QUFDRjtBQzNCTTtFRmlCRixxREFBQTtFQUNBLHFDQUFBO0FDYUoiLCJmaWxlIjoiOmhvc3Qge1xuICAtLS13Y3AtdG9wYmFyLWRhcmstYmFja2dyb3VuZDogdmFyKC0td2NwLXRvcGJhci1kYXJrLWJhY2tncm91bmQsIHZhcigtLXdjcC1jb2xvci1ibHVlLTE3KSk7XG4gIC0tLXdjcC10b3BiYXItZGFyay1jb2xvcjogdmFyKC0td2NwLXRvcGJhci1kYXJrLWNvbG9yLCB2YXIoLS13Y3AtY29sb3ItZ3JleS05NikpO1xuICAtLS13Y3AtdG9wYmFyLWxpZ2h0LWJhY2tncm91bmQ6IHZhcigtLXdjcC10b3BiYXItbGlnaHQtYmFja2dyb3VuZCwgdmFyKC0td2NwLWNvbG9yLWJsdWUtODApKTtcbiAgLS0td2NwLXRvcGJhci1saWdodC1jb2xvcjogdmFyKC0td2NwLXRvcGJhci1saWdodC1jb2xvciwgdmFyKC0td2NwLWNvbG9yLWdyZXktMTcpKTtcbiAgLS0td2NwLXRvcGJhci1oZWlnaHQ6IHZhcigtLXdjcC10b3BiYXItaGVpZ2h0LCBjYWxjKHZhcigtLXdjcC1iYXNlLXNpemUsIDEwcHgpICogNSkpO1xuICAtLS13Y3AtdG9wYmFyLXNwYWNpbmc6IHZhcigtLXdjcC10b3BiYXItc3BhY2luZywgY2FsYyh2YXIoLS13Y3AtYmFzZS1zaXplLCAxMHB4KSAqIDAuNSkgY2FsYyh2YXIoLS13Y3AtYmFzZS1zaXplLCAxMHB4KSAqIDEpKTtcbn1cblxuOmhvc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBmbGV4OiAwIDAgYXV0bztcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgaGVpZ2h0OiB2YXIoLS0td2NwLXRvcGJhci1oZWlnaHQpO1xuICBwYWRkaW5nOiB2YXIoLS0td2NwLXRvcGJhci1zcGFjaW5nKTtcbn1cbkBtZWRpYSAocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspIHtcbiAgOmhvc3Qge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLS13Y3AtdG9wYmFyLWRhcmstYmFja2dyb3VuZCk7XG4gICAgY29sb3I6IHZhcigtLS13Y3AtdG9wYmFyLWRhcmstY29sb3IpO1xuICB9XG59XG46aG9zdChbY29sb3Itc2NoZW1lPWRhcmtdKTpob3N0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tLXdjcC10b3BiYXItZGFyay1iYWNrZ3JvdW5kKTtcbiAgY29sb3I6IHZhcigtLS13Y3AtdG9wYmFyLWRhcmstY29sb3IpO1xufVxuXG5AbWVkaWEgKHByZWZlcnMtY29sb3Itc2NoZW1lOiBsaWdodCkge1xuICA6aG9zdCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tLXdjcC10b3BiYXItbGlnaHQtYmFja2dyb3VuZCk7XG4gICAgY29sb3I6IHZhcigtLS13Y3AtdG9wYmFyLWxpZ2h0LWNvbG9yKTtcbiAgfVxufVxuOmhvc3QoW2NvbG9yLXNjaGVtZT1saWdodF0pOmhvc3Qge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS0td2NwLXRvcGJhci1saWdodC1iYWNrZ3JvdW5kKTtcbiAgY29sb3I6IHZhcigtLS13Y3AtdG9wYmFyLWxpZ2h0LWNvbG9yKTtcbn1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZTYjI5MElqb2lMMmh2YldVdmNuVnVibVZ5TDNkdmNtc3ZZMnhwWlc1MEwyTnNhV1Z1ZEM5emNtTXZZMjl0Y0c5dVpXNTBjeTltWldGMGRYSmxjeTkwYjNCaVlYSWlMQ0p6YjNWeVkyVnpJanBiSW5SdmNHSmhjaTVqYjIxd2IyNWxiblF1YzJOemN5SXNJaTR1THk0dUx5NHVMM04wZVd4bGN5OXRhWGhwYm5NdlkyOXNiM0l0YzJOb1pXMWxMbTFwZUdsdUxuTmpjM01pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUjBFN1JVRkRSVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVVZCTzBWQlEwRTdPenRCUVVkR08wVkJRMFU3UlVGRFFUdEZRVU5CTzBWQlJVRTdSVUZEUVR0RlFVTkJPenRCUTBsQk8wVkVXRVk3U1VGVlNUdEpRVU5CT3pzN1FVTnNRa1U3UlVScFFrWTdSVUZEUVRzN08wRkRRVVk3UlVSWVJqdEpRVlZKTzBsQlEwRTdPenRCUTJ4Q1JUdEZSR2xDUmp0RlFVTkJJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpUUhWelpTQW5RQzl6ZEhsc1pYTXZkWFJwYkhNbklHRnpJSFYwYVd4ek8xeHVYRzR2THlCd2NtVjBkR2xsY2kxcFoyNXZjbVZjYmpwb2IzTjBJSHRjYmlBZ0xTMHRkMk53TFhSdmNHSmhjaTFrWVhKckxXSmhZMnRuY205MWJtUTZJSFpoY2lndExYZGpjQzEwYjNCaVlYSXRaR0Z5YXkxaVlXTnJaM0p2ZFc1a0xDQjJZWElvTFMxM1kzQXRZMjlzYjNJdFlteDFaUzB4TnlrcE8xeHVJQ0F0TFMxM1kzQXRkRzl3WW1GeUxXUmhjbXN0WTI5c2IzSTZJSFpoY2lndExYZGpjQzEwYjNCaVlYSXRaR0Z5YXkxamIyeHZjaXdnZG1GeUtDMHRkMk53TFdOdmJHOXlMV2R5WlhrdE9UWXBLVHRjYmlBZ0xTMHRkMk53TFhSdmNHSmhjaTFzYVdkb2RDMWlZV05yWjNKdmRXNWtPaUIyWVhJb0xTMTNZM0F0ZEc5d1ltRnlMV3hwWjJoMExXSmhZMnRuY205MWJtUXNJSFpoY2lndExYZGpjQzFqYjJ4dmNpMWliSFZsTFRnd0tTazdYRzRnSUMwdExYZGpjQzEwYjNCaVlYSXRiR2xuYUhRdFkyOXNiM0k2SUhaaGNpZ3RMWGRqY0MxMGIzQmlZWEl0YkdsbmFIUXRZMjlzYjNJc0lIWmhjaWd0TFhkamNDMWpiMnh2Y2kxbmNtVjVMVEUzS1NrN1hHNWNiaUFnTFMwdGQyTndMWFJ2Y0dKaGNpMW9aV2xuYUhRNklIWmhjaWd0TFhkamNDMTBiM0JpWVhJdGFHVnBaMmgwTENBamUzVjBhV3h6TG5OcGVtVW9OU2w5S1R0Y2JpQWdMUzB0ZDJOd0xYUnZjR0poY2kxemNHRmphVzVuT2lCMllYSW9MUzEzWTNBdGRHOXdZbUZ5TFhOd1lXTnBibWNzSUNON2RYUnBiSE11YzJsNlpTZ3VOU2tnZFhScGJITXVjMmw2WlNneEtYMHBPMXh1ZlZ4dVhHNDZhRzl6ZENCN1hHNGdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJR1pzWlhndFpHbHlaV04wYVc5dU9pQnliM2M3WEc0Z0lHWnNaWGc2SURBZ01DQmhkWFJ2TzF4dVhHNGdJR0p2ZUMxemFYcHBibWM2SUdKdmNtUmxjaTFpYjNnN1hHNGdJR2hsYVdkb2REb2dkbUZ5S0MwdExYZGpjQzEwYjNCaVlYSXRhR1ZwWjJoMEtUdGNiaUFnY0dGa1pHbHVaem9nZG1GeUtDMHRMWGRqY0MxMGIzQmlZWEl0YzNCaFkybHVaeWs3WEc1Y2JpQWdRR2x1WTJ4MVpHVWdkWFJwYkhNdVkyOXNiM0l0YzJOb1pXMWxLQ2tnZFhOcGJtY2dLQ1JqYjJ4dmNpMXpZMmhsYldVcElIdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCMllYSW9MUzB0ZDJOd0xYUnZjR0poY2kwamV5UmpiMnh2Y2kxelkyaGxiV1Y5TFdKaFkydG5jbTkxYm1RcE8xeHVJQ0FnSUdOdmJHOXlPaUIyWVhJb0xTMHRkMk53TFhSdmNHSmhjaTBqZXlSamIyeHZjaTF6WTJobGJXVjlMV052Ykc5eUtUdGNiaUFnZlZ4dWZWeHVJaXdpUUcxcGVHbHVJSGRwZEdndFkyOXNiM0l0YzJOb1pXMWxMV0YwZEhKcFluVjBaU2drWTI5c2IzSXRjMk5vWlcxbExDQWtjMmhoWkc5M09pQjBjblZsTENBa1lYQndaVzVrT2lCbVlXeHpaU2tnZTF4dUlDQWtiVzlrYVdacFpYSTZJQ2RiWTI5c2IzSXRjMk5vWlcxbFBWd2lJM3NrWTI5c2IzSXRjMk5vWlcxbGZWd2lYU2M3WEc0Z0lDUnRiMlJwWm1sbFpEb2dhV1lvSkhOb1lXUnZkeXdnSnpwb2IzTjBLQ043SkcxdlpHbG1hV1Z5ZlNrbkxDQWtiVzlrYVdacFpYSXBPMXh1WEc0Z0lFQnBaaUFrWVhCd1pXNWtJRDA5SUhKdmIzUWdlMXh1SUNBZ0lFQmhkQzF5YjI5MElDaDNhWFJvYjNWME9pQmhiR3dwSUh0Y2JpQWdJQ0FnSUNON0pHMXZaR2xtYVdWa2ZTTjdKbjBnZTF4dUlDQWdJQ0FnSUNCQVkyOXVkR1Z1ZER0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMGdRR1ZzYzJVZ2FXWWdKR0Z3Y0dWdVpDQTlQU0J3WVhKbGJuUWdlMXh1SUNBZ0lFQmhkQzF5YjI5MElDaDNhWFJvYjNWME9pQmhiR3dwSUh0Y2JpQWdJQ0FnSUNON0puMGpleVJ0YjJScFptbGxaSDBnZTF4dUlDQWdJQ0FnSUNCQVkyOXVkR1Z1ZER0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMGdRR1ZzYzJVZ2UxeHVJQ0FnSUNON0pHMXZaR2xtYVdWa2ZTQjdYRzRnSUNBZ0lDQkFZMjl1ZEdWdWREdGNiaUFnSUNCOVhHNGdJSDFjYm4xY2JseHVRRzFwZUdsdUlIZHBkR2d0WTI5c2IzSXRjMk5vWlcxbExXMWxaR2xoS0NSamIyeHZjaTF6WTJobGJXVXBJSHRjYmlBZ1FHMWxaR2xoSUNod2NtVm1aWEp6TFdOdmJHOXlMWE5qYUdWdFpUb2dJM3NrWTI5c2IzSXRjMk5vWlcxbGZTa2dlMXh1SUNBZ0lFQmpiMjUwWlc1ME8xeHVJQ0I5WEc1OVhHNWNiaTh2THlCRGIyeHZjaUJUWTJobGJXVWdiV2w0YVc1Y2JpOHZMeUJCYkd4dmQzTWdkRzhnWVhCd2JIa2djM1I1YkdWeklHSmhjMlZrSUc5dUlIUm9aU0JQVXlCa1pXWmhkV3gwSUdOdmJHOXlJSE5qYUdWdFpTQmhibVFnWVc0Z2IzWmxjbkpwWkdVZ1lua2dZVzRnWVhSMGNtbGlkWFJsSUhObGJHVmpkRzl5WEc1QWJXbDRhVzRnWTI5c2IzSXRjMk5vWlcxbEtGeHVJQ0FrYzJoaFpHOTNPaUIwY25WbExGeHVJQ0FrWVhCd1pXNWtPaUJ5YjI5MExGeHVJQ0FrWTI5c2IzSXRjMk5vWlcxbGN6b2dLRnh1SUNBZ0lHUmhjbXNzWEc0Z0lDQWdiR2xuYUhRc1hHNGdJQ2xjYmlrZ2UxeHVJQ0JBWldGamFDQWtZMjlzYjNJdGMyTm9aVzFsSUdsdUlDUmpiMnh2Y2kxelkyaGxiV1Z6SUh0Y2JpQWdJQ0F2THlCdFlYUmphQ0IwYnlCdFpXUnBZU0J4ZFdWeWVTQmllU0JQVXlCa1pXWmhkV3gwWEc0Z0lDQWdRR2x1WTJ4MVpHVWdkMmwwYUMxamIyeHZjaTF6WTJobGJXVXRiV1ZrYVdFb0pHTnZiRzl5TFhOamFHVnRaU2tnZTF4dUlDQWdJQ0FnUUdOdmJuUmxiblFnS0NSamIyeHZjaTF6WTJobGJXVXBPMXh1SUNBZ0lIMWNiaUFnSUNBdkx5QnRZWFJqYUNCMGJ5QmxiR1Z0Wlc1MElHRjBkSEpwWW5WMFpTQnpaV3hsWTNSdmNpQnZkbVZ5Y21sa1pWeHVJQ0FnSUVCcGJtTnNkV1JsSUhkcGRHZ3RZMjlzYjNJdGMyTm9aVzFsTFdGMGRISnBZblYwWlNna1kyOXNiM0l0YzJOb1pXMWxMQ0FrYzJoaFpHOTNMQ0FrWVhCd1pXNWtLU0I3WEc0Z0lDQWdJQ0JBWTI5dWRHVnVkQ0FvSkdOdmJHOXlMWE5qYUdWdFpTazdYRzRnSUNBZ2ZWeHVJQ0I5WEc1OVhHNGlYWDA9ICoiLCJzb3VyY2VzQ29udGVudCI6WyJAdXNlICdAL3N0eWxlcy91dGlscycgYXMgdXRpbHM7XG5cbi8vIHByZXR0aWVyLWlnbm9yZVxuOmhvc3Qge1xuICAtLS13Y3AtdG9wYmFyLWRhcmstYmFja2dyb3VuZDogdmFyKC0td2NwLXRvcGJhci1kYXJrLWJhY2tncm91bmQsIHZhcigtLXdjcC1jb2xvci1ibHVlLTE3KSk7XG4gIC0tLXdjcC10b3BiYXItZGFyay1jb2xvcjogdmFyKC0td2NwLXRvcGJhci1kYXJrLWNvbG9yLCB2YXIoLS13Y3AtY29sb3ItZ3JleS05NikpO1xuICAtLS13Y3AtdG9wYmFyLWxpZ2h0LWJhY2tncm91bmQ6IHZhcigtLXdjcC10b3BiYXItbGlnaHQtYmFja2dyb3VuZCwgdmFyKC0td2NwLWNvbG9yLWJsdWUtODApKTtcbiAgLS0td2NwLXRvcGJhci1saWdodC1jb2xvcjogdmFyKC0td2NwLXRvcGJhci1saWdodC1jb2xvciwgdmFyKC0td2NwLWNvbG9yLWdyZXktMTcpKTtcblxuICAtLS13Y3AtdG9wYmFyLWhlaWdodDogdmFyKC0td2NwLXRvcGJhci1oZWlnaHQsICN7dXRpbHMuc2l6ZSg1KX0pO1xuICAtLS13Y3AtdG9wYmFyLXNwYWNpbmc6IHZhcigtLXdjcC10b3BiYXItc3BhY2luZywgI3t1dGlscy5zaXplKC41KSB1dGlscy5zaXplKDEpfSk7XG59XG5cbjpob3N0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgZmxleDogMCAwIGF1dG87XG5cbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgaGVpZ2h0OiB2YXIoLS0td2NwLXRvcGJhci1oZWlnaHQpO1xuICBwYWRkaW5nOiB2YXIoLS0td2NwLXRvcGJhci1zcGFjaW5nKTtcblxuICBAaW5jbHVkZSB1dGlscy5jb2xvci1zY2hlbWUoKSB1c2luZyAoJGNvbG9yLXNjaGVtZSkge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLS13Y3AtdG9wYmFyLSN7JGNvbG9yLXNjaGVtZX0tYmFja2dyb3VuZCk7XG4gICAgY29sb3I6IHZhcigtLS13Y3AtdG9wYmFyLSN7JGNvbG9yLXNjaGVtZX0tY29sb3IpO1xuICB9XG59XG4iLCI6aG9zdCB7XG4gIC0tLXdjcC10b3BiYXItZGFyay1iYWNrZ3JvdW5kOiB2YXIoLS13Y3AtdG9wYmFyLWRhcmstYmFja2dyb3VuZCwgdmFyKC0td2NwLWNvbG9yLWJsdWUtMTcpKTtcbiAgLS0td2NwLXRvcGJhci1kYXJrLWNvbG9yOiB2YXIoLS13Y3AtdG9wYmFyLWRhcmstY29sb3IsIHZhcigtLXdjcC1jb2xvci1ncmV5LTk2KSk7XG4gIC0tLXdjcC10b3BiYXItbGlnaHQtYmFja2dyb3VuZDogdmFyKC0td2NwLXRvcGJhci1saWdodC1iYWNrZ3JvdW5kLCB2YXIoLS13Y3AtY29sb3ItYmx1ZS04MCkpO1xuICAtLS13Y3AtdG9wYmFyLWxpZ2h0LWNvbG9yOiB2YXIoLS13Y3AtdG9wYmFyLWxpZ2h0LWNvbG9yLCB2YXIoLS13Y3AtY29sb3ItZ3JleS0xNykpO1xuICAtLS13Y3AtdG9wYmFyLWhlaWdodDogdmFyKC0td2NwLXRvcGJhci1oZWlnaHQsIGNhbGModmFyKC0td2NwLWJhc2Utc2l6ZSwgMTBweCkgKiA1KSk7XG4gIC0tLXdjcC10b3BiYXItc3BhY2luZzogdmFyKC0td2NwLXRvcGJhci1zcGFjaW5nLCBjYWxjKHZhcigtLXdjcC1iYXNlLXNpemUsIDEwcHgpICogMC41KSBjYWxjKHZhcigtLXdjcC1iYXNlLXNpemUsIDEwcHgpICogMSkpO1xufVxuXG46aG9zdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGZsZXg6IDAgMCBhdXRvO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBoZWlnaHQ6IHZhcigtLS13Y3AtdG9wYmFyLWhlaWdodCk7XG4gIHBhZGRpbmc6IHZhcigtLS13Y3AtdG9wYmFyLXNwYWNpbmcpO1xufVxuQG1lZGlhIChwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyaykge1xuICA6aG9zdCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tLXdjcC10b3BiYXItZGFyay1iYWNrZ3JvdW5kKTtcbiAgICBjb2xvcjogdmFyKC0tLXdjcC10b3BiYXItZGFyay1jb2xvcik7XG4gIH1cbn1cbjpob3N0KFtjb2xvci1zY2hlbWU9ZGFya10pOmhvc3Qge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS0td2NwLXRvcGJhci1kYXJrLWJhY2tncm91bmQpO1xuICBjb2xvcjogdmFyKC0tLXdjcC10b3BiYXItZGFyay1jb2xvcik7XG59XG5cbkBtZWRpYSAocHJlZmVycy1jb2xvci1zY2hlbWU6IGxpZ2h0KSB7XG4gIDpob3N0IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS0td2NwLXRvcGJhci1saWdodC1iYWNrZ3JvdW5kKTtcbiAgICBjb2xvcjogdmFyKC0tLXdjcC10b3BiYXItbGlnaHQtY29sb3IpO1xuICB9XG59XG46aG9zdChbY29sb3Itc2NoZW1lPWxpZ2h0XSk6aG9zdCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLS13Y3AtdG9wYmFyLWxpZ2h0LWJhY2tncm91bmQpO1xuICBjb2xvcjogdmFyKC0tLXdjcC10b3BiYXItbGlnaHQtY29sb3IpO1xufVxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVlNiMjkwSWpvaUwyaHZiV1V2Y25WdWJtVnlMM2R2Y21zdlkyeHBaVzUwTDJOc2FXVnVkQzl6Y21NdlkyOXRjRzl1Wlc1MGN5OW1aV0YwZFhKbGN5OTBiM0JpWVhJaUxDSnpiM1Z5WTJWeklqcGJJblJ2Y0dKaGNpNWpiMjF3YjI1bGJuUXVjMk56Y3lJc0lpNHVMeTR1THk0dUwzTjBlV3hsY3k5dGFYaHBibk12WTI5c2IzSXRjMk5vWlcxbExtMXBlR2x1TG5OamMzTWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJSMEU3UlVGRFJUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVVkJPMFZCUTBFN096dEJRVWRHTzBWQlEwVTdSVUZEUVR0RlFVTkJPMFZCUlVFN1JVRkRRVHRGUVVOQk96dEJRMGxCTzBWRVdFWTdTVUZWU1R0SlFVTkJPenM3UVVOc1FrVTdSVVJwUWtZN1JVRkRRVHM3TzBGRFFVWTdSVVJZUmp0SlFWVkpPMGxCUTBFN096dEJRMnhDUlR0RlJHbENSanRGUVVOQklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lRSFZ6WlNBblFDOXpkSGxzWlhNdmRYUnBiSE1uSUdGeklIVjBhV3h6TzF4dVhHNHZMeUJ3Y21WMGRHbGxjaTFwWjI1dmNtVmNianBvYjNOMElIdGNiaUFnTFMwdGQyTndMWFJ2Y0dKaGNpMWtZWEpyTFdKaFkydG5jbTkxYm1RNklIWmhjaWd0TFhkamNDMTBiM0JpWVhJdFpHRnlheTFpWVdOclozSnZkVzVrTENCMllYSW9MUzEzWTNBdFkyOXNiM0l0WW14MVpTMHhOeWtwTzF4dUlDQXRMUzEzWTNBdGRHOXdZbUZ5TFdSaGNtc3RZMjlzYjNJNklIWmhjaWd0TFhkamNDMTBiM0JpWVhJdFpHRnlheTFqYjJ4dmNpd2dkbUZ5S0MwdGQyTndMV052Ykc5eUxXZHlaWGt0T1RZcEtUdGNiaUFnTFMwdGQyTndMWFJ2Y0dKaGNpMXNhV2RvZEMxaVlXTnJaM0p2ZFc1a09pQjJZWElvTFMxM1kzQXRkRzl3WW1GeUxXeHBaMmgwTFdKaFkydG5jbTkxYm1Rc0lIWmhjaWd0TFhkamNDMWpiMnh2Y2kxaWJIVmxMVGd3S1NrN1hHNGdJQzB0TFhkamNDMTBiM0JpWVhJdGJHbG5hSFF0WTI5c2IzSTZJSFpoY2lndExYZGpjQzEwYjNCaVlYSXRiR2xuYUhRdFkyOXNiM0lzSUhaaGNpZ3RMWGRqY0MxamIyeHZjaTFuY21WNUxURTNLU2s3WEc1Y2JpQWdMUzB0ZDJOd0xYUnZjR0poY2kxb1pXbG5hSFE2SUhaaGNpZ3RMWGRqY0MxMGIzQmlZWEl0YUdWcFoyaDBMQ0FqZTNWMGFXeHpMbk5wZW1Vb05TbDlLVHRjYmlBZ0xTMHRkMk53TFhSdmNHSmhjaTF6Y0dGamFXNW5PaUIyWVhJb0xTMTNZM0F0ZEc5d1ltRnlMWE53WVdOcGJtY3NJQ043ZFhScGJITXVjMmw2WlNndU5Ta2dkWFJwYkhNdWMybDZaU2d4S1gwcE8xeHVmVnh1WEc0NmFHOXpkQ0I3WEc0Z0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lHWnNaWGd0WkdseVpXTjBhVzl1T2lCeWIzYzdYRzRnSUdac1pYZzZJREFnTUNCaGRYUnZPMXh1WEc0Z0lHSnZlQzF6YVhwcGJtYzZJR0p2Y21SbGNpMWliM2c3WEc0Z0lHaGxhV2RvZERvZ2RtRnlLQzB0TFhkamNDMTBiM0JpWVhJdGFHVnBaMmgwS1R0Y2JpQWdjR0ZrWkdsdVp6b2dkbUZ5S0MwdExYZGpjQzEwYjNCaVlYSXRjM0JoWTJsdVp5azdYRzVjYmlBZ1FHbHVZMngxWkdVZ2RYUnBiSE11WTI5c2IzSXRjMk5vWlcxbEtDa2dkWE5wYm1jZ0tDUmpiMnh2Y2kxelkyaGxiV1VwSUh0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUIyWVhJb0xTMHRkMk53TFhSdmNHSmhjaTBqZXlSamIyeHZjaTF6WTJobGJXVjlMV0poWTJ0bmNtOTFibVFwTzF4dUlDQWdJR052Ykc5eU9pQjJZWElvTFMwdGQyTndMWFJ2Y0dKaGNpMGpleVJqYjJ4dmNpMXpZMmhsYldWOUxXTnZiRzl5S1R0Y2JpQWdmVnh1ZlZ4dUlpd2lRRzFwZUdsdUlIZHBkR2d0WTI5c2IzSXRjMk5vWlcxbExXRjBkSEpwWW5WMFpTZ2tZMjlzYjNJdGMyTm9aVzFsTENBa2MyaGhaRzkzT2lCMGNuVmxMQ0FrWVhCd1pXNWtPaUJtWVd4elpTa2dlMXh1SUNBa2JXOWthV1pwWlhJNklDZGJZMjlzYjNJdGMyTm9aVzFsUFZ3aUkzc2tZMjlzYjNJdGMyTm9aVzFsZlZ3aVhTYzdYRzRnSUNSdGIyUnBabWxsWkRvZ2FXWW9KSE5vWVdSdmR5d2dKenBvYjNOMEtDTjdKRzF2WkdsbWFXVnlmU2tuTENBa2JXOWthV1pwWlhJcE8xeHVYRzRnSUVCcFppQWtZWEJ3Wlc1a0lEMDlJSEp2YjNRZ2UxeHVJQ0FnSUVCaGRDMXliMjkwSUNoM2FYUm9iM1YwT2lCaGJHd3BJSHRjYmlBZ0lDQWdJQ043SkcxdlpHbG1hV1ZrZlNON0puMGdlMXh1SUNBZ0lDQWdJQ0JBWTI5dWRHVnVkRHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUgwZ1FHVnNjMlVnYVdZZ0pHRndjR1Z1WkNBOVBTQndZWEpsYm5RZ2UxeHVJQ0FnSUVCaGRDMXliMjkwSUNoM2FYUm9iM1YwT2lCaGJHd3BJSHRjYmlBZ0lDQWdJQ043Sm4wamV5UnRiMlJwWm1sbFpIMGdlMXh1SUNBZ0lDQWdJQ0JBWTI5dWRHVnVkRHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUgwZ1FHVnNjMlVnZTF4dUlDQWdJQ043SkcxdlpHbG1hV1ZrZlNCN1hHNGdJQ0FnSUNCQVkyOXVkR1Z1ZER0Y2JpQWdJQ0I5WEc0Z0lIMWNibjFjYmx4dVFHMXBlR2x1SUhkcGRHZ3RZMjlzYjNJdGMyTm9aVzFsTFcxbFpHbGhLQ1JqYjJ4dmNpMXpZMmhsYldVcElIdGNiaUFnUUcxbFpHbGhJQ2h3Y21WbVpYSnpMV052Ykc5eUxYTmphR1Z0WlRvZ0kzc2tZMjlzYjNJdGMyTm9aVzFsZlNrZ2UxeHVJQ0FnSUVCamIyNTBaVzUwTzF4dUlDQjlYRzU5WEc1Y2JpOHZMeUJEYjJ4dmNpQlRZMmhsYldVZ2JXbDRhVzVjYmk4dkx5QkJiR3h2ZDNNZ2RHOGdZWEJ3YkhrZ2MzUjViR1Z6SUdKaGMyVmtJRzl1SUhSb1pTQlBVeUJrWldaaGRXeDBJR052Ykc5eUlITmphR1Z0WlNCaGJtUWdZVzRnYjNabGNuSnBaR1VnWW5rZ1lXNGdZWFIwY21saWRYUmxJSE5sYkdWamRHOXlYRzVBYldsNGFXNGdZMjlzYjNJdGMyTm9aVzFsS0Z4dUlDQWtjMmhoWkc5M09pQjBjblZsTEZ4dUlDQWtZWEJ3Wlc1a09pQnliMjkwTEZ4dUlDQWtZMjlzYjNJdGMyTm9aVzFsY3pvZ0tGeHVJQ0FnSUdSaGNtc3NYRzRnSUNBZ2JHbG5hSFFzWEc0Z0lDbGNiaWtnZTF4dUlDQkFaV0ZqYUNBa1kyOXNiM0l0YzJOb1pXMWxJR2x1SUNSamIyeHZjaTF6WTJobGJXVnpJSHRjYmlBZ0lDQXZMeUJ0WVhSamFDQjBieUJ0WldScFlTQnhkV1Z5ZVNCaWVTQlBVeUJrWldaaGRXeDBYRzRnSUNBZ1FHbHVZMngxWkdVZ2QybDBhQzFqYjJ4dmNpMXpZMmhsYldVdGJXVmthV0VvSkdOdmJHOXlMWE5qYUdWdFpTa2dlMXh1SUNBZ0lDQWdRR052Ym5SbGJuUWdLQ1JqYjJ4dmNpMXpZMmhsYldVcE8xeHVJQ0FnSUgxY2JpQWdJQ0F2THlCdFlYUmphQ0IwYnlCbGJHVnRaVzUwSUdGMGRISnBZblYwWlNCelpXeGxZM1J2Y2lCdmRtVnljbWxrWlZ4dUlDQWdJRUJwYm1Oc2RXUmxJSGRwZEdndFkyOXNiM0l0YzJOb1pXMWxMV0YwZEhKcFluVjBaU2drWTI5c2IzSXRjMk5vWlcxbExDQWtjMmhoWkc5M0xDQWtZWEJ3Wlc1a0tTQjdYRzRnSUNBZ0lDQkFZMjl1ZEdWdWRDQW9KR052Ykc5eUxYTmphR1Z0WlNrN1hHNGdJQ0FnZlZ4dUlDQjlYRzU5WEc0aVhYMD0gKi8iLCJAbWl4aW4gd2l0aC1jb2xvci1zY2hlbWUtYXR0cmlidXRlKCRjb2xvci1zY2hlbWUsICRzaGFkb3c6IHRydWUsICRhcHBlbmQ6IGZhbHNlKSB7XG4gICRtb2RpZmllcjogJ1tjb2xvci1zY2hlbWU9XCIjeyRjb2xvci1zY2hlbWV9XCJdJztcbiAgJG1vZGlmaWVkOiBpZigkc2hhZG93LCAnOmhvc3QoI3skbW9kaWZpZXJ9KScsICRtb2RpZmllcik7XG5cbiAgQGlmICRhcHBlbmQgPT0gcm9vdCB7XG4gICAgQGF0LXJvb3QgKHdpdGhvdXQ6IGFsbCkge1xuICAgICAgI3skbW9kaWZpZWR9I3smfSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgICAgfVxuICAgIH1cbiAgfSBAZWxzZSBpZiAkYXBwZW5kID09IHBhcmVudCB7XG4gICAgQGF0LXJvb3QgKHdpdGhvdXQ6IGFsbCkge1xuICAgICAgI3smfSN7JG1vZGlmaWVkfSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgICAgfVxuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgI3skbW9kaWZpZWR9IHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxufVxuXG5AbWl4aW4gd2l0aC1jb2xvci1zY2hlbWUtbWVkaWEoJGNvbG9yLXNjaGVtZSkge1xuICBAbWVkaWEgKHByZWZlcnMtY29sb3Itc2NoZW1lOiAjeyRjb2xvci1zY2hlbWV9KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8vIENvbG9yIFNjaGVtZSBtaXhpblxuLy8vIEFsbG93cyB0byBhcHBseSBzdHlsZXMgYmFzZWQgb24gdGhlIE9TIGRlZmF1bHQgY29sb3Igc2NoZW1lIGFuZCBhbiBvdmVycmlkZSBieSBhbiBhdHRyaWJ1dGUgc2VsZWN0b3JcbkBtaXhpbiBjb2xvci1zY2hlbWUoXG4gICRzaGFkb3c6IHRydWUsXG4gICRhcHBlbmQ6IHJvb3QsXG4gICRjb2xvci1zY2hlbWVzOiAoXG4gICAgZGFyayxcbiAgICBsaWdodCxcbiAgKVxuKSB7XG4gIEBlYWNoICRjb2xvci1zY2hlbWUgaW4gJGNvbG9yLXNjaGVtZXMge1xuICAgIC8vIG1hdGNoIHRvIG1lZGlhIHF1ZXJ5IGJ5IE9TIGRlZmF1bHRcbiAgICBAaW5jbHVkZSB3aXRoLWNvbG9yLXNjaGVtZS1tZWRpYSgkY29sb3Itc2NoZW1lKSB7XG4gICAgICBAY29udGVudCAoJGNvbG9yLXNjaGVtZSk7XG4gICAgfVxuICAgIC8vIG1hdGNoIHRvIGVsZW1lbnQgYXR0cmlidXRlIHNlbGVjdG9yIG92ZXJyaWRlXG4gICAgQGluY2x1ZGUgd2l0aC1jb2xvci1zY2hlbWUtYXR0cmlidXRlKCRjb2xvci1zY2hlbWUsICRzaGFkb3csICRhcHBlbmQpIHtcbiAgICAgIEBjb250ZW50ICgkY29sb3Itc2NoZW1lKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ== */`;\n", "import { html, LitElement, PropertyValues, unsafeCSS } from 'lit';\nimport { customElement, eventOptions, property } from 'lit/decorators.js';\n\nimport { Editable } from '@/mixins/editable.mixin.js';\nimport type { FormAssociated } from '@/utils/form.utils.js';\n\n// instruct esbuild to load the CSS file as a string\nimport styles from './input-checkbox.component.scss';\n\n/**\n * A checkbox input element using the wcp style. Fully form aware.\n *\n * @property {string} label - The label of the input element.\n *\n * @slot hint - Receives optional descriptions below the input.\n *\n * @cssprop --wcp-input-checkbox-size - The size of the checkbox input.\n * @cssprop --wcp-input-checkbox-hint-size - The font size of the hint.\n * @cssprop --wcp-input-checkbox-label-size - The font size of the label.\n * @cssprop --wcp-input-checkbox-spacing - The leading distance of the label to the input.\n * @cssprop --wcp-input-checkbox-border-radius - The border radius of the checkbox input.\n * @cssprop --wcp-input-checkbox-border-size - The border size of the checkbox input.\n *\n * @cssprop --wcp-input-checkbox-dark-background - The background color of the checkbox input in dark mode.\n * @cssprop --wcp-input-checkbox-dark-border - The border color of the checkbox input in dark mode.\n * @cssprop --wcp-input-checkbox-dark-color - The fill color of the checkbox input when checked in dark mode.\n *\n * @cssprop --wcp-input-checkbox-light-background - The background color of the checkbox input in light mode.\n * @cssprop --wcp-input-checkbox-light-border - The border color of the checkbox input in light mode.\n * @cssprop --wcp-input-checkbox-light-color - The fill color of the checkbox input when checked in light mode.\n *\n */\n@customElement('wcp-input-checkbox')\nexport class InputCheckbox\n  extends Editable({ hasBeforeSlot: false, hasBorder: false })(LitElement)\n  implements FormAssociated<string>\n{\n  static override readonly styles = [super.formStyles, unsafeCSS(styles)];\n\n  private initialChecked!: boolean;\n\n  @property({ type: String, reflect: true })\n  name = 'checkbox';\n\n  @property({ type: Boolean, reflect: true })\n  autocomplete = false;\n\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  @property({ type: Boolean, reflect: true })\n  checked = false;\n\n  @property({ type: Boolean, reflect: true })\n  required = false;\n\n  @property({ type: String, reflect: true })\n  value = 'on';\n\n  protected override firstUpdated(props: PropertyValues<this>): void {\n    super.firstUpdated(props);\n    this.internals.role = 'checkbox';\n    this.initialChecked = this.checked;\n  }\n\n  override attributeChangedCallback(name: string, old: string | null, value: string | null): void {\n    super.attributeChangedCallback(name, old, value);\n    if (name === 'checked') {\n      this.checked = value !== null;\n      this.checkValidity();\n\n      this.internals.ariaChecked = String(this.checked);\n      this.internals.setFormValue(this.checked ? this.value ?? null : null, null);\n    }\n  }\n\n  formResetCallback() {\n    this.checked = this.initialChecked;\n  }\n\n  checkValidity(): boolean {\n    if (this.required && !this.checked) {\n      this.internals.setValidity({ valueMissing: true }, 'Invalid input');\n    } else {\n      this.internals.setValidity({});\n    }\n\n    return this.internals.validity.valid;\n  }\n\n  @eventOptions({ passive: true })\n  handleInput(event: Event) {\n    const input = event.target as HTMLInputElement;\n    this.checked = input.checked;\n  }\n\n  override renderInput(id: string) {\n    return html`\n      <input\n        type=\"checkbox\"\n        id=\"${id}\"\n        name=\"${this.name}\"\n        autocomplete=\"${this.autocomplete ? 'on' : 'off'}\"\n        ?disabled=\"${this.disabled}\"\n        ?required=\"${this.required}\"\n        ?checked=\"${this.checked}\"\n        .value=\"${this.value}\"\n        @input=\"${this.handleInput}\"\n      />\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-input-checkbox': InputCheckbox;\n  }\n}\n", "// Safari still hasn't ElementInternals shipped\nimport 'element-internals-polyfill';\n\nimport { type CSSResultGroup, html, type LitElement, nothing, type TemplateResult, unsafeCSS } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { when } from 'lit/directives/when.js';\n\nimport { ColorSchemable, type ColorSchemableInterface } from '@/mixins/color-schemable.mixin.js';\nimport type { Constructor } from '@/utils/mixin.types.js';\n\nimport styles from './editable.mixin.scss';\n\nexport declare class EditableInterface {\n  readonly internals: ElementInternals;\n  label?: string;\n  renderInput(id: string): TemplateResult;\n  renderSlot(name: string): TemplateResult;\n}\n\nexport interface EditablePrototype {\n  formStyles: CSSResultGroup;\n  formAssociated: true;\n}\n\nexport type EditableOptions = {\n  hasHintSlot?: boolean;\n  hasBeforeSlot?: boolean;\n  hasAfterSlot?: boolean;\n  hasBorder?: boolean;\n};\n\nexport const Editable =\n  ({\n    hasHintSlot = true,\n    hasBeforeSlot = true,\n    hasAfterSlot = true,\n    hasBorder = true,\n  }: Partial<EditableOptions> = {}) =>\n  <T extends Constructor<LitElement>>(superClass: T) => {\n    class EditableElement extends ColorSchemable(superClass) {\n      static readonly formAssociated = true;\n      static readonly formStyles = unsafeCSS(styles);\n\n      readonly internals = this.attachInternals();\n\n      @property({ type: String, reflect: true })\n      label?: string;\n\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      renderInput(_: string): TemplateResult {\n        return html`${nothing}`;\n      }\n\n      renderSlot(name: string): TemplateResult {\n        return html`<slot name=\"${name}\"></slot>`;\n      }\n\n      protected override render(): TemplateResult {\n        return html`\n          ${this.renderInput('input')} ${when(this.label, () => html`<label for=\"input\">${this.label}</label>`)}\n          ${when(hasHintSlot, () => this.renderSlot('hint'))} ${when(hasBeforeSlot, () => this.renderSlot('before'))}\n          ${when(hasAfterSlot, () => this.renderSlot('after'))}\n          ${when(hasBorder, () => html`<span id=\"border\"></span>`)}\n        `;\n      }\n    }\n    return EditableElement as Constructor<EditableInterface & ColorSchemableInterface> & EditablePrototype & T;\n  };\n", "export default `:host {\n  ---wcp-editable-hint-size: var(--wcp-editable-hint-size, 0.8em);\n  ---wcp-editable-label-size: var(--wcp-editable-label-size, 0.8em);\n  ---wcp-editable-spacing: var(--wcp-editable-spacing, calc(var(--wcp-base-size, 10px) * 0.5) calc(var(--wcp-base-size, 10px) * 1));\n  ---wcp-editable-passive-border-radius: var(--wcp-editable-passive-border-radius, 2px);\n  ---wcp-editable-passive-border-size: var(--wcp-editable-passive-border-size, 1px);\n  ---wcp-editable-active-border-radius: var(--wcp-editable-active-border-radius, 2px);\n  ---wcp-editable-active-border-size: var(--wcp-editable-active-border-size, 2px);\n  ---wcp-editable-dark-background: var(--wcp-editable-dark-background, transparent);\n  ---wcp-editable-dark-border: var(--wcp-editable-dark-border, var(--wcp-color-blue-96));\n  ---wcp-editable-dark-color: var(--wcp-editable-dark-color, var(--wcp-color-grey-96));\n  ---wcp-editable-light-background: var(--wcp-editable-light-background, transparent);\n  ---wcp-editable-light-border: var(--wcp-editable-light-border, var(--wcp-color-blue-24));\n  ---wcp-editable-light-color: var(--wcp-editable-light-color, var(--wcp-color-grey-24));\n}\n\n:host {\n  display: grid;\n  grid-template-columns: min-content 1fr min-content;\n  grid-template-areas: \"above above above\" \"before center after\" \"below below below\";\n  width: 100%;\n  ---wcp-editable-border-radius: var(---wcp-editable-passive-border-radius);\n  ---wcp-editable-border-size: var(---wcp-editable-passive-border-size);\n}\n@media (prefers-color-scheme: dark) {\n  :host {\n    ---wcp-editable-background: var(---wcp-editable-dark-background);\n    ---wcp-editable-border: var(---wcp-editable-dark-border);\n    ---wcp-editable-color: var(---wcp-editable-dark-color);\n  }\n}\n:host([color-scheme=dark]):host {\n  ---wcp-editable-background: var(---wcp-editable-dark-background);\n  ---wcp-editable-border: var(---wcp-editable-dark-border);\n  ---wcp-editable-color: var(---wcp-editable-dark-color);\n}\n\n@media (prefers-color-scheme: light) {\n  :host {\n    ---wcp-editable-background: var(---wcp-editable-light-background);\n    ---wcp-editable-border: var(---wcp-editable-light-border);\n    ---wcp-editable-color: var(---wcp-editable-light-color);\n  }\n}\n:host([color-scheme=light]):host {\n  ---wcp-editable-background: var(---wcp-editable-light-background);\n  ---wcp-editable-border: var(---wcp-editable-light-border);\n  ---wcp-editable-color: var(---wcp-editable-light-color);\n}\n\n:host(:focus-within) {\n  ---wcp-editable-border-radius: var(---wcp-editable-active-border-radius);\n  ---wcp-editable-border-size: var(---wcp-editable-active-border-size);\n}\n\nlabel {\n  grid-area: above;\n  padding: var(---wcp-editable-spacing);\n  padding-left: 0;\n  padding-right: 0;\n  font-size: var(---wcp-editable-label-size);\n}\n:required ~ label::after {\n  content: \"*\";\n}\n\n#input,\n.input,\nslot[name=before],\nslot[name=after] {\n  align-self: center;\n  transition: opacity var(--wcp-fx-default-duration) ease-out;\n  will-change: opacity;\n}\n#input:disabled,\n.input:disabled,\nslot[name=before]:disabled,\nslot[name=after]:disabled {\n  opacity: 0.5;\n}\n\n#input,\n.input {\n  grid-area: center;\n  padding: var(---wcp-editable-spacing);\n}\n\nslot[name] {\n  display: block;\n}\n\nslot[name=hint] {\n  grid-area: below;\n  font-size: var(---wcp-editable-hint-size);\n}\nslot[name=hint]::slotted([slot=hint]) {\n  padding: var(---wcp-editable-spacing);\n  padding-left: 0;\n  padding-right: 0;\n  padding-bottom: 0;\n}\n\nslot[name=before] {\n  grid-area: before;\n}\n\nslot[name=after] {\n  grid-area: after;\n}\n\n#border,\n.border {\n  grid-area: before/before/after/after;\n  display: block;\n  border: var(---wcp-editable-border-size) solid var(---wcp-editable-border);\n  border-radius: var(---wcp-editable-border-radius);\n  pointer-events: none;\n  transition: var(--wcp-fx-default-duration) ease-out;\n  transition-property: border-radius, border-width, opacity;\n  will-change: border-radius, border-width, opacity;\n}\n:disabled ~ #border,\n:disabled ~ .border {\n  opacity: 0.5;\n}\n/*# sourceMappingURL=data:application/json;base64, */`;\n", "export default `:host {\n  ---wcp-input-checkbox-size: var(--wcp-input-checkbox-size, calc(var(--wcp-base-size, 10px) * 2));\n  --wcp-editable-hint-size: var(--wcp-input-checkbox-hint-size);\n  --wcp-editable-label-size: var(--wcp-input-checkbox-label-size, 1em);\n  --wcp-editable-spacing: var(--wcp-input-checkbox-spacing, calc(var(--wcp-base-size, 10px) * 1));\n  --wcp-editable-passive-border-radius: var(--wcp-input-checkbox-border-radius);\n  --wcp-editable-passive-border-size: var(--wcp-input-checkbox-border-size);\n  --wcp-editable-active-border-radius: var(--wcp-input-checkbox-border-radius);\n  --wcp-editable-active-border-size: var(--wcp-input-checkbox-border-size);\n  --wcp-editable-dark-background: var(--wcp-input-checkbox-dark-background);\n  --wcp-editable-dark-border: var(--wcp-input-checkbox-dark-border);\n  --wcp-editable-dark-color: var(--wcp-input-checkbox-dark-color);\n  --wcp-editable-light-background: var(--wcp-input-checkbox-light-background);\n  --wcp-editable-light-border: var(--wcp-input-checkbox-light-border);\n  --wcp-editable-light-color: var(--wcp-input-checkbox-light-color);\n}\n\n#input {\n  grid-area: before;\n}\n\nlabel {\n  grid-area: center;\n  padding: 0;\n}\n\n:host([checked]) {\n  position: relative;\n}\n:host([checked])::after {\n  content: \"\";\n  pointer-events: none;\n  display: block;\n  height: calc(var(---wcp-input-checkbox-size) * 0.25);\n  width: calc(var(---wcp-input-checkbox-size) * 0.5);\n  position: absolute;\n  top: calc(var(---wcp-input-checkbox-size) * 0.4);\n  right: auto;\n  bottom: auto;\n  left: calc(var(---wcp-input-checkbox-size) * 0.5);\n  transform: translate(-50%, -50%) rotate(-45deg);\n  border: solid var(---wcp-editable-color);\n  border-width: 0 0 var(---wcp-editable-border-size) var(---wcp-editable-border-size);\n  z-index: 1;\n  transition: var(--wcp-fx-default-duration) ease-out;\n  transition-property: border-width, height, inset, opacity, width;\n  will-change: border-width, height, inset, opacity, width;\n}\n\n:host([checked][disabled])::after {\n  opacity: 0.5;\n}\n\ninput {\n  all: unset;\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none;\n  cursor: pointer;\n  box-sizing: border-box;\n  display: block;\n  height: 0;\n  width: 0;\n  margin-right: var(---wcp-editable-spacing);\n  background-color: var(---wcp-editable-background);\n  outline: var(---wcp-editable-border-size) solid var(---wcp-editable-border);\n  outline-offset: calc(var(---wcp-editable-border-size) * -1);\n  border-radius: var(---wcp-editable-border-radius);\n  transition: var(--wcp-fx-default-duration) ease-out;\n  transition-property: border-radius, opacity, outline-offset, outline-width;\n  will-change: border-radius, opacity, outline-offset, outline-width;\n}\n/*# sourceMappingURL=data:application/json;base64, */`;\n", "import 'prismjs';\nimport 'lit-code';\n\nimport { html, LitElement, type PropertyValues, unsafeCSS } from 'lit';\nimport { customElement, eventOptions, property, query } from 'lit/decorators.js';\nimport type { LitCode } from 'lit-code';\n\nimport { Editable } from '@/mixins/editable.mixin.js';\nimport type { FormAssociated } from '@/utils/form.utils.js';\n\n// instruct esbuild to load the CSS file as a string\nimport styles from './input-code.component.scss';\n\n/**\n * A text input element using the wcp style. Fully form aware.\n * Can display multiline text (textarea) if configured to do so.\n *\n * @property {string} label - The label of the input element.\n *\n * @slot hint - Receives optional descriptions below the input.\n *\n * @cssprop --wcp-input-code-hint-size - The font size of the hint.\n * @cssprop --wcp-input-code-label-size - The font size of the label.\n * @cssprop --wcp-input-code-spacing - The inner spacing of the input element.\n * @cssprop --wcp-input-code-border-radius - The border radius of the input element.\n * @cssprop --wcp-input-code-border-size - The border size of the input element.\n *\n * @cssprop --wcp-input-code-dark-background - The background color of the element in dark mode.\n * @cssprop --wcp-input-code-dark-border - The border color of the element in dark mode.\n * @cssprop --wcp-input-code-dark-color - The font color of the input element in dark mode.\n * @cssprop --wcp-input-code-dark-background-lines - The background color of the line numbers in dark mode.\n *\n * @cssprop --wcp-input-code-light-background - The background color of the element in light mode.\n * @cssprop --wcp-input-code-light-border - The border color of the element in light mode.\n * @cssprop --wcp-input-code-light-color - The font color of the input element in light mode.\n * @cssprop --wcp-input-code-light-background-lines - The background color of the line numbers in light mode.\n *\n */\n@customElement('wcp-input-code')\nexport class InputCode extends Editable()(LitElement) implements FormAssociated<string> {\n  static override readonly shadowRootOptions = { ...super.shadowRootOptions, delegatesFocus: true };\n  static override readonly styles = [super.formStyles, unsafeCSS(styles)];\n\n  #initialValue?: string;\n\n  @query('lit-code')\n  private readonly editor?: LitCode;\n\n  @property({ type: Boolean, reflect: true })\n  autosize = false;\n\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  @property({ type: Boolean, reflect: true })\n  required = false;\n\n  @property({ type: String, reflect: true })\n  name = 'text';\n\n  @property({ type: String, reflect: true })\n  language = 'html' as const;\n\n  @property({ type: String, reflect: true, noAccessor: true })\n  set value(value: string | undefined) {\n    value = value ?? '';\n    // pass to inner editor but prevent event dispatching\n    this.editor?.setCode(value);\n\n    // update the form state\n    this.internals.setFormValue(value);\n    this.checkValidity();\n  }\n  get value(): string | undefined {\n    return this.editor?.getCode();\n  }\n\n  protected override firstUpdated(props: PropertyValues<this>): void {\n    super.firstUpdated(props);\n    this.#initialValue = this.value;\n  }\n\n  formResetCallback() {\n    this.value = this.#initialValue;\n  }\n\n  checkValidity(): boolean {\n    if (this.required && !this.value) {\n      this.internals.setValidity({ valueMissing: true }, 'Invalid input');\n    } else {\n      this.internals.setValidity({});\n    }\n\n    return this.internals.validity.valid;\n  }\n\n  @eventOptions({ passive: true })\n  handleInput(event: InputEvent) {\n    // update the form state\n    const { code } = event.target as LitCode;\n    this.internals.setFormValue(code);\n    this.checkValidity();\n\n    // re-dispatch input event, but now the target has a value (namely mine!)\n    this.dispatchEvent(new InputEvent(event.type, event));\n  }\n\n  override renderInput(id: string) {\n    return html`\n      <lit-code id=\"${id}\" linenumbers language=\"${this.language}\" @input=\"${this.handleInput}\"></lit-code>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-input-code': InputCode;\n  }\n}\n", "import{css as e,LitElement as t,html as o}from\"lit\";var i=e`:host{display:block}:host{--font-family:monospace;--font-size:12pt;--line-height:14pt;--lines-width:40px;--editor-bg-color:#fff;--editor-text-color:#000;--editor-caret-color:var(--editor-text-color);--editor-sel-color:#b9ecff;--lines-bg-color:#eee;--lines-text-color:#000;--scroll-track-color:#aaa;--scroll-thumb-color:#eee;--hl-color-string:#00ae22;--hl-color-function:#004eff;--hl-color-number:#dd9031;--hl-color-operator:#5a5a5a;--hl-color-class-name:#3cabb6;--hl-color-punctuation:#4a4a4a;--hl-color-keyword:#8500ff;--hl-color-comment:#aaa;--hl-color-tag:#3a9bca;--hl-color-selector:#3a9bca;--hl-color-property:#713aca;height:100%;max-height:inherit;max-width:inherit;width:100%}.litcode{border-radius:inherit;display:grid;font-family:var(--font-family);font-size:var(--font-size);grid-template-columns:var(--lines-width) auto;height:100%;line-height:var(--line-height);max-height:inherit;max-width:inherit;overflow:auto;position:relative}.litcode :is(.litcode_textarea,.litcode_highlight){box-sizing:border-box;grid-column:1/3;grid-row:1;height:100%;height:calc(var(--height) + 100% - var(--line-height)*4);width:100%}.litcode .litcode_linenumbers~:is(.litcode_textarea,.litcode_highlight){grid-column:2;grid-row:1}.litcode :is(.litcode_textarea,.litcode_linenumbers,.litcode_highlight){padding:4px}.litcode .litcode_linenumbers{background-color:var(--lines-bg-color);box-sizing:border-box;color:var(--lines-text-color);height:100%;left:0;padding-right:1px;position:-webkit-sticky;position:sticky;text-align:right;-webkit-user-select:none;-moz-user-select:none;user-select:none}.litcode .litcode_textarea{background-color:var(--editor-bg-color);border:none;caret-color:var(--editor-caret-color);color:transparent;font:inherit;height:100%;margin:0;outline:none;resize:none;white-space:pre}.litcode .litcode_textarea::-moz-selection{background-color:var(--editor-sel-color)}.litcode .litcode_textarea::selection{background-color:var(--editor-sel-color)}.litcode .litcode_highlight{color:var(--editor-text-color);height:100%;pointer-events:none;width:100%}.litcode .litcode_highlight>pre{margin:0}.litcode::-webkit-scrollbar{height:10px;width:10px}.litcode::-webkit-scrollbar-track{background-color:var(--scroll-track-color);border-radius:8px}.litcode::-webkit-scrollbar-thumb{background-color:var(--scroll-thumb-color);border-radius:8px}.litcode::-webkit-scrollbar-corner{background-color:var(--scroll-track-color)}.litcode[default] .token.string{color:var(--hl-color-string)}.litcode[default] .token.function{color:var(--hl-color-function)}.litcode[default] .token.number{color:var(--hl-color-number)}.litcode[default] .token.operator{color:var(--hl-color-operator)}.litcode[default] .token.class-name{color:var(--hl-color-class-name)}.litcode[default] .token.punctuation{color:var(--hl-color-punctuation)}.litcode[default] .token.keyword{color:var(--hl-color-keyword)}.litcode[default] .token.comment{color:var(--hl-color-comment)}.litcode[default] .token.tag{color:var(--hl-color-tag)}.litcode[default] .token.selector{color:var(--hl-color-selector)}.litcode[default] .token.property{color:var(--hl-color-property)}`;const r=\"undefined\"!=typeof Prism;function l(e){return\"string\"==typeof e?o`${e}`:o`<span class=\"token ${e.type} ${e.alias}\">${Array.isArray(e.content)?e.content.map(l):o`${e.content}`}</span>`}customElements.define(\"lit-code\",class extends t{static get styles(){return i}static get properties(){return{code:{type:String},grammar:{type:Object},language:{type:String},noshadow:{attribute:!0},linenumbers:{attribute:!0}}}get shadowDom(){return!this.hasAttribute(\"noshadow\")}constructor(){super(),this.opening=[\"(\",\"{\",\"[\",\"'\",'\"'],this.closing=[\")\",\"}\",\"]\",\"'\",'\"'],this.code=\"\",this.indent=\"  \",this.language=\"clike\",r&&(this.grammar=Prism.languages[this.language])}update(e){if(super.update(e),r&&e.has(\"language\")){const e=Prism.languages[this.language.toLowerCase()];if(void 0===e)throw new Error(\"Unsupported Prism language\");this.grammar=e}}_getElement(e){return this.shadowDom?this.shadowRoot.querySelector(`.litcode_${e}`):this.querySelector(`.litcode_${e}`)}firstUpdated(){this.elTextarea=this._getElement(\"textarea\"),this.elContainer=this._getElement(\"litcode\"),this.updateTextarea()}render(){return o` ${this.shadowDom?o``:o`<style>${i.cssText}</style>`} <div class=\"litcode litcode_litcode\" ?default=\"${!this.hasAttribute(\"mycolors\")}\"> ${this.hasAttribute(\"linenumbers\")?o` <div class=\"litcode_linenumbers\"> <div class=\"litcode_line\">1</div> ${(this.code.match(/\\r?\\n/g)||[]).map(((e,t)=>o` <div class=\"litcode_line\">${t+2}</div> `))} </div> `:o``} <textarea class=\"litcode_textarea\" spellcheck=\"false\" @keydown=\"${this.handleKeys}\" @input=\"${this.handleInput}\"></textarea> <code class=\"litcode_highlight\"><pre>${r?Prism.tokenize(this.code,this.grammar).map(l):o`${this.code}`}</pre></code> </div> `}setCode(e){this.code=e,this.updateTextarea()}getCode(){return this.code}createRenderRoot(){return this.shadowDom?super.createRenderRoot():this}setCursor(e){this.elTextarea.setSelectionRange(e,e)}setSelect(e,t){this.elTextarea.setSelectionRange(e,t)}getCurrentLineIndent(){const e=this.elTextarea.selectionStart,t=this.elTextarea.selectionEnd,o=this.code.lastIndexOf(\"\\n\",e-1)+1,i=(()=>{let e=o;for(;\" \"===this.code[e]&&e<t;)e++;return e-o})();return\" \".repeat(i)}updateTextarea(){this.elTextarea&&(this.elTextarea.value=this.code,this.dispatchEvent(new CustomEvent(\"update\",{detail:this.code})))}insertCode(e,t,o=!0){this.code=this.code.substring(0,e)+t+this.code.substring(e),this.updateTextarea(),o&&this.setCursor(e+t.length)}replaceCode(e,t,o=\"\",i=!0){this.code=this.code.substring(0,e)+o+this.code.substring(t),this.updateTextarea(),i&&this.setCursor(e+o.length)}handleKeys(e){switch(e.code){case\"Tab\":this.handleTabs(e);break;case\"Enter\":this.handleNewLine(e);break;case\"Backspace\":this.handleBackspace(e);break;default:this.opening.includes(e.key)?this.handleAutoClose(e):this.closing.includes(e.key)&&this.handleAutoSkip(e)}}handleInput({target:e}){this.code=e.value,this.dispatchEvent(new CustomEvent(\"update\",{detail:this.code}))}handleTabs(e){e.preventDefault();const t=this.elTextarea.selectionStart,o=this.elTextarea.selectionEnd;if(t!==o){const i=Math.max(0,this.code.lastIndexOf(\"\\n\",t-1)),r=Math.max(this.code.indexOf(\"\\n\",o),o);let l=0,s=this.code.substring(i,r),n=this.indent.length;0===i&&(s=\"\\n\"+s),e.shiftKey?(n=-n,l=(s.match(new RegExp(\"\\n\"+this.indent,\"g\"))||[]).length,s=s.replaceAll(\"\\n\"+this.indent,\"\\n\")):(l=(s.match(/\\n/g)||[]).length,s=s.replaceAll(\"\\n\",\"\\n\"+this.indent)),0===i&&(s=s.replace(/^\\n/,\"\")),this.replaceCode(i,r,s,!1);const a=Math.max(i+1,t+n),c=o+l*n;this.setSelect(a,c)}else this.insertCode(t,this.indent,!0)}handleBackspace(e){const t=this.elTextarea.selectionStart,o=this.elTextarea.selectionEnd;if(e.ctrlKey||t!==o)return;e.preventDefault();const i=this.code[t-1],r=this.code[t],l=this.opening.includes(i)&&this.closing.includes(r),s=this.closing[this.opening.indexOf(i)]===r;if(l&&s)this.replaceCode(t-1,t+1);else{const e=t-this.indent.length,o=t;this.code.substring(e,o)===this.indent?this.replaceCode(e,o):this.replaceCode(t-1,t)}}handleAutoClose(e){const t=this.elTextarea.selectionStart,o=this.elTextarea.selectionEnd;if(\"'\"===this.code[t]||'\"'===this.code[t])return this.handleAutoSkip(e);if(e.preventDefault(),t===o){const o=e.key,i=this.closing[this.opening.indexOf(o)];if(\"{\"!==o||\"\\n\"!==this.code[t]&&this.code.length!==t)this.insertCode(t,o+i),this.setCursor(t+1);else{const e=\"\\n\"+this.getCurrentLineIndent();this.insertCode(t,o+e+this.indent+e+i),this.setCursor(t+e.length+this.indent.length+1)}}}handleAutoSkip(e){const t=this.elTextarea.selectionStart;this.code[t]===e.key&&(e.preventDefault(),this.setCursor(t+1))}handleNewLine(e){e.preventDefault(),this.insertCode(this.elTextarea.selectionStart,\"\\n\"+this.getCurrentLineIndent()),this.elTextarea.selectionStart===this.code.length&&(this.elContainer.scrollTop=this.elContainer.scrollHeight)}});\n", "export default `:host {\n  --wcp-editable-hint-size: var(--wcp-input-code-hint-size);\n  --wcp-editable-label-size: var(--wcp-input-code-label-size);\n  --wcp-editable-spacing: var(--wcp-input-code-spacing);\n  --wcp-editable-passive-border-radius: var(--wcp-input-code-border-radius);\n  --wcp-editable-passive-border-size: var(--wcp-input-code-border-size);\n  --wcp-editable-active-border-radius: var(--wcp-input-code-border-radius);\n  --wcp-editable-active-border-size: var(--wcp-input-code-border-size);\n  --wcp-editable-dark-background: var(--wcp-input-code-dark-background);\n  --wcp-editable-dark-border: var(--wcp-input-code-dark-border);\n  --wcp-editable-dark-color: var(--wcp-input-code-dark-color);\n  --wcp-editable-light-background: var(--wcp-input-code-light-background);\n  --wcp-editable-light-border: var(--wcp-input-code-light-border);\n  --wcp-editable-light-color: var(--wcp-input-code-light-color);\n  ---wcp-input-code-dark-background-lines: var(--wcp-input-code-dark-background-lines, hsl(var(--wcp-color-blue-96-raw) / .1));\n  ---wcp-input-code-light-background-lines: var(--wcp-input-code-dark-background-lines, hsl(var(--wcp-color-blue-24-raw) / .15));\n}\n\n@media (prefers-color-scheme: dark) {\n  :host {\n    ---wcp-input-code-background-lines: var(---wcp-input-code-dark-background-lines);\n  }\n}\n:host([color-scheme=dark]):host {\n  ---wcp-input-code-background-lines: var(---wcp-input-code-dark-background-lines);\n}\n\n@media (prefers-color-scheme: light) {\n  :host {\n    ---wcp-input-code-background-lines: var(---wcp-input-code-light-background-lines);\n  }\n}\n:host([color-scheme=light]):host {\n  ---wcp-input-code-background-lines: var(---wcp-input-code-light-background-lines);\n}\n\nlit-code {\n  --editor-bg-color: var(---wcp-editable-background);\n  --editor-text-color: var(---wcp-editable-color);\n  --lines-bg-color: var(---wcp-input-code-background-lines);\n  --lines-text-color: var(---wcp-editable-color);\n  --scroll-track-color: inherit;\n  --scroll-thumb-color: var(---wcp-editable-color);\n  grid-area: center;\n  aspect-ratio: 16/9;\n  box-sizing: border-box;\n  border-radius: var(---wcp-editable-border-radius);\n  max-height: 200px;\n  padding: 0 !important;\n  width: 100%;\n  transition: opacity var(--wcp-fx-default-duration) ease-out;\n  will-change: opacity;\n}\n:host([autosize]) lit-code {\n  aspect-ratio: unset;\n  height: auto;\n  height: var(---wcp-input-code-height, auto);\n  min-height: 28px;\n}\n:host([disabled]) lit-code {\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n#internal {\n  display: none;\n}\n/*# sourceMappingURL=data:application/json;base64, */`;\n", "import { html, LitElement, PropertyValues, unsafeCSS } from 'lit';\nimport { customElement, eventOptions, property } from 'lit/decorators.js';\n\nimport { Editable } from '@/mixins/editable.mixin.js';\nimport type { FormAssociated } from '@/utils/form.utils.js';\n\n// instruct esbuild to load the CSS file as a string\nimport styles from './input-key-value.component.scss';\n\n/**\n * A key-value input element using the wcp style. Fully form aware.\n *\n * @property {string} label - The label of the input element.\n * @cssprop --wcp-input-key-value-gutter - The gutter between the key-value pair inputs.\n * @slot hint - Receives optional descriptions below the input.\n *\n */\n@customElement('wcp-input-key-value')\nexport class InputKeyValue\n  extends Editable({ hasBeforeSlot: false, hasBorder: false })(LitElement)\n  implements FormAssociated<string>\n{\n  static override readonly styles = [super.formStyles, unsafeCSS(styles)];\n\n  #value?: string;\n\n  #initialName?: string;\n  #initialValue?: string;\n\n  @property({ type: Boolean, reflect: true })\n  autocomplete = false;\n\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  @property({ type: Boolean, reflect: true })\n  required = false;\n\n  @property({ type: String, reflect: true })\n  name?: string;\n\n  @property({ type: String, reflect: true, noAccessor: true })\n  set value(value: string | undefined) {\n    const oldValue = this.#value;\n    this.#value = value;\n    this.internals.setFormValue(value ?? null);\n    this.checkValidity();\n    this.requestUpdate('value', oldValue);\n  }\n  get value(): string | undefined {\n    return this.#value;\n  }\n\n  protected override firstUpdated(props: PropertyValues<this>): void {\n    super.firstUpdated(props);\n    this.#initialName = this.name;\n    this.#initialValue = this.#value;\n  }\n\n  formResetCallback() {\n    this.name = this.#initialName;\n    this.value = this.#initialValue;\n  }\n\n  checkValidity(): boolean {\n    if (this.required && (!this.name || !this.#value)) {\n      this.internals.setValidity({ valueMissing: true }, 'Invalid input');\n    } else {\n      this.internals.setValidity({});\n    }\n\n    return this.internals.validity.valid;\n  }\n\n  @eventOptions({ passive: true })\n  handleKeyInput(event: InputEvent) {\n    // update internal value\n    const { value } = event.target as HTMLInputElement;\n    this.name = value ?? undefined;\n  }\n\n  @eventOptions({ passive: true })\n  handleValueInput(event: InputEvent) {\n    // update internal value\n    const { value } = event.target as HTMLInputElement;\n    this.value = value ?? undefined;\n  }\n\n  override renderInput(id: string) {\n    return html`\n      <input\n        type=\"text\"\n        id=\"${id}\"\n        name=\"${this.name}-key\"\n        autocomplete=\"${this.autocomplete ? 'on' : 'off'}\"\n        ?disabled=\"${this.disabled}\"\n        ?required=\"${this.required}\"\n        .value=\"${this.name ?? ''}\"\n        @input=\"${this.handleKeyInput}\"\n      />\n      <span id=\"border\"></span>\n\n      <input\n        type=\"text\"\n        class=\"${id}\"\n        name=\"${this.name}-value\"\n        autocomplete=\"${this.autocomplete ? 'on' : 'off'}\"\n        ?disabled=\"${this.disabled || ['', undefined].includes(this.name)}\"\n        ?required=\"${this.required}\"\n        .value=\"${this.value ?? ''}\"\n        @input=\"${this.handleValueInput}\"\n      />\n      <span class=\"border\"></span>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-input-key-value': InputKeyValue;\n  }\n}\n", "export default `:host {\n  ---wcp-input-key-value-gutter: var(--wcp-input-key-value-gutter, calc(var(--wcp-base-size, 10px) * 1));\n}\n\n:host {\n  grid-template-columns: 1fr 1fr min-content;\n  gap: 0 var(---wcp-input-key-value-gutter);\n}\n\ninput {\n  all: unset;\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none;\n  box-sizing: border-box;\n  width: 100%;\n  color: var(---wcp-input-text-color);\n  text-align: left;\n}\n\n#input,\n#border {\n  grid-area: before;\n}\n\n.input,\n.border {\n  grid-area: center;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2NsaWVudC9jbGllbnQvc3JjL2NvbXBvbmVudHMvZm9ybXMvaW5wdXQta2V5LXZhbHVlL2lucHV0LWtleS12YWx1ZS5jb21wb25lbnQuc2NzcyIsIjpob3N0JTIwJTdCJTBBJTIwJTIwLS0td2NwLWlucHV0LWtleS12YWx1ZS1ndXR0ZXI6JTIwdmFyKC0td2NwLWlucHV0LWtleS12YWx1ZS1ndXR0ZXIsJTIwY2FsYyh2YXIoLS13Y3AtYmFzZS1zaXplLCUyMDEwcHgpJTIwKiUyMDEpKTslMEElN0QlMEElMEE6aG9zdCUyMCU3QiUwQSUyMCUyMGdyaWQtdGVtcGxhdGUtY29sdW1uczolMjAxZnIlMjAxZnIlMjBtaW4tY29udGVudDslMEElMjAlMjBnYXA6JTIwMCUyMHZhcigtLS13Y3AtaW5wdXQta2V5LXZhbHVlLWd1dHRlcik7JTBBJTdEJTBBJTBBaW5wdXQlMjAlN0IlMEElMjAlMjBhbGw6JTIwdW5zZXQ7JTBBJTIwJTIwYXBwZWFyYW5jZTolMjBub25lOyUwQSUyMCUyMGJveC1zaXppbmc6JTIwYm9yZGVyLWJveDslMEElMjAlMjB3aWR0aDolMjAxMDAlMjU7JTBBJTIwJTIwY29sb3I6JTIwdmFyKC0tLXdjcC1pbnB1dC10ZXh0LWNvbG9yKTslMEElMjAlMjB0ZXh0LWFsaWduOiUyMGxlZnQ7JTBBJTdEJTBBJTBBJTIzaW5wdXQsJTBBJTIzYm9yZGVyJTIwJTdCJTBBJTIwJTIwZ3JpZC1hcmVhOiUyMGJlZm9yZTslMEElN0QlMEElMEEuaW5wdXQsJTBBLmJvcmRlciUyMCU3QiUwQSUyMCUyMGdyaWQtYXJlYTolMjBjZW50ZXI7JTBBJTdEJTBBLyolMjMlMjBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZTYjI5MElqb2lMMmh2YldVdmNuVnVibVZ5TDNkdmNtc3ZZMnhwWlc1MEwyTnNhV1Z1ZEM5emNtTXZZMjl0Y0c5dVpXNTBjeTltYjNKdGN5OXBibkIxZEMxclpYa3RkbUZzZFdVaUxDSnpiM1Z5WTJWeklqcGJJbWx1Y0hWMExXdGxlUzEyWVd4MVpTNWpiMjF3YjI1bGJuUXVjMk56Y3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGRlFUdEZRVU5GT3pzN1FVRkhSanRGUVVORk8wVkJRMEU3T3p0QlFVZEdPMFZCUTBVN1JVRkRRVHRGUVVOQk8wVkJSVUU3UlVGRFFUdEZRVU5CT3pzN1FVRkhSanRCUVVGQk8wVkJSVVU3T3p0QlFVZEdPMEZCUVVFN1JVRkZSU0lzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWtCMWMyVWdKMEF2YzNSNWJHVnpMM1YwYVd4ekp5QmhjeUIxZEdsc2N6dGNibHh1T21odmMzUWdlMXh1SUNBdExTMTNZM0F0YVc1d2RYUXRhMlY1TFhaaGJIVmxMV2QxZEhSbGNqb2dkbUZ5S0MwdGQyTndMV2x1Y0hWMExXdGxlUzEyWVd4MVpTMW5kWFIwWlhJc0lDTjdkWFJwYkhNdWMybDZaU2d4S1gwcE8xeHVmVnh1WEc0NmFHOXpkQ0I3WEc0Z0lHZHlhV1F0ZEdWdGNHeGhkR1V0WTI5c2RXMXVjem9nTVdaeUlERm1jaUJ0YVc0dFkyOXVkR1Z1ZER0Y2JpQWdaMkZ3T2lBd0lIWmhjaWd0TFMxM1kzQXRhVzV3ZFhRdGEyVjVMWFpoYkhWbExXZDFkSFJsY2lrN1hHNTlYRzVjYm1sdWNIVjBJSHRjYmlBZ1lXeHNPaUIxYm5ObGREdGNiaUFnWVhCd1pXRnlZVzVqWlRvZ2JtOXVaVHRjYmlBZ1ltOTRMWE5wZW1sdVp6b2dZbTl5WkdWeUxXSnZlRHRjYmx4dUlDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ1kyOXNiM0k2SUhaaGNpZ3RMUzEzWTNBdGFXNXdkWFF0ZEdWNGRDMWpiMnh2Y2lrN1hHNGdJSFJsZUhRdFlXeHBaMjQ2SUd4bFpuUTdYRzU5WEc1Y2JpTnBibkIxZEN4Y2JpTmliM0prWlhJZ2UxeHVJQ0JuY21sa0xXRnlaV0U2SUdKbFptOXlaVHRjYm4xY2JseHVMbWx1Y0hWMExGeHVMbUp2Y21SbGNpQjdYRzRnSUdkeWFXUXRZWEpsWVRvZ1kyVnVkR1Z5TzF4dWZWeHVJbDE5JTIwKiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNFLHNHQUFBO0FDREY7O0FESUE7RUFDRSwwQ0FBQTtFQUNBLHlDQUFBO0FDREY7O0FESUE7RUFDRSxVQUFBO0VBQ0Esd0JBQUE7S0FBQSxxQkFBQTtVQUFBLGdCQUFBO0VBQ0Esc0JBQUE7RUFFQSxXQUFBO0VBQ0EsbUNBQUE7RUFDQSxnQkFBQTtBQ0ZGOztBREtBOztFQUVFLGlCQUFBO0FDRkY7O0FES0E7O0VBRUUsaUJBQUE7QUNGRiIsImZpbGUiOiI6aG9zdCB7XG4gIC0tLXdjcC1pbnB1dC1rZXktdmFsdWUtZ3V0dGVyOiB2YXIoLS13Y3AtaW5wdXQta2V5LXZhbHVlLWd1dHRlciwgY2FsYyh2YXIoLS13Y3AtYmFzZS1zaXplLCAxMHB4KSAqIDEpKTtcbn1cblxuOmhvc3Qge1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgbWluLWNvbnRlbnQ7XG4gIGdhcDogMCB2YXIoLS0td2NwLWlucHV0LWtleS12YWx1ZS1ndXR0ZXIpO1xufVxuXG5pbnB1dCB7XG4gIGFsbDogdW5zZXQ7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHdpZHRoOiAxMDAlO1xuICBjb2xvcjogdmFyKC0tLXdjcC1pbnB1dC10ZXh0LWNvbG9yKTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuI2lucHV0LFxuI2JvcmRlciB7XG4gIGdyaWQtYXJlYTogYmVmb3JlO1xufVxuXG4uaW5wdXQsXG4uYm9yZGVyIHtcbiAgZ3JpZC1hcmVhOiBjZW50ZXI7XG59XG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWU2IyOTBJam9pTDJodmJXVXZjblZ1Ym1WeUwzZHZjbXN2WTJ4cFpXNTBMMk5zYVdWdWRDOXpjbU12WTI5dGNHOXVaVzUwY3k5bWIzSnRjeTlwYm5CMWRDMXJaWGt0ZG1Gc2RXVWlMQ0p6YjNWeVkyVnpJanBiSW1sdWNIVjBMV3RsZVMxMllXeDFaUzVqYjIxd2IyNWxiblF1YzJOemN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkZRVHRGUVVORk96czdRVUZIUmp0RlFVTkZPMFZCUTBFN096dEJRVWRHTzBWQlEwVTdSVUZEUVR0RlFVTkJPMFZCUlVFN1JVRkRRVHRGUVVOQk96czdRVUZIUmp0QlFVRkJPMFZCUlVVN096dEJRVWRHTzBGQlFVRTdSVUZGUlNJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYklrQjFjMlVnSjBBdmMzUjViR1Z6TDNWMGFXeHpKeUJoY3lCMWRHbHNjenRjYmx4dU9taHZjM1FnZTF4dUlDQXRMUzEzWTNBdGFXNXdkWFF0YTJWNUxYWmhiSFZsTFdkMWRIUmxjam9nZG1GeUtDMHRkMk53TFdsdWNIVjBMV3RsZVMxMllXeDFaUzFuZFhSMFpYSXNJQ043ZFhScGJITXVjMmw2WlNneEtYMHBPMXh1ZlZ4dVhHNDZhRzl6ZENCN1hHNGdJR2R5YVdRdGRHVnRjR3hoZEdVdFkyOXNkVzF1Y3pvZ01XWnlJREZtY2lCdGFXNHRZMjl1ZEdWdWREdGNiaUFnWjJGd09pQXdJSFpoY2lndExTMTNZM0F0YVc1d2RYUXRhMlY1TFhaaGJIVmxMV2QxZEhSbGNpazdYRzU5WEc1Y2JtbHVjSFYwSUh0Y2JpQWdZV3hzT2lCMWJuTmxkRHRjYmlBZ1lYQndaV0Z5WVc1alpUb2dibTl1WlR0Y2JpQWdZbTk0TFhOcGVtbHVaem9nWW05eVpHVnlMV0p2ZUR0Y2JseHVJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdZMjlzYjNJNklIWmhjaWd0TFMxM1kzQXRhVzV3ZFhRdGRHVjRkQzFqYjJ4dmNpazdYRzRnSUhSbGVIUXRZV3hwWjI0NklHeGxablE3WEc1OVhHNWNiaU5wYm5CMWRDeGNiaU5pYjNKa1pYSWdlMXh1SUNCbmNtbGtMV0Z5WldFNklHSmxabTl5WlR0Y2JuMWNibHh1TG1sdWNIVjBMRnh1TG1KdmNtUmxjaUI3WEc0Z0lHZHlhV1F0WVhKbFlUb2dZMlZ1ZEdWeU8xeHVmVnh1SWwxOSAqIiwic291cmNlc0NvbnRlbnQiOlsiQHVzZSAnQC9zdHlsZXMvdXRpbHMnIGFzIHV0aWxzO1xuXG46aG9zdCB7XG4gIC0tLXdjcC1pbnB1dC1rZXktdmFsdWUtZ3V0dGVyOiB2YXIoLS13Y3AtaW5wdXQta2V5LXZhbHVlLWd1dHRlciwgI3t1dGlscy5zaXplKDEpfSk7XG59XG5cbjpob3N0IHtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIG1pbi1jb250ZW50O1xuICBnYXA6IDAgdmFyKC0tLXdjcC1pbnB1dC1rZXktdmFsdWUtZ3V0dGVyKTtcbn1cblxuaW5wdXQge1xuICBhbGw6IHVuc2V0O1xuICBhcHBlYXJhbmNlOiBub25lO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXG4gIHdpZHRoOiAxMDAlO1xuICBjb2xvcjogdmFyKC0tLXdjcC1pbnB1dC10ZXh0LWNvbG9yKTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuI2lucHV0LFxuI2JvcmRlciB7XG4gIGdyaWQtYXJlYTogYmVmb3JlO1xufVxuXG4uaW5wdXQsXG4uYm9yZGVyIHtcbiAgZ3JpZC1hcmVhOiBjZW50ZXI7XG59XG4iLCI6aG9zdCB7XG4gIC0tLXdjcC1pbnB1dC1rZXktdmFsdWUtZ3V0dGVyOiB2YXIoLS13Y3AtaW5wdXQta2V5LXZhbHVlLWd1dHRlciwgY2FsYyh2YXIoLS13Y3AtYmFzZS1zaXplLCAxMHB4KSAqIDEpKTtcbn1cblxuOmhvc3Qge1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgbWluLWNvbnRlbnQ7XG4gIGdhcDogMCB2YXIoLS0td2NwLWlucHV0LWtleS12YWx1ZS1ndXR0ZXIpO1xufVxuXG5pbnB1dCB7XG4gIGFsbDogdW5zZXQ7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHdpZHRoOiAxMDAlO1xuICBjb2xvcjogdmFyKC0tLXdjcC1pbnB1dC10ZXh0LWNvbG9yKTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuI2lucHV0LFxuI2JvcmRlciB7XG4gIGdyaWQtYXJlYTogYmVmb3JlO1xufVxuXG4uaW5wdXQsXG4uYm9yZGVyIHtcbiAgZ3JpZC1hcmVhOiBjZW50ZXI7XG59XG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWU2IyOTBJam9pTDJodmJXVXZjblZ1Ym1WeUwzZHZjbXN2WTJ4cFpXNTBMMk5zYVdWdWRDOXpjbU12WTI5dGNHOXVaVzUwY3k5bWIzSnRjeTlwYm5CMWRDMXJaWGt0ZG1Gc2RXVWlMQ0p6YjNWeVkyVnpJanBiSW1sdWNIVjBMV3RsZVMxMllXeDFaUzVqYjIxd2IyNWxiblF1YzJOemN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkZRVHRGUVVORk96czdRVUZIUmp0RlFVTkZPMFZCUTBFN096dEJRVWRHTzBWQlEwVTdSVUZEUVR0RlFVTkJPMFZCUlVFN1JVRkRRVHRGUVVOQk96czdRVUZIUmp0QlFVRkJPMFZCUlVVN096dEJRVWRHTzBGQlFVRTdSVUZGUlNJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYklrQjFjMlVnSjBBdmMzUjViR1Z6TDNWMGFXeHpKeUJoY3lCMWRHbHNjenRjYmx4dU9taHZjM1FnZTF4dUlDQXRMUzEzWTNBdGFXNXdkWFF0YTJWNUxYWmhiSFZsTFdkMWRIUmxjam9nZG1GeUtDMHRkMk53TFdsdWNIVjBMV3RsZVMxMllXeDFaUzFuZFhSMFpYSXNJQ043ZFhScGJITXVjMmw2WlNneEtYMHBPMXh1ZlZ4dVhHNDZhRzl6ZENCN1hHNGdJR2R5YVdRdGRHVnRjR3hoZEdVdFkyOXNkVzF1Y3pvZ01XWnlJREZtY2lCdGFXNHRZMjl1ZEdWdWREdGNiaUFnWjJGd09pQXdJSFpoY2lndExTMTNZM0F0YVc1d2RYUXRhMlY1TFhaaGJIVmxMV2QxZEhSbGNpazdYRzU5WEc1Y2JtbHVjSFYwSUh0Y2JpQWdZV3hzT2lCMWJuTmxkRHRjYmlBZ1lYQndaV0Z5WVc1alpUb2dibTl1WlR0Y2JpQWdZbTk0TFhOcGVtbHVaem9nWW05eVpHVnlMV0p2ZUR0Y2JseHVJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdZMjlzYjNJNklIWmhjaWd0TFMxM1kzQXRhVzV3ZFhRdGRHVjRkQzFqYjJ4dmNpazdYRzRnSUhSbGVIUXRZV3hwWjI0NklHeGxablE3WEc1OVhHNWNiaU5wYm5CMWRDeGNiaU5pYjNKa1pYSWdlMXh1SUNCbmNtbGtMV0Z5WldFNklHSmxabTl5WlR0Y2JuMWNibHh1TG1sdWNIVjBMRnh1TG1KdmNtUmxjaUI3WEc0Z0lHZHlhV1F0WVhKbFlUb2dZMlZ1ZEdWeU8xeHVmVnh1SWwxOSAqLyJdfQ== */`;\n", "import { html, LitElement, PropertyValues, unsafeCSS } from 'lit';\nimport { customElement, eventOptions, property, query } from 'lit/decorators.js';\nimport { map } from 'lit/directives/map.js';\nimport { when } from 'lit/directives/when.js';\n\nimport { Editable } from '@/mixins/editable.mixin.js';\nimport type { FormAssociated } from '@/utils/form.utils.js';\n\n// instruct esbuild to load the CSS file as a string\nimport styles from './input-key-value-pairs.component.scss';\n\n/**\n * A key-value pairs editor. Integrates into forms and allows editing string based form data.\n *\n * @property {string} label - The label of the input element.\n * @cssprop --wcp-input-key-value-pairs-gutter - The gutter between the key-value pair inputs.\n * @slot hint - Receives optional descriptions below the input.\n *\n */\n@customElement('wcp-input-key-value-pairs')\nexport class InputKeyValuePairs\n  extends Editable({ hasBeforeSlot: false, hasAfterSlot: false, hasBorder: false })(LitElement)\n  implements FormAssociated<FormData>\n{\n  static override readonly styles = [super.formStyles, unsafeCSS(styles)];\n\n  #rawValue = new FormData();\n  #prefixedValue = new FormData();\n  #valuePairs: [string, string | undefined][] = [['', '']];\n  #initialValue = new FormData();\n\n  get #hasEmptyPair(): boolean {\n    return this.#valuePairs.some(([key]) => key === '');\n  }\n\n  @query('form')\n  readonly form!: HTMLFormElement;\n\n  /**\n   * The name acts as a prefix to the form data keys.\n   */\n  @property({ type: String, reflect: true })\n  name = 'key-value.';\n\n  @property({ type: Boolean, reflect: true })\n  autocomplete = false;\n\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  @property({ type: Boolean, reflect: true })\n  required = false;\n\n  @property({ attribute: false, noAccessor: true })\n  set value(value: FormData | undefined) {\n    // update internal value with prefixed name\n    const oldValue = this.#prefixedValue;\n    const formData = value ?? new FormData();\n\n    // first, reset internal values\n    this.#rawValue = new FormData();\n    this.#prefixedValue = new FormData();\n    this.#valuePairs = [];\n\n    // then, map the new values\n    formData.forEach((value, key) => {\n      const rawKey = key.startsWith(this.name) ? key.substring(this.name.length) : key;\n      const preKey = key.startsWith(this.name) ? key : `${this.name}${key}`;\n\n      this.#rawValue.set(rawKey, value);\n      this.#prefixedValue.set(preKey, value);\n      this.#valuePairs.push([rawKey, typeof value === 'string' ? value : '']);\n    });\n\n    // add at least on single empty pair\n    if (!this.#hasEmptyPair) this.#valuePairs.push(['', '']);\n\n    // set internal form value\n    this.internals.setFormValue(this.#prefixedValue);\n    this.checkValidity();\n    this.requestUpdate('value', oldValue);\n  }\n  get value(): FormData | undefined {\n    return this.#prefixedValue;\n  }\n\n  @property({ attribute: false, noAccessor: true })\n  set pairs(pairs: [string, string | undefined][]) {\n    this.value = pairs.reduce((formData, [key, value]) => {\n      formData.set(key, value ?? '');\n      return formData;\n    }, new FormData());\n  }\n  get pairs(): [string, string | undefined][] {\n    return this.#valuePairs.map(([key, value]) => [key, value !== '' ? value : undefined]);\n  }\n\n  protected override firstUpdated(props: PropertyValues<this>): void {\n    super.firstUpdated(props);\n    this.#initialValue = this.#rawValue;\n  }\n\n  formResetCallback() {\n    this.value = this.#initialValue;\n  }\n\n  checkValidity(): boolean {\n    if (this.required && Array.from(this.#prefixedValue.values()).length < 1) {\n      this.internals.setValidity({ valueMissing: true }, 'Invalid input');\n    } else {\n      this.internals.setValidity({});\n    }\n\n    return this.internals.validity.valid;\n  }\n\n  @eventOptions({ passive: true })\n  handleInput() {\n    // prepare new form data and make sure to keep the empty entry\n    const formData = new FormData(this.form);\n    if (this.#hasEmptyPair) formData.append('', this.#rawValue.get('') ?? '');\n    this.value = formData;\n  }\n\n  @eventOptions({ passive: true })\n  handleRemoveClick(event: MouseEvent) {\n    const button = event.currentTarget as HTMLButtonElement;\n\n    // remove the pair from the internal value\n    const before = this.#valuePairs.slice(0, Number(button.dataset.index));\n    const after = this.#valuePairs.slice(Number(button.dataset.index) + 1);\n    this.#valuePairs = [...before, ...after];\n\n    // remove the pair from the form data\n    this.#rawValue.delete(button.dataset.key!);\n    this.#prefixedValue.delete(`${this.name}${button.dataset.key!}`);\n\n    // update the internal form value\n    this.internals.setFormValue(this.#prefixedValue);\n    this.checkValidity();\n    this.requestUpdate();\n\n    // dispatch input event\n    this.dispatchEvent(new InputEvent('input', { bubbles: true, composed: true }));\n  }\n\n  override renderInput() {\n    return html`\n      <form @input=\"${this.handleInput}\">\n        ${map(\n          this.#valuePairs,\n          ([key, value], index) => html`\n            <wcp-input-key-value ?disabled=\"${this.disabled}\" name=\"${key}\" value=\"${value ?? ''}\">\n              ${when(\n                key !== '',\n                () => html`\n                  <wcp-button\n                    data-key=\"${key}\"\n                    data-index=\"${index}\"\n                    slot=\"after\"\n                    kind=\"icon\"\n                    @click=\"${this.handleRemoveClick}\"\n                  >\n                    <wcp-icon name=\"remove\" style=\"--wcp-icon-size: 20\"></wcp-icon>\n                  </wcp-button>\n                `,\n                () => html`\n                  <wcp-button disabled slot=\"after\" kind=\"icon\">\n                    <wcp-icon name=\"add\" style=\"--wcp-icon-size: 20\"></wcp-icon>\n                  </wcp-button>\n                `,\n              )}\n            </wcp-input-key-value>\n          `,\n        )}\n      </form>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-input-key-value-pairs': InputKeyValuePairs;\n  }\n}\n", "export default `:host {\n  ---wcp-input-key-value-pairs-gutter: var(--wcp-input-key-value-pairs-gutter, calc(var(--wcp-base-size, 10px) * 1));\n}\n\nform {\n  grid-area: center;\n  display: grid;\n  grid-gap: var(---wcp-input-key-value-pairs-gutter);\n  gap: var(---wcp-input-key-value-pairs-gutter);\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2NsaWVudC9jbGllbnQvc3JjL2NvbXBvbmVudHMvZm9ybXMvaW5wdXQta2V5LXZhbHVlLXBhaXJzL2lucHV0LWtleS12YWx1ZS1wYWlycy5jb21wb25lbnQuc2NzcyIsIjpob3N0JTIwJTdCJTBBJTIwJTIwLS0td2NwLWlucHV0LWtleS12YWx1ZS1wYWlycy1ndXR0ZXI6JTIwdmFyKC0td2NwLWlucHV0LWtleS12YWx1ZS1wYWlycy1ndXR0ZXIsJTIwY2FsYyh2YXIoLS13Y3AtYmFzZS1zaXplLCUyMDEwcHgpJTIwKiUyMDEpKTslMEElN0QlMEElMEFmb3JtJTIwJTdCJTBBJTIwJTIwZ3JpZC1hcmVhOiUyMGNlbnRlcjslMEElMjAlMjBkaXNwbGF5OiUyMGdyaWQ7JTBBJTIwJTIwZ2FwOiUyMHZhcigtLS13Y3AtaW5wdXQta2V5LXZhbHVlLXBhaXJzLWd1dHRlcik7JTBBJTdEJTBBLyolMjMlMjBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZTYjI5MElqb2lMMmh2YldVdmNuVnVibVZ5TDNkdmNtc3ZZMnhwWlc1MEwyTnNhV1Z1ZEM5emNtTXZZMjl0Y0c5dVpXNTBjeTltYjNKdGN5OXBibkIxZEMxclpYa3RkbUZzZFdVdGNHRnBjbk1pTENKemIzVnlZMlZ6SWpwYkltbHVjSFYwTFd0bGVTMTJZV3gxWlMxd1lXbHljeTVqYjIxd2IyNWxiblF1YzJOemN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkZRVHRGUVVORk96czdRVUZIUmp0RlFVTkZPMFZCUlVFN1JVRkRRU0lzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWtCMWMyVWdKMEF2YzNSNWJHVnpMM1YwYVd4ekp5QmhjeUIxZEdsc2N6dGNibHh1T21odmMzUWdlMXh1SUNBdExTMTNZM0F0YVc1d2RYUXRhMlY1TFhaaGJIVmxMWEJoYVhKekxXZDFkSFJsY2pvZ2RtRnlLQzB0ZDJOd0xXbHVjSFYwTFd0bGVTMTJZV3gxWlMxd1lXbHljeTFuZFhSMFpYSXNJQ043ZFhScGJITXVjMmw2WlNneEtYMHBPMXh1ZlZ4dVhHNW1iM0p0SUh0Y2JpQWdaM0pwWkMxaGNtVmhPaUJqWlc1MFpYSTdYRzVjYmlBZ1pHbHpjR3hoZVRvZ1ozSnBaRHRjYmlBZ1oyRndPaUIyWVhJb0xTMHRkMk53TFdsdWNIVjBMV3RsZVMxMllXeDFaUzF3WVdseWN5MW5kWFIwWlhJcE8xeHVmVnh1SWwxOSUyMCoiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDRSxrSEFBQTtBQ0RGOztBRElBO0VBQ0UsaUJBQUE7RUFFQSxhQUFBO0VBQ0Esa0RBQUE7RUFBQSw2Q0FBQTtBQ0ZGIiwiZmlsZSI6Ijpob3N0IHtcbiAgLS0td2NwLWlucHV0LWtleS12YWx1ZS1wYWlycy1ndXR0ZXI6IHZhcigtLXdjcC1pbnB1dC1rZXktdmFsdWUtcGFpcnMtZ3V0dGVyLCBjYWxjKHZhcigtLXdjcC1iYXNlLXNpemUsIDEwcHgpICogMSkpO1xufVxuXG5mb3JtIHtcbiAgZ3JpZC1hcmVhOiBjZW50ZXI7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdhcDogdmFyKC0tLXdjcC1pbnB1dC1rZXktdmFsdWUtcGFpcnMtZ3V0dGVyKTtcbn1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZTYjI5MElqb2lMMmh2YldVdmNuVnVibVZ5TDNkdmNtc3ZZMnhwWlc1MEwyTnNhV1Z1ZEM5emNtTXZZMjl0Y0c5dVpXNTBjeTltYjNKdGN5OXBibkIxZEMxclpYa3RkbUZzZFdVdGNHRnBjbk1pTENKemIzVnlZMlZ6SWpwYkltbHVjSFYwTFd0bGVTMTJZV3gxWlMxd1lXbHljeTVqYjIxd2IyNWxiblF1YzJOemN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkZRVHRGUVVORk96czdRVUZIUmp0RlFVTkZPMFZCUlVFN1JVRkRRU0lzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWtCMWMyVWdKMEF2YzNSNWJHVnpMM1YwYVd4ekp5QmhjeUIxZEdsc2N6dGNibHh1T21odmMzUWdlMXh1SUNBdExTMTNZM0F0YVc1d2RYUXRhMlY1TFhaaGJIVmxMWEJoYVhKekxXZDFkSFJsY2pvZ2RtRnlLQzB0ZDJOd0xXbHVjSFYwTFd0bGVTMTJZV3gxWlMxd1lXbHljeTFuZFhSMFpYSXNJQ043ZFhScGJITXVjMmw2WlNneEtYMHBPMXh1ZlZ4dVhHNW1iM0p0SUh0Y2JpQWdaM0pwWkMxaGNtVmhPaUJqWlc1MFpYSTdYRzVjYmlBZ1pHbHpjR3hoZVRvZ1ozSnBaRHRjYmlBZ1oyRndPaUIyWVhJb0xTMHRkMk53TFdsdWNIVjBMV3RsZVMxMllXeDFaUzF3WVdseWN5MW5kWFIwWlhJcE8xeHVmVnh1SWwxOSAqIiwic291cmNlc0NvbnRlbnQiOlsiQHVzZSAnQC9zdHlsZXMvdXRpbHMnIGFzIHV0aWxzO1xuXG46aG9zdCB7XG4gIC0tLXdjcC1pbnB1dC1rZXktdmFsdWUtcGFpcnMtZ3V0dGVyOiB2YXIoLS13Y3AtaW5wdXQta2V5LXZhbHVlLXBhaXJzLWd1dHRlciwgI3t1dGlscy5zaXplKDEpfSk7XG59XG5cbmZvcm0ge1xuICBncmlkLWFyZWE6IGNlbnRlcjtcblxuICBkaXNwbGF5OiBncmlkO1xuICBnYXA6IHZhcigtLS13Y3AtaW5wdXQta2V5LXZhbHVlLXBhaXJzLWd1dHRlcik7XG59XG4iLCI6aG9zdCB7XG4gIC0tLXdjcC1pbnB1dC1rZXktdmFsdWUtcGFpcnMtZ3V0dGVyOiB2YXIoLS13Y3AtaW5wdXQta2V5LXZhbHVlLXBhaXJzLWd1dHRlciwgY2FsYyh2YXIoLS13Y3AtYmFzZS1zaXplLCAxMHB4KSAqIDEpKTtcbn1cblxuZm9ybSB7XG4gIGdyaWQtYXJlYTogY2VudGVyO1xuICBkaXNwbGF5OiBncmlkO1xuICBnYXA6IHZhcigtLS13Y3AtaW5wdXQta2V5LXZhbHVlLXBhaXJzLWd1dHRlcik7XG59XG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWU2IyOTBJam9pTDJodmJXVXZjblZ1Ym1WeUwzZHZjbXN2WTJ4cFpXNTBMMk5zYVdWdWRDOXpjbU12WTI5dGNHOXVaVzUwY3k5bWIzSnRjeTlwYm5CMWRDMXJaWGt0ZG1Gc2RXVXRjR0ZwY25NaUxDSnpiM1Z5WTJWeklqcGJJbWx1Y0hWMExXdGxlUzEyWVd4MVpTMXdZV2x5Y3k1amIyMXdiMjVsYm5RdWMyTnpjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZGUVR0RlFVTkZPenM3UVVGSFJqdEZRVU5GTzBWQlJVRTdSVUZEUVNJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYklrQjFjMlVnSjBBdmMzUjViR1Z6TDNWMGFXeHpKeUJoY3lCMWRHbHNjenRjYmx4dU9taHZjM1FnZTF4dUlDQXRMUzEzWTNBdGFXNXdkWFF0YTJWNUxYWmhiSFZsTFhCaGFYSnpMV2QxZEhSbGNqb2dkbUZ5S0MwdGQyTndMV2x1Y0hWMExXdGxlUzEyWVd4MVpTMXdZV2x5Y3kxbmRYUjBaWElzSUNON2RYUnBiSE11YzJsNlpTZ3hLWDBwTzF4dWZWeHVYRzVtYjNKdElIdGNiaUFnWjNKcFpDMWhjbVZoT2lCalpXNTBaWEk3WEc1Y2JpQWdaR2x6Y0d4aGVUb2daM0pwWkR0Y2JpQWdaMkZ3T2lCMllYSW9MUzB0ZDJOd0xXbHVjSFYwTFd0bGVTMTJZV3gxWlMxd1lXbHljeTFuZFhSMFpYSXBPMXh1ZlZ4dUlsMTkgKi8iXX0= */`;\n", "import { html, LitElement, PropertyValues, unsafeCSS } from 'lit';\nimport { customElement, eventOptions, property, query } from 'lit/decorators.js';\n\nimport { Editable } from '@/mixins/editable.mixin.js';\nimport type { FormAssociated } from '@/utils/form.utils.js';\n\n// instruct esbuild to load the CSS file as a string\nimport styles from './input-number.component.scss';\n\n/**\n * A numeric input element using the wcp style. Fully form aware.\n *\n * @property {string} label - The label of the input element.\n *\n * @slot hint - Receives optional descriptions below the input.\n *\n * @cssprop --wcp-input-number-hint-size - The font size of the hint.\n * @cssprop --wcp-input-number-label-size - The font size of the label.\n * @cssprop --wcp-input-number-spacing - The inner spacing of the input element.\n *\n * @cssprop --wcp-input-number-dark-background - The background color of the element in dark mode.\n * @cssprop --wcp-input-number-dark-border - The border color of the element in dark mode.\n * @cssprop --wcp-input-number-dark-color - The font color of the input element in dark mode.\n *\n * @cssprop --wcp-input-number-light-background - The background color of the element in light mode.\n * @cssprop --wcp-input-number-light-border - The border color of the element in light mode.\n * @cssprop --wcp-input-number-light-color - The font color of the input element in light mode.\n *\n */\n@customElement('wcp-input-number')\nexport class InputNumber extends Editable()(LitElement) implements FormAssociated<number> {\n  static override readonly styles = [super.formStyles, unsafeCSS(styles)];\n\n  #initialValue?: number;\n\n  @query('input')\n  private readonly input?: HTMLInputElement;\n\n  @property({ type: Boolean, reflect: true })\n  autocomplete = false;\n\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  @property({ type: Boolean, reflect: true })\n  readonly = false;\n\n  @property({ type: Boolean, reflect: true })\n  required = false;\n\n  @property({ type: String, reflect: true })\n  name = 'text';\n\n  @property({ type: Number, reflect: true })\n  value?: number;\n\n  protected override firstUpdated(props: PropertyValues<this>): void {\n    super.firstUpdated(props);\n    this.#initialValue = this.value;\n  }\n\n  formResetCallback() {\n    this.value = this.#initialValue;\n  }\n\n  checkValidity(): boolean {\n    if (!this.input?.checkValidity()) {\n      this.internals.setValidity({ customError: true }, 'Invalid input');\n    } else {\n      this.internals.setValidity({});\n    }\n\n    return this.internals.validity.valid;\n  }\n\n  override attributeChangedCallback(name: string, oldValue: string | null, newValue: string | null): void {\n    super.attributeChangedCallback(name, oldValue, newValue);\n\n    if (name !== 'value') return;\n    this.checkValidity();\n    this.internals.setFormValue(this.value ? `${this.value}` : null);\n  }\n\n  @eventOptions({ passive: true })\n  handleInput(event: Event) {\n    const input = event.target as HTMLInputElement | HTMLTextAreaElement;\n    this.value = input.value ? parseFloat(input.value) : undefined;\n  }\n\n  override renderInput(id: string) {\n    return html`\n      <input\n        type=\"number\"\n        id=\"${id}\"\n        name=\"${this.name}\"\n        autocomplete=\"${this.autocomplete ? 'on' : 'off'}\"\n        ?disabled=\"${this.disabled}\"\n        ?required=\"${this.required}\"\n        .value=\"${this.value ? `${this.value}` : ''}\"\n        @input=\"${this.handleInput}\"\n      />\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-input-number': InputNumber;\n  }\n}\n", "export default `:host {\n  --wcp-editable-hint-size: var(--wcp-input-number-hint-size);\n  --wcp-editable-label-size: var(--wcp-input-number-label-size);\n  --wcp-editable-spacing: var(--wcp-input-number-spacing);\n  --wcp-editable-passive-border-radius: var(--wcp-input-number-border-radius);\n  --wcp-editable-passive-border-size: var(--wcp-input-number-border-size);\n  --wcp-editable-active-border-radius: var(--wcp-input-number-border-radius);\n  --wcp-editable-active-border-size: var(--wcp-input-number-border-size);\n  --wcp-editable-dark-background: var(--wcp-input-number-dark-background);\n  --wcp-editable-dark-border: var(--wcp-input-number-dark-border);\n  --wcp-editable-dark-color: var(--wcp-input-number-dark-color);\n  --wcp-editable-light-background: var(--wcp-input-number-light-background);\n  --wcp-editable-light-border: var(--wcp-input-number-light-border);\n  --wcp-editable-light-color: var(--wcp-input-number-light-color);\n}\n\ninput {\n  all: unset;\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none;\n  box-sizing: border-box;\n  width: 100%;\n  color: var(---wcp-input-number-color);\n  text-align: left;\n}\ninput::-webkit-outer-spin-button, input::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\ninput[type=number] {\n  -moz-appearance: textfield;\n}\n/*# sourceMappingURL=data:application/json;base64, */`;\n", "import { html, LitElement, PropertyValues, unsafeCSS } from 'lit';\nimport { customElement, eventOptions, property } from 'lit/decorators.js';\n\nimport { Editable } from '@/mixins/editable.mixin.js';\nimport type { FormAssociated } from '@/utils/form.utils.js';\n\n// instruct esbuild to load the CSS file as a string\nimport styles from './input-radio.component.scss';\n\n/**\n * A radio input element using the wcp style. Fully form aware.\n *\n * @property {string} label - The label of the input element.\n *\n * @slot hint - Receives optional descriptions below the input.\n *\n * @cssprop --wcp-input-radio-size - The size of the radio input.\n * @cssprop --wcp-input-radio-label-size - The font size of the label.\n * @cssprop --wcp-input-radio-hint-size - The font size of the hint.\n * @cssprop --wcp-input-radio-spacing - The leading distance of the label to the input.\n * @cssprop --wcp-input-radio-border-radius - The border radius of the radio input.\n * @cssprop --wcp-input-radio-border-size - The border size of the radio input.\n *\n * @cssprop --wcp-input-radio-dark-background - The background color of the radio input in dark mode.\n * @cssprop --wcp-input-radio-dark-border - The border color of the radio input in dark mode.\n * @cssprop --wcp-input-radio-dark-color - The fill color of the radio input when checked in dark mode.\n *\n * @cssprop --wcp-input-radio-light-background - The background color of the radio input in light mode.\n * @cssprop --wcp-input-radio-light-border - The border color of the radio input in light mode.\n * @cssprop --wcp-input-radio-light-color - The fill color of the radio input when checked in light mode.\n *\n */\n@customElement('wcp-input-radio')\nexport class InputRadio\n  extends Editable({ hasBeforeSlot: false, hasBorder: false })(LitElement)\n  implements FormAssociated<string>\n{\n  static override readonly styles = [super.formStyles, unsafeCSS(styles)];\n\n  #checked = false;\n  #initialChecked!: boolean;\n\n  @property({ type: String, reflect: true })\n  name = 'radio';\n\n  @property({ type: Boolean, reflect: true })\n  autocomplete = false;\n\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  @property({ type: Boolean, reflect: true, noAccessor: true })\n  set checked(checked: boolean) {\n    this.#checked = checked;\n    this.checkValidity();\n\n    this.internals.ariaChecked = String(this.checked);\n    this.internals.setFormValue(this.#checked ? this.value ?? null : null);\n  }\n  get checked(): boolean {\n    return this.#checked;\n  }\n\n  @property({ type: Boolean, reflect: true })\n  required = false;\n\n  @property({ type: String, reflect: true })\n  value = 'on';\n\n  protected override firstUpdated(props: PropertyValues<this>): void {\n    super.firstUpdated(props);\n    this.internals.role = 'radio';\n    this.#initialChecked = this.#checked;\n  }\n\n  formResetCallback() {\n    this.checked = this.#initialChecked;\n  }\n\n  checkValidity(): boolean {\n    if (this.required && !this.#checked) {\n      this.internals.setValidity({ valueMissing: true }, 'Invalid input');\n    } else {\n      this.internals.setValidity({});\n    }\n\n    return this.internals.validity.valid;\n  }\n\n  @eventOptions({ passive: true })\n  handleInput(event: Event) {\n    const input = event.target as HTMLInputElement;\n    this.checked = input.checked;\n  }\n\n  override renderInput(id: string) {\n    return html`\n      <input\n        type=\"radio\"\n        id=\"${id}\"\n        name=\"${this.name}\"\n        autocomplete=\"${this.autocomplete ? 'on' : 'off'}\"\n        ?disabled=\"${this.disabled}\"\n        ?required=\"${this.required}\"\n        ?checked=\"${this.#checked}\"\n        .value=\"${this.value}\"\n        @input=\"${this.handleInput}\"\n      />\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-input-radio': InputRadio;\n  }\n}\n", "export default `:host {\n  ---wcp-input-radio-size: var(--wcp-input-radio-size, calc(var(--wcp-base-size, 10px) * 2));\n  --wcp-editable-hint-size: var(--wcp-input-radio-hint-size);\n  --wcp-editable-label-size: var(--wcp-input-radio-label-size, 1em);\n  --wcp-editable-spacing: var(--wcp-input-radio-spacing, calc(var(--wcp-base-size, 10px) * 1));\n  --wcp-editable-passive-border-radius: var(--wcp-input-radio-border-radius);\n  --wcp-editable-passive-border-size: var(--wcp-input-radio-border-size);\n  --wcp-editable-active-border-radius: var(--wcp-input-radio-border-radius);\n  --wcp-editable-active-border-size: var(--wcp-input-radio-border-size);\n  --wcp-editable-dark-background: var(--wcp-input-radio-dark-background);\n  --wcp-editable-dark-border: var(--wcp-input-radio-dark-border);\n  --wcp-editable-dark-color: var(--wcp-input-radio-dark-color);\n  --wcp-editable-light-background: var(--wcp-input-radio-light-background);\n  --wcp-editable-light-border: var(--wcp-input-radio-light-border);\n  --wcp-editable-light-color: var(--wcp-input-radio-light-color);\n}\n\n#input {\n  grid-area: before;\n}\n\nlabel {\n  grid-area: center;\n  padding: 0;\n}\n\n:host([checked]) {\n  position: relative;\n}\n:host([checked])::after {\n  content: \"\";\n  pointer-events: none;\n  display: block;\n  height: calc(var(---wcp-input-radio-size) * 0.5);\n  width: calc(var(---wcp-input-radio-size) * 0.5);\n  position: absolute;\n  top: calc(var(---wcp-input-radio-size) * 0.5);\n  right: auto;\n  bottom: auto;\n  left: calc(var(---wcp-input-radio-size) * 0.5);\n  transform: translate(-50%, -50%);\n  background: var(---wcp-editable-color);\n  border-radius: 50%;\n  z-index: 1;\n  transition: var(--wcp-fx-default-duration) ease-out;\n  transition-property: height, inset, opacity, width;\n  will-change: height, inset, opacity, width;\n}\n\n:host([checked][disabled])::after {\n  opacity: 0.5;\n}\n\ninput {\n  all: unset;\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none;\n  cursor: pointer;\n  box-sizing: border-box;\n  display: block;\n  height: 0;\n  width: 0;\n  margin-right: var(---wcp-editable-spacing);\n  background-color: var(---wcp-editable-background);\n  outline: var(---wcp-editable-border-size) solid var(---wcp-editable-border);\n  outline-offset: calc(var(---wcp-editable-border-size) * -1);\n  border-radius: 50%;\n  transition: var(--wcp-fx-default-duration) ease-out;\n  transition-property: opacity, outline-offset, outline-width;\n  will-change: opacity, outline-offset, outline-width;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2NsaWVudC9jbGllbnQvc3JjL2NvbXBvbmVudHMvZm9ybXMvaW5wdXQtcmFkaW8vaW5wdXQtcmFkaW8uY29tcG9uZW50LnNjc3MiLCI6aG9zdCUyMCU3QiUwQSUyMCUyMC0tLXdjcC1pbnB1dC1yYWRpby1zaXplOiUyMHZhcigtLXdjcC1pbnB1dC1yYWRpby1zaXplLCUyMGNhbGModmFyKC0td2NwLWJhc2Utc2l6ZSwlMjAxMHB4KSUyMColMjAyKSk7JTBBJTIwJTIwLS13Y3AtZWRpdGFibGUtaGludC1zaXplOiUyMHZhcigtLXdjcC1pbnB1dC1yYWRpby1oaW50LXNpemUpOyUwQSUyMCUyMC0td2NwLWVkaXRhYmxlLWxhYmVsLXNpemU6JTIwdmFyKC0td2NwLWlucHV0LXJhZGlvLWxhYmVsLXNpemUsJTIwMWVtKTslMEElMjAlMjAtLXdjcC1lZGl0YWJsZS1zcGFjaW5nOiUyMHZhcigtLXdjcC1pbnB1dC1yYWRpby1zcGFjaW5nLCUyMGNhbGModmFyKC0td2NwLWJhc2Utc2l6ZSwlMjAxMHB4KSUyMColMjAxKSk7JTBBJTIwJTIwLS13Y3AtZWRpdGFibGUtcGFzc2l2ZS1ib3JkZXItcmFkaXVzOiUyMHZhcigtLXdjcC1pbnB1dC1yYWRpby1ib3JkZXItcmFkaXVzKTslMEElMjAlMjAtLXdjcC1lZGl0YWJsZS1wYXNzaXZlLWJvcmRlci1zaXplOiUyMHZhcigtLXdjcC1pbnB1dC1yYWRpby1ib3JkZXItc2l6ZSk7JTBBJTIwJTIwLS13Y3AtZWRpdGFibGUtYWN0aXZlLWJvcmRlci1yYWRpdXM6JTIwdmFyKC0td2NwLWlucHV0LXJhZGlvLWJvcmRlci1yYWRpdXMpOyUwQSUyMCUyMC0td2NwLWVkaXRhYmxlLWFjdGl2ZS1ib3JkZXItc2l6ZTolMjB2YXIoLS13Y3AtaW5wdXQtcmFkaW8tYm9yZGVyLXNpemUpOyUwQSUyMCUyMC0td2NwLWVkaXRhYmxlLWRhcmstYmFja2dyb3VuZDolMjB2YXIoLS13Y3AtaW5wdXQtcmFkaW8tZGFyay1iYWNrZ3JvdW5kKTslMEElMjAlMjAtLXdjcC1lZGl0YWJsZS1kYXJrLWJvcmRlcjolMjB2YXIoLS13Y3AtaW5wdXQtcmFkaW8tZGFyay1ib3JkZXIpOyUwQSUyMCUyMC0td2NwLWVkaXRhYmxlLWRhcmstY29sb3I6JTIwdmFyKC0td2NwLWlucHV0LXJhZGlvLWRhcmstY29sb3IpOyUwQSUyMCUyMC0td2NwLWVkaXRhYmxlLWxpZ2h0LWJhY2tncm91bmQ6JTIwdmFyKC0td2NwLWlucHV0LXJhZGlvLWxpZ2h0LWJhY2tncm91bmQpOyUwQSUyMCUyMC0td2NwLWVkaXRhYmxlLWxpZ2h0LWJvcmRlcjolMjB2YXIoLS13Y3AtaW5wdXQtcmFkaW8tbGlnaHQtYm9yZGVyKTslMEElMjAlMjAtLXdjcC1lZGl0YWJsZS1saWdodC1jb2xvcjolMjB2YXIoLS13Y3AtaW5wdXQtcmFkaW8tbGlnaHQtY29sb3IpOyUwQSU3RCUwQSUwQSUyM2lucHV0JTIwJTdCJTBBJTIwJTIwZ3JpZC1hcmVhOiUyMGJlZm9yZTslMEElN0QlMEElMEFsYWJlbCUyMCU3QiUwQSUyMCUyMGdyaWQtYXJlYTolMjBjZW50ZXI7JTBBJTIwJTIwcGFkZGluZzolMjAwOyUwQSU3RCUwQSUwQTpob3N0KCU1QmNoZWNrZWQlNUQpJTIwJTdCJTBBJTIwJTIwcG9zaXRpb246JTIwcmVsYXRpdmU7JTBBJTdEJTBBOmhvc3QoJTVCY2hlY2tlZCU1RCk6OmFmdGVyJTIwJTdCJTBBJTIwJTIwY29udGVudDolMjAlMjIlMjI7JTBBJTIwJTIwcG9pbnRlci1ldmVudHM6JTIwbm9uZTslMEElMjAlMjBkaXNwbGF5OiUyMGJsb2NrOyUwQSUyMCUyMGhlaWdodDolMjBjYWxjKHZhcigtLS13Y3AtaW5wdXQtcmFkaW8tc2l6ZSklMjAqJTIwMC41KTslMEElMjAlMjB3aWR0aDolMjBjYWxjKHZhcigtLS13Y3AtaW5wdXQtcmFkaW8tc2l6ZSklMjAqJTIwMC41KTslMEElMjAlMjBwb3NpdGlvbjolMjBhYnNvbHV0ZTslMEElMjAlMjBpbnNldDolMjBjYWxjKHZhcigtLS13Y3AtaW5wdXQtcmFkaW8tc2l6ZSklMjAqJTIwMC41KSUyMGF1dG8lMjBhdXRvJTIwY2FsYyh2YXIoLS0td2NwLWlucHV0LXJhZGlvLXNpemUpJTIwKiUyMDAuNSk7JTBBJTIwJTIwdHJhbnNmb3JtOiUyMHRyYW5zbGF0ZSgtNTAlMjUsJTIwLTUwJTI1KTslMEElMjAlMjBiYWNrZ3JvdW5kOiUyMHZhcigtLS13Y3AtZWRpdGFibGUtY29sb3IpOyUwQSUyMCUyMGJvcmRlci1yYWRpdXM6JTIwNTAlMjU7JTBBJTIwJTIwei1pbmRleDolMjAxOyUwQSUyMCUyMHRyYW5zaXRpb246JTIwdmFyKC0td2NwLWZ4LWRlZmF1bHQtZHVyYXRpb24pJTIwZWFzZS1vdXQ7JTBBJTIwJTIwdHJhbnNpdGlvbi1wcm9wZXJ0eTolMjBoZWlnaHQsJTIwaW5zZXQsJTIwb3BhY2l0eSwlMjB3aWR0aDslMEElMjAlMjB3aWxsLWNoYW5nZTolMjBoZWlnaHQsJTIwaW5zZXQsJTIwb3BhY2l0eSwlMjB3aWR0aDslMEElN0QlMEElMEE6aG9zdCglNUJjaGVja2VkJTVEJTVCZGlzYWJsZWQlNUQpOjphZnRlciUyMCU3QiUwQSUyMCUyMG9wYWNpdHk6JTIwMC41OyUwQSU3RCUwQSUwQWlucHV0JTIwJTdCJTBBJTIwJTIwYWxsOiUyMHVuc2V0OyUwQSUyMCUyMGFwcGVhcmFuY2U6JTIwbm9uZTslMEElMjAlMjBjdXJzb3I6JTIwcG9pbnRlcjslMEElMjAlMjBib3gtc2l6aW5nOiUyMGJvcmRlci1ib3g7JTBBJTIwJTIwZGlzcGxheTolMjBibG9jazslMEElMjAlMjBoZWlnaHQ6JTIwMDslMEElMjAlMjB3aWR0aDolMjAwOyUwQSUyMCUyMG1hcmdpbi1yaWdodDolMjB2YXIoLS0td2NwLWVkaXRhYmxlLXNwYWNpbmcpOyUwQSUyMCUyMGJhY2tncm91bmQtY29sb3I6JTIwdmFyKC0tLXdjcC1lZGl0YWJsZS1iYWNrZ3JvdW5kKTslMEElMjAlMjBvdXRsaW5lOiUyMHZhcigtLS13Y3AtZWRpdGFibGUtYm9yZGVyLXNpemUpJTIwc29saWQlMjB2YXIoLS0td2NwLWVkaXRhYmxlLWJvcmRlcik7JTBBJTIwJTIwb3V0bGluZS1vZmZzZXQ6JTIwY2FsYyh2YXIoLS0td2NwLWVkaXRhYmxlLWJvcmRlci1zaXplKSUyMColMjAtMSk7JTBBJTIwJTIwYm9yZGVyLXJhZGl1czolMjA1MCUyNTslMEElMjAlMjB0cmFuc2l0aW9uOiUyMHZhcigtLXdjcC1meC1kZWZhdWx0LWR1cmF0aW9uKSUyMGVhc2Utb3V0OyUwQSUyMCUyMHRyYW5zaXRpb24tcHJvcGVydHk6JTIwb3BhY2l0eSwlMjBvdXRsaW5lLW9mZnNldCwlMjBvdXRsaW5lLXdpZHRoOyUwQSUyMCUyMHdpbGwtY2hhbmdlOiUyMG9wYWNpdHksJTIwb3V0bGluZS1vZmZzZXQsJTIwb3V0bGluZS13aWR0aDslMEElN0QlMEEvKiUyMyUyMHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVlNiMjkwSWpvaUwyaHZiV1V2Y25WdWJtVnlMM2R2Y21zdlkyeHBaVzUwTDJOc2FXVnVkQzl6Y21NdlkyOXRjRzl1Wlc1MGN5OW1iM0p0Y3k5cGJuQjFkQzF5WVdScGJ5SXNJbk52ZFhKalpYTWlPbHNpYVc1d2RYUXRjbUZrYVc4dVkyOXRjRzl1Wlc1MExuTmpjM01pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUlVFN1JVRkRSVHRGUVVWQk8wVkJRMEU3UlVGRFFUdEZRVVZCTzBWQlEwRTdSVUZGUVR0RlFVTkJPMFZCUlVFN1JVRkRRVHRGUVVOQk8wVkJSVUU3UlVGRFFUdEZRVU5CT3pzN1FVRkhSanRGUVVORk96czdRVUZIUmp0RlFVTkZPMFZCUTBFN096dEJRVWRHTzBWQlEwVTdPMEZCUlVFN1JVRkRSVHRGUVVOQk8wVkJSVUU3UlVGRFFUdEZRVU5CTzBWQlJVRTdSVUZEUVR0RlFVTkJPMFZCUlVFN1JVRkRRVHRGUVVOQk8wVkJSVUU3UlVGRFFUdEZRVU5CT3pzN1FVRkpTanRGUVVORk96czdRVUZIUmp0RlFVTkZPMFZCUTBFN1JVRkRRVHRGUVVWQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZQUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVkQk8wVkJRMEU3UlVGRFFTSXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJa0IxYzJVZ0owQXZjM1I1YkdWekwzVjBhV3h6SnlCaGN5QjFkR2xzY3p0Y2JseHVPbWh2YzNRZ2UxeHVJQ0F0TFMxM1kzQXRhVzV3ZFhRdGNtRmthVzh0YzJsNlpUb2dkbUZ5S0MwdGQyTndMV2x1Y0hWMExYSmhaR2x2TFhOcGVtVXNJQ043ZFhScGJITXVjMmw2WlNneUtYMHBPMXh1WEc0Z0lDMHRkMk53TFdWa2FYUmhZbXhsTFdocGJuUXRjMmw2WlRvZ2RtRnlLQzB0ZDJOd0xXbHVjSFYwTFhKaFpHbHZMV2hwYm5RdGMybDZaU2s3WEc0Z0lDMHRkMk53TFdWa2FYUmhZbXhsTFd4aFltVnNMWE5wZW1VNklIWmhjaWd0TFhkamNDMXBibkIxZEMxeVlXUnBieTFzWVdKbGJDMXphWHBsTENBeFpXMHBPMXh1SUNBdExYZGpjQzFsWkdsMFlXSnNaUzF6Y0dGamFXNW5PaUIyWVhJb0xTMTNZM0F0YVc1d2RYUXRjbUZrYVc4dGMzQmhZMmx1Wnl3Z0kzdDFkR2xzY3k1emFYcGxLREVwZlNrN1hHNWNiaUFnTFMxM1kzQXRaV1JwZEdGaWJHVXRjR0Z6YzJsMlpTMWliM0prWlhJdGNtRmthWFZ6T2lCMllYSW9MUzEzWTNBdGFXNXdkWFF0Y21Ga2FXOHRZbTl5WkdWeUxYSmhaR2wxY3lrN1hHNGdJQzB0ZDJOd0xXVmthWFJoWW14bExYQmhjM05wZG1VdFltOXlaR1Z5TFhOcGVtVTZJSFpoY2lndExYZGpjQzFwYm5CMWRDMXlZV1JwYnkxaWIzSmtaWEl0YzJsNlpTazdYRzVjYmlBZ0xTMTNZM0F0WldScGRHRmliR1V0WVdOMGFYWmxMV0p2Y21SbGNpMXlZV1JwZFhNNklIWmhjaWd0TFhkamNDMXBibkIxZEMxeVlXUnBieTFpYjNKa1pYSXRjbUZrYVhWektUdGNiaUFnTFMxM1kzQXRaV1JwZEdGaWJHVXRZV04wYVhabExXSnZjbVJsY2kxemFYcGxPaUIyWVhJb0xTMTNZM0F0YVc1d2RYUXRjbUZrYVc4dFltOXlaR1Z5TFhOcGVtVXBPMXh1WEc0Z0lDMHRkMk53TFdWa2FYUmhZbXhsTFdSaGNtc3RZbUZqYTJkeWIzVnVaRG9nZG1GeUtDMHRkMk53TFdsdWNIVjBMWEpoWkdsdkxXUmhjbXN0WW1GamEyZHliM1Z1WkNrN1hHNGdJQzB0ZDJOd0xXVmthWFJoWW14bExXUmhjbXN0WW05eVpHVnlPaUIyWVhJb0xTMTNZM0F0YVc1d2RYUXRjbUZrYVc4dFpHRnlheTFpYjNKa1pYSXBPMXh1SUNBdExYZGpjQzFsWkdsMFlXSnNaUzFrWVhKckxXTnZiRzl5T2lCMllYSW9MUzEzWTNBdGFXNXdkWFF0Y21Ga2FXOHRaR0Z5YXkxamIyeHZjaWs3WEc1Y2JpQWdMUzEzWTNBdFpXUnBkR0ZpYkdVdGJHbG5hSFF0WW1GamEyZHliM1Z1WkRvZ2RtRnlLQzB0ZDJOd0xXbHVjSFYwTFhKaFpHbHZMV3hwWjJoMExXSmhZMnRuY205MWJtUXBPMXh1SUNBdExYZGpjQzFsWkdsMFlXSnNaUzFzYVdkb2RDMWliM0prWlhJNklIWmhjaWd0TFhkamNDMXBibkIxZEMxeVlXUnBieTFzYVdkb2RDMWliM0prWlhJcE8xeHVJQ0F0TFhkamNDMWxaR2wwWVdKc1pTMXNhV2RvZEMxamIyeHZjam9nZG1GeUtDMHRkMk53TFdsdWNIVjBMWEpoWkdsdkxXeHBaMmgwTFdOdmJHOXlLVHRjYm4xY2JseHVJMmx1Y0hWMElIdGNiaUFnWjNKcFpDMWhjbVZoT2lCaVpXWnZjbVU3WEc1OVhHNWNibXhoWW1Wc0lIdGNiaUFnWjNKcFpDMWhjbVZoT2lCalpXNTBaWEk3WEc0Z0lIQmhaR1JwYm1jNklEQTdYRzU5WEc1Y2JqcG9iM04wS0Z0amFHVmphMlZrWFNrZ2UxeHVJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc1Y2JpQWdKam82WVdaMFpYSWdlMXh1SUNBZ0lHTnZiblJsYm5RNklDY25PMXh1SUNBZ0lIQnZhVzUwWlhJdFpYWmxiblJ6T2lCdWIyNWxPMXh1WEc0Z0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJQ0FnYUdWcFoyaDBPaUJqWVd4aktIWmhjaWd0TFMxM1kzQXRhVzV3ZFhRdGNtRmthVzh0YzJsNlpTa2dLaUF3TGpVcE8xeHVJQ0FnSUhkcFpIUm9PaUJqWVd4aktIWmhjaWd0TFMxM1kzQXRhVzV3ZFhRdGNtRmthVzh0YzJsNlpTa2dLaUF3TGpVcE8xeHVYRzRnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUdsdWMyVjBPaUJqWVd4aktIWmhjaWd0TFMxM1kzQXRhVzV3ZFhRdGNtRmthVzh0YzJsNlpTa2dLaUF3TGpVcElHRjFkRzhnWVhWMGJ5QmpZV3hqS0haaGNpZ3RMUzEzWTNBdGFXNXdkWFF0Y21Ga2FXOHRjMmw2WlNrZ0tpQXdMalVwTzF4dUlDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsS0MwMU1DVXNJQzAxTUNVcE8xeHVYRzRnSUNBZ1ltRmphMmR5YjNWdVpEb2dkbUZ5S0MwdExYZGpjQzFsWkdsMFlXSnNaUzFqYjJ4dmNpazdYRzRnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTlRBbE8xeHVJQ0FnSUhvdGFXNWtaWGc2SURFN1hHNWNiaUFnSUNCMGNtRnVjMmwwYVc5dU9pQjJZWElvTFMxM1kzQXRabmd0WkdWbVlYVnNkQzFrZFhKaGRHbHZiaWtnWldGelpTMXZkWFE3WEc0Z0lDQWdkSEpoYm5OcGRHbHZiaTF3Y205d1pYSjBlVG9nYUdWcFoyaDBMQ0JwYm5ObGRDd2diM0JoWTJsMGVTd2dkMmxrZEdnN1hHNGdJQ0FnZDJsc2JDMWphR0Z1WjJVNklHaGxhV2RvZEN3Z2FXNXpaWFFzSUc5d1lXTnBkSGtzSUhkcFpIUm9PMXh1SUNCOVhHNTlYRzVjYmpwb2IzTjBLRnRqYUdWamEyVmtYVnRrYVhOaFlteGxaRjBwT2pwaFpuUmxjaUI3WEc0Z0lHOXdZV05wZEhrNklEQXVOVHRjYm4xY2JseHVhVzV3ZFhRZ2UxeHVJQ0JoYkd3NklIVnVjMlYwTzF4dUlDQmhjSEJsWVhKaGJtTmxPaUJ1YjI1bE8xeHVJQ0JqZFhKemIzSTZJSEJ2YVc1MFpYSTdYRzVjYmlBZ1ltOTRMWE5wZW1sdVp6b2dZbTl5WkdWeUxXSnZlRHRjYmlBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lHaGxhV2RvZERvZ01EdGNiaUFnZDJsa2RHZzZJREE3WEc0Z0lHMWhjbWRwYmkxeWFXZG9kRG9nZG1GeUtDMHRMWGRqY0MxbFpHbDBZV0pzWlMxemNHRmphVzVuS1R0Y2JseHVJQ0F2THlCaGN5QjNaU2R5WlNCMWMybHVaeUIwYUdVZ1ltOXlaR1Z5SUhSdklITndZV05sSUhSb1pTQmphR1ZqYXlCdFlYSnJJSGRwZEdnZ2RHaGxJR0poWTJ0bmNtOTFibVFzWEc0Z0lDOHZJSGRsSUhWelpTQjBhR1VnYjNWMGJHbHVaU0JoY3lCaFkzUjFZV3dnWW05eVpHVnlPeUIwYUhWekxDQjNaU0JvWVhabElIUnZJSE4xWW5SeVlXTjBJSFJvWlNCM2FXUjBhRnh1SUNBdkx5QnZaaUIwYUdVZ2IzVjBiR2x1WlNCbWNtOXRJSFJvWlNCemFYcGxJRzltSUhSb1pTQnlZV1JwYnlCaWRYUjBiMjRnWVc1a0lHRmtaQ0JoSUhCaFpHUnBibWNnZEc5Y2JpQWdMeThnWTI5dGNHVnVjMkYwWlNCbWIzSWdkR2hsSUc5MWRHeHBibVVnS0hkb2FXTm9JR2x6SUc1dmRDQndZWEowSUc5bUlIUm9aU0JnWW05eVpHVnlMV0p2ZUdBcFhHNGdJQzh2SUdoMGRIQnpPaTh2ZDNkM0xuY3pjMk5vYjI5c2N5NWpiMjB2WTNOekwyTnpjMTl2ZFhSc2FXNWxMbUZ6Y0Z4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQjJZWElvTFMwdGQyTndMV1ZrYVhSaFlteGxMV0poWTJ0bmNtOTFibVFwTzF4dUlDQnZkWFJzYVc1bE9pQjJZWElvTFMwdGQyTndMV1ZrYVhSaFlteGxMV0p2Y21SbGNpMXphWHBsS1NCemIyeHBaQ0IyWVhJb0xTMHRkMk53TFdWa2FYUmhZbXhsTFdKdmNtUmxjaWs3WEc0Z0lHOTFkR3hwYm1VdGIyWm1jMlYwT2lCallXeGpLSFpoY2lndExTMTNZM0F0WldScGRHRmliR1V0WW05eVpHVnlMWE5wZW1VcElDb2dMVEVwTzF4dUlDQmliM0prWlhJdGNtRmthWFZ6T2lBMU1DVTdYRzVjYmlBZ0x5OGdkMlVuY21VZ1pHOXBibWNnWVd4c0lIUnlZVzV6YVhScGIyNXpJR1JwY21WamRHeDVJRzl1SUhSb1pTQnBibkIxZEZ4dUlDQjBjbUZ1YzJsMGFXOXVPaUIyWVhJb0xTMTNZM0F0Wm5ndFpHVm1ZWFZzZEMxa2RYSmhkR2x2YmlrZ1pXRnpaUzF2ZFhRN1hHNGdJSFJ5WVc1emFYUnBiMjR0Y0hKdmNHVnlkSGs2SUc5d1lXTnBkSGtzSUc5MWRHeHBibVV0YjJabWMyVjBMQ0J2ZFhSc2FXNWxMWGRwWkhSb08xeHVJQ0IzYVd4c0xXTm9ZVzVuWlRvZ2IzQmhZMmwwZVN3Z2IzVjBiR2x1WlMxdlptWnpaWFFzSUc5MWRHeHBibVV0ZDJsa2RHZzdYRzU5WEc0aVhYMD0lMjAqIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0UsMEZBQUE7RUFFQSwwREFBQTtFQUNBLGlFQUFBO0VBQ0EsNEZBQUE7RUFFQSwwRUFBQTtFQUNBLHNFQUFBO0VBRUEseUVBQUE7RUFDQSxxRUFBQTtFQUVBLHNFQUFBO0VBQ0EsOERBQUE7RUFDQSw0REFBQTtFQUVBLHdFQUFBO0VBQ0EsZ0VBQUE7RUFDQSw4REFBQTtBQ05GOztBRFNBO0VBQ0UsaUJBQUE7QUNORjs7QURTQTtFQUNFLGlCQUFBO0VBQ0EsVUFBQTtBQ05GOztBRFNBO0VBQ0Usa0JBQUE7QUNORjtBRFFFO0VBQ0UsV0FBQTtFQUNBLG9CQUFBO0VBRUEsY0FBQTtFQUNBLGdEQUFBO0VBQ0EsK0NBQUE7RUFFQSxrQkFBQTtFQUNBLDZDQUFBO0VBQUEsV0FBQTtFQUFBLFlBQUE7RUFBQSw4Q0FBQTtFQUNBLGdDQUFBO0VBRUEsc0NBQUE7RUFDQSxrQkFBQTtFQUNBLFVBQUE7RUFFQSxtREFBQTtFQUNBLGtEQUFBO0VBQ0EsMENBQUE7QUNWSjs7QURjQTtFQUNFLFlBQUE7QUNYRjs7QURjQTtFQUNFLFVBQUE7RUFDQSx3QkFBQTtLQUFBLHFCQUFBO1VBQUEsZ0JBQUE7RUFDQSxlQUFBO0VBRUEsc0JBQUE7RUFDQSxjQUFBO0VBQ0EsU0FBQTtFQUNBLFFBQUE7RUFDQSwwQ0FBQTtFQU9BLGlEQUFBO0VBQ0EsMkVBQUE7RUFDQSwyREFBQTtFQUNBLGtCQUFBO0VBR0EsbURBQUE7RUFDQSwyREFBQTtFQUNBLG1EQUFBO0FDcEJGIiwiZmlsZSI6Ijpob3N0IHtcbiAgLS0td2NwLWlucHV0LXJhZGlvLXNpemU6IHZhcigtLXdjcC1pbnB1dC1yYWRpby1zaXplLCBjYWxjKHZhcigtLXdjcC1iYXNlLXNpemUsIDEwcHgpICogMikpO1xuICAtLXdjcC1lZGl0YWJsZS1oaW50LXNpemU6IHZhcigtLXdjcC1pbnB1dC1yYWRpby1oaW50LXNpemUpO1xuICAtLXdjcC1lZGl0YWJsZS1sYWJlbC1zaXplOiB2YXIoLS13Y3AtaW5wdXQtcmFkaW8tbGFiZWwtc2l6ZSwgMWVtKTtcbiAgLS13Y3AtZWRpdGFibGUtc3BhY2luZzogdmFyKC0td2NwLWlucHV0LXJhZGlvLXNwYWNpbmcsIGNhbGModmFyKC0td2NwLWJhc2Utc2l6ZSwgMTBweCkgKiAxKSk7XG4gIC0td2NwLWVkaXRhYmxlLXBhc3NpdmUtYm9yZGVyLXJhZGl1czogdmFyKC0td2NwLWlucHV0LXJhZGlvLWJvcmRlci1yYWRpdXMpO1xuICAtLXdjcC1lZGl0YWJsZS1wYXNzaXZlLWJvcmRlci1zaXplOiB2YXIoLS13Y3AtaW5wdXQtcmFkaW8tYm9yZGVyLXNpemUpO1xuICAtLXdjcC1lZGl0YWJsZS1hY3RpdmUtYm9yZGVyLXJhZGl1czogdmFyKC0td2NwLWlucHV0LXJhZGlvLWJvcmRlci1yYWRpdXMpO1xuICAtLXdjcC1lZGl0YWJsZS1hY3RpdmUtYm9yZGVyLXNpemU6IHZhcigtLXdjcC1pbnB1dC1yYWRpby1ib3JkZXItc2l6ZSk7XG4gIC0td2NwLWVkaXRhYmxlLWRhcmstYmFja2dyb3VuZDogdmFyKC0td2NwLWlucHV0LXJhZGlvLWRhcmstYmFja2dyb3VuZCk7XG4gIC0td2NwLWVkaXRhYmxlLWRhcmstYm9yZGVyOiB2YXIoLS13Y3AtaW5wdXQtcmFkaW8tZGFyay1ib3JkZXIpO1xuICAtLXdjcC1lZGl0YWJsZS1kYXJrLWNvbG9yOiB2YXIoLS13Y3AtaW5wdXQtcmFkaW8tZGFyay1jb2xvcik7XG4gIC0td2NwLWVkaXRhYmxlLWxpZ2h0LWJhY2tncm91bmQ6IHZhcigtLXdjcC1pbnB1dC1yYWRpby1saWdodC1iYWNrZ3JvdW5kKTtcbiAgLS13Y3AtZWRpdGFibGUtbGlnaHQtYm9yZGVyOiB2YXIoLS13Y3AtaW5wdXQtcmFkaW8tbGlnaHQtYm9yZGVyKTtcbiAgLS13Y3AtZWRpdGFibGUtbGlnaHQtY29sb3I6IHZhcigtLXdjcC1pbnB1dC1yYWRpby1saWdodC1jb2xvcik7XG59XG5cbiNpbnB1dCB7XG4gIGdyaWQtYXJlYTogYmVmb3JlO1xufVxuXG5sYWJlbCB7XG4gIGdyaWQtYXJlYTogY2VudGVyO1xuICBwYWRkaW5nOiAwO1xufVxuXG46aG9zdChbY2hlY2tlZF0pIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuOmhvc3QoW2NoZWNrZWRdKTo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogY2FsYyh2YXIoLS0td2NwLWlucHV0LXJhZGlvLXNpemUpICogMC41KTtcbiAgd2lkdGg6IGNhbGModmFyKC0tLXdjcC1pbnB1dC1yYWRpby1zaXplKSAqIDAuNSk7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgaW5zZXQ6IGNhbGModmFyKC0tLXdjcC1pbnB1dC1yYWRpby1zaXplKSAqIDAuNSkgYXV0byBhdXRvIGNhbGModmFyKC0tLXdjcC1pbnB1dC1yYWRpby1zaXplKSAqIDAuNSk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICBiYWNrZ3JvdW5kOiB2YXIoLS0td2NwLWVkaXRhYmxlLWNvbG9yKTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICB6LWluZGV4OiAxO1xuICB0cmFuc2l0aW9uOiB2YXIoLS13Y3AtZngtZGVmYXVsdC1kdXJhdGlvbikgZWFzZS1vdXQ7XG4gIHRyYW5zaXRpb24tcHJvcGVydHk6IGhlaWdodCwgaW5zZXQsIG9wYWNpdHksIHdpZHRoO1xuICB3aWxsLWNoYW5nZTogaGVpZ2h0LCBpbnNldCwgb3BhY2l0eSwgd2lkdGg7XG59XG5cbjpob3N0KFtjaGVja2VkXVtkaXNhYmxlZF0pOjphZnRlciB7XG4gIG9wYWNpdHk6IDAuNTtcbn1cblxuaW5wdXQge1xuICBhbGw6IHVuc2V0O1xuICBhcHBlYXJhbmNlOiBub25lO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDA7XG4gIHdpZHRoOiAwO1xuICBtYXJnaW4tcmlnaHQ6IHZhcigtLS13Y3AtZWRpdGFibGUtc3BhY2luZyk7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLS13Y3AtZWRpdGFibGUtYmFja2dyb3VuZCk7XG4gIG91dGxpbmU6IHZhcigtLS13Y3AtZWRpdGFibGUtYm9yZGVyLXNpemUpIHNvbGlkIHZhcigtLS13Y3AtZWRpdGFibGUtYm9yZGVyKTtcbiAgb3V0bGluZS1vZmZzZXQ6IGNhbGModmFyKC0tLXdjcC1lZGl0YWJsZS1ib3JkZXItc2l6ZSkgKiAtMSk7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgdHJhbnNpdGlvbjogdmFyKC0td2NwLWZ4LWRlZmF1bHQtZHVyYXRpb24pIGVhc2Utb3V0O1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBvcGFjaXR5LCBvdXRsaW5lLW9mZnNldCwgb3V0bGluZS13aWR0aDtcbiAgd2lsbC1jaGFuZ2U6IG9wYWNpdHksIG91dGxpbmUtb2Zmc2V0LCBvdXRsaW5lLXdpZHRoO1xufVxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVlNiMjkwSWpvaUwyaHZiV1V2Y25WdWJtVnlMM2R2Y21zdlkyeHBaVzUwTDJOc2FXVnVkQzl6Y21NdlkyOXRjRzl1Wlc1MGN5OW1iM0p0Y3k5cGJuQjFkQzF5WVdScGJ5SXNJbk52ZFhKalpYTWlPbHNpYVc1d2RYUXRjbUZrYVc4dVkyOXRjRzl1Wlc1MExuTmpjM01pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUlVFN1JVRkRSVHRGUVVWQk8wVkJRMEU3UlVGRFFUdEZRVVZCTzBWQlEwRTdSVUZGUVR0RlFVTkJPMFZCUlVFN1JVRkRRVHRGUVVOQk8wVkJSVUU3UlVGRFFUdEZRVU5CT3pzN1FVRkhSanRGUVVORk96czdRVUZIUmp0RlFVTkZPMFZCUTBFN096dEJRVWRHTzBWQlEwVTdPMEZCUlVFN1JVRkRSVHRGUVVOQk8wVkJSVUU3UlVGRFFUdEZRVU5CTzBWQlJVRTdSVUZEUVR0RlFVTkJPMFZCUlVFN1JVRkRRVHRGUVVOQk8wVkJSVUU3UlVGRFFUdEZRVU5CT3pzN1FVRkpTanRGUVVORk96czdRVUZIUmp0RlFVTkZPMFZCUTBFN1JVRkRRVHRGUVVWQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZQUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVkQk8wVkJRMEU3UlVGRFFTSXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJa0IxYzJVZ0owQXZjM1I1YkdWekwzVjBhV3h6SnlCaGN5QjFkR2xzY3p0Y2JseHVPbWh2YzNRZ2UxeHVJQ0F0TFMxM1kzQXRhVzV3ZFhRdGNtRmthVzh0YzJsNlpUb2dkbUZ5S0MwdGQyTndMV2x1Y0hWMExYSmhaR2x2TFhOcGVtVXNJQ043ZFhScGJITXVjMmw2WlNneUtYMHBPMXh1WEc0Z0lDMHRkMk53TFdWa2FYUmhZbXhsTFdocGJuUXRjMmw2WlRvZ2RtRnlLQzB0ZDJOd0xXbHVjSFYwTFhKaFpHbHZMV2hwYm5RdGMybDZaU2s3WEc0Z0lDMHRkMk53TFdWa2FYUmhZbXhsTFd4aFltVnNMWE5wZW1VNklIWmhjaWd0TFhkamNDMXBibkIxZEMxeVlXUnBieTFzWVdKbGJDMXphWHBsTENBeFpXMHBPMXh1SUNBdExYZGpjQzFsWkdsMFlXSnNaUzF6Y0dGamFXNW5PaUIyWVhJb0xTMTNZM0F0YVc1d2RYUXRjbUZrYVc4dGMzQmhZMmx1Wnl3Z0kzdDFkR2xzY3k1emFYcGxLREVwZlNrN1hHNWNiaUFnTFMxM1kzQXRaV1JwZEdGaWJHVXRjR0Z6YzJsMlpTMWliM0prWlhJdGNtRmthWFZ6T2lCMllYSW9MUzEzWTNBdGFXNXdkWFF0Y21Ga2FXOHRZbTl5WkdWeUxYSmhaR2wxY3lrN1hHNGdJQzB0ZDJOd0xXVmthWFJoWW14bExYQmhjM05wZG1VdFltOXlaR1Z5TFhOcGVtVTZJSFpoY2lndExYZGpjQzFwYm5CMWRDMXlZV1JwYnkxaWIzSmtaWEl0YzJsNlpTazdYRzVjYmlBZ0xTMTNZM0F0WldScGRHRmliR1V0WVdOMGFYWmxMV0p2Y21SbGNpMXlZV1JwZFhNNklIWmhjaWd0TFhkamNDMXBibkIxZEMxeVlXUnBieTFpYjNKa1pYSXRjbUZrYVhWektUdGNiaUFnTFMxM1kzQXRaV1JwZEdGaWJHVXRZV04wYVhabExXSnZjbVJsY2kxemFYcGxPaUIyWVhJb0xTMTNZM0F0YVc1d2RYUXRjbUZrYVc4dFltOXlaR1Z5TFhOcGVtVXBPMXh1WEc0Z0lDMHRkMk53TFdWa2FYUmhZbXhsTFdSaGNtc3RZbUZqYTJkeWIzVnVaRG9nZG1GeUtDMHRkMk53TFdsdWNIVjBMWEpoWkdsdkxXUmhjbXN0WW1GamEyZHliM1Z1WkNrN1hHNGdJQzB0ZDJOd0xXVmthWFJoWW14bExXUmhjbXN0WW05eVpHVnlPaUIyWVhJb0xTMTNZM0F0YVc1d2RYUXRjbUZrYVc4dFpHRnlheTFpYjNKa1pYSXBPMXh1SUNBdExYZGpjQzFsWkdsMFlXSnNaUzFrWVhKckxXTnZiRzl5T2lCMllYSW9MUzEzWTNBdGFXNXdkWFF0Y21Ga2FXOHRaR0Z5YXkxamIyeHZjaWs3WEc1Y2JpQWdMUzEzWTNBdFpXUnBkR0ZpYkdVdGJHbG5hSFF0WW1GamEyZHliM1Z1WkRvZ2RtRnlLQzB0ZDJOd0xXbHVjSFYwTFhKaFpHbHZMV3hwWjJoMExXSmhZMnRuY205MWJtUXBPMXh1SUNBdExYZGpjQzFsWkdsMFlXSnNaUzFzYVdkb2RDMWliM0prWlhJNklIWmhjaWd0TFhkamNDMXBibkIxZEMxeVlXUnBieTFzYVdkb2RDMWliM0prWlhJcE8xeHVJQ0F0TFhkamNDMWxaR2wwWVdKc1pTMXNhV2RvZEMxamIyeHZjam9nZG1GeUtDMHRkMk53TFdsdWNIVjBMWEpoWkdsdkxXeHBaMmgwTFdOdmJHOXlLVHRjYm4xY2JseHVJMmx1Y0hWMElIdGNiaUFnWjNKcFpDMWhjbVZoT2lCaVpXWnZjbVU3WEc1OVhHNWNibXhoWW1Wc0lIdGNiaUFnWjNKcFpDMWhjbVZoT2lCalpXNTBaWEk3WEc0Z0lIQmhaR1JwYm1jNklEQTdYRzU5WEc1Y2JqcG9iM04wS0Z0amFHVmphMlZrWFNrZ2UxeHVJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc1Y2JpQWdKam82WVdaMFpYSWdlMXh1SUNBZ0lHTnZiblJsYm5RNklDY25PMXh1SUNBZ0lIQnZhVzUwWlhJdFpYWmxiblJ6T2lCdWIyNWxPMXh1WEc0Z0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJQ0FnYUdWcFoyaDBPaUJqWVd4aktIWmhjaWd0TFMxM1kzQXRhVzV3ZFhRdGNtRmthVzh0YzJsNlpTa2dLaUF3TGpVcE8xeHVJQ0FnSUhkcFpIUm9PaUJqWVd4aktIWmhjaWd0TFMxM1kzQXRhVzV3ZFhRdGNtRmthVzh0YzJsNlpTa2dLaUF3TGpVcE8xeHVYRzRnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUdsdWMyVjBPaUJqWVd4aktIWmhjaWd0TFMxM1kzQXRhVzV3ZFhRdGNtRmthVzh0YzJsNlpTa2dLaUF3TGpVcElHRjFkRzhnWVhWMGJ5QmpZV3hqS0haaGNpZ3RMUzEzWTNBdGFXNXdkWFF0Y21Ga2FXOHRjMmw2WlNrZ0tpQXdMalVwTzF4dUlDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsS0MwMU1DVXNJQzAxTUNVcE8xeHVYRzRnSUNBZ1ltRmphMmR5YjNWdVpEb2dkbUZ5S0MwdExYZGpjQzFsWkdsMFlXSnNaUzFqYjJ4dmNpazdYRzRnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTlRBbE8xeHVJQ0FnSUhvdGFXNWtaWGc2SURFN1hHNWNiaUFnSUNCMGNtRnVjMmwwYVc5dU9pQjJZWElvTFMxM1kzQXRabmd0WkdWbVlYVnNkQzFrZFhKaGRHbHZiaWtnWldGelpTMXZkWFE3WEc0Z0lDQWdkSEpoYm5OcGRHbHZiaTF3Y205d1pYSjBlVG9nYUdWcFoyaDBMQ0JwYm5ObGRDd2diM0JoWTJsMGVTd2dkMmxrZEdnN1hHNGdJQ0FnZDJsc2JDMWphR0Z1WjJVNklHaGxhV2RvZEN3Z2FXNXpaWFFzSUc5d1lXTnBkSGtzSUhkcFpIUm9PMXh1SUNCOVhHNTlYRzVjYmpwb2IzTjBLRnRqYUdWamEyVmtYVnRrYVhOaFlteGxaRjBwT2pwaFpuUmxjaUI3WEc0Z0lHOXdZV05wZEhrNklEQXVOVHRjYm4xY2JseHVhVzV3ZFhRZ2UxeHVJQ0JoYkd3NklIVnVjMlYwTzF4dUlDQmhjSEJsWVhKaGJtTmxPaUJ1YjI1bE8xeHVJQ0JqZFhKemIzSTZJSEJ2YVc1MFpYSTdYRzVjYmlBZ1ltOTRMWE5wZW1sdVp6b2dZbTl5WkdWeUxXSnZlRHRjYmlBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lHaGxhV2RvZERvZ01EdGNiaUFnZDJsa2RHZzZJREE3WEc0Z0lHMWhjbWRwYmkxeWFXZG9kRG9nZG1GeUtDMHRMWGRqY0MxbFpHbDBZV0pzWlMxemNHRmphVzVuS1R0Y2JseHVJQ0F2THlCaGN5QjNaU2R5WlNCMWMybHVaeUIwYUdVZ1ltOXlaR1Z5SUhSdklITndZV05sSUhSb1pTQmphR1ZqYXlCdFlYSnJJSGRwZEdnZ2RHaGxJR0poWTJ0bmNtOTFibVFzWEc0Z0lDOHZJSGRsSUhWelpTQjBhR1VnYjNWMGJHbHVaU0JoY3lCaFkzUjFZV3dnWW05eVpHVnlPeUIwYUhWekxDQjNaU0JvWVhabElIUnZJSE4xWW5SeVlXTjBJSFJvWlNCM2FXUjBhRnh1SUNBdkx5QnZaaUIwYUdVZ2IzVjBiR2x1WlNCbWNtOXRJSFJvWlNCemFYcGxJRzltSUhSb1pTQnlZV1JwYnlCaWRYUjBiMjRnWVc1a0lHRmtaQ0JoSUhCaFpHUnBibWNnZEc5Y2JpQWdMeThnWTI5dGNHVnVjMkYwWlNCbWIzSWdkR2hsSUc5MWRHeHBibVVnS0hkb2FXTm9JR2x6SUc1dmRDQndZWEowSUc5bUlIUm9aU0JnWW05eVpHVnlMV0p2ZUdBcFhHNGdJQzh2SUdoMGRIQnpPaTh2ZDNkM0xuY3pjMk5vYjI5c2N5NWpiMjB2WTNOekwyTnpjMTl2ZFhSc2FXNWxMbUZ6Y0Z4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQjJZWElvTFMwdGQyTndMV1ZrYVhSaFlteGxMV0poWTJ0bmNtOTFibVFwTzF4dUlDQnZkWFJzYVc1bE9pQjJZWElvTFMwdGQyTndMV1ZrYVhSaFlteGxMV0p2Y21SbGNpMXphWHBsS1NCemIyeHBaQ0IyWVhJb0xTMHRkMk53TFdWa2FYUmhZbXhsTFdKdmNtUmxjaWs3WEc0Z0lHOTFkR3hwYm1VdGIyWm1jMlYwT2lCallXeGpLSFpoY2lndExTMTNZM0F0WldScGRHRmliR1V0WW05eVpHVnlMWE5wZW1VcElDb2dMVEVwTzF4dUlDQmliM0prWlhJdGNtRmthWFZ6T2lBMU1DVTdYRzVjYmlBZ0x5OGdkMlVuY21VZ1pHOXBibWNnWVd4c0lIUnlZVzV6YVhScGIyNXpJR1JwY21WamRHeDVJRzl1SUhSb1pTQnBibkIxZEZ4dUlDQjBjbUZ1YzJsMGFXOXVPaUIyWVhJb0xTMTNZM0F0Wm5ndFpHVm1ZWFZzZEMxa2RYSmhkR2x2YmlrZ1pXRnpaUzF2ZFhRN1hHNGdJSFJ5WVc1emFYUnBiMjR0Y0hKdmNHVnlkSGs2SUc5d1lXTnBkSGtzSUc5MWRHeHBibVV0YjJabWMyVjBMQ0J2ZFhSc2FXNWxMWGRwWkhSb08xeHVJQ0IzYVd4c0xXTm9ZVzVuWlRvZ2IzQmhZMmwwZVN3Z2IzVjBiR2x1WlMxdlptWnpaWFFzSUc5MWRHeHBibVV0ZDJsa2RHZzdYRzU5WEc0aVhYMD0gKiIsInNvdXJjZXNDb250ZW50IjpbIkB1c2UgJ0Avc3R5bGVzL3V0aWxzJyBhcyB1dGlscztcblxuOmhvc3Qge1xuICAtLS13Y3AtaW5wdXQtcmFkaW8tc2l6ZTogdmFyKC0td2NwLWlucHV0LXJhZGlvLXNpemUsICN7dXRpbHMuc2l6ZSgyKX0pO1xuXG4gIC0td2NwLWVkaXRhYmxlLWhpbnQtc2l6ZTogdmFyKC0td2NwLWlucHV0LXJhZGlvLWhpbnQtc2l6ZSk7XG4gIC0td2NwLWVkaXRhYmxlLWxhYmVsLXNpemU6IHZhcigtLXdjcC1pbnB1dC1yYWRpby1sYWJlbC1zaXplLCAxZW0pO1xuICAtLXdjcC1lZGl0YWJsZS1zcGFjaW5nOiB2YXIoLS13Y3AtaW5wdXQtcmFkaW8tc3BhY2luZywgI3t1dGlscy5zaXplKDEpfSk7XG5cbiAgLS13Y3AtZWRpdGFibGUtcGFzc2l2ZS1ib3JkZXItcmFkaXVzOiB2YXIoLS13Y3AtaW5wdXQtcmFkaW8tYm9yZGVyLXJhZGl1cyk7XG4gIC0td2NwLWVkaXRhYmxlLXBhc3NpdmUtYm9yZGVyLXNpemU6IHZhcigtLXdjcC1pbnB1dC1yYWRpby1ib3JkZXItc2l6ZSk7XG5cbiAgLS13Y3AtZWRpdGFibGUtYWN0aXZlLWJvcmRlci1yYWRpdXM6IHZhcigtLXdjcC1pbnB1dC1yYWRpby1ib3JkZXItcmFkaXVzKTtcbiAgLS13Y3AtZWRpdGFibGUtYWN0aXZlLWJvcmRlci1zaXplOiB2YXIoLS13Y3AtaW5wdXQtcmFkaW8tYm9yZGVyLXNpemUpO1xuXG4gIC0td2NwLWVkaXRhYmxlLWRhcmstYmFja2dyb3VuZDogdmFyKC0td2NwLWlucHV0LXJhZGlvLWRhcmstYmFja2dyb3VuZCk7XG4gIC0td2NwLWVkaXRhYmxlLWRhcmstYm9yZGVyOiB2YXIoLS13Y3AtaW5wdXQtcmFkaW8tZGFyay1ib3JkZXIpO1xuICAtLXdjcC1lZGl0YWJsZS1kYXJrLWNvbG9yOiB2YXIoLS13Y3AtaW5wdXQtcmFkaW8tZGFyay1jb2xvcik7XG5cbiAgLS13Y3AtZWRpdGFibGUtbGlnaHQtYmFja2dyb3VuZDogdmFyKC0td2NwLWlucHV0LXJhZGlvLWxpZ2h0LWJhY2tncm91bmQpO1xuICAtLXdjcC1lZGl0YWJsZS1saWdodC1ib3JkZXI6IHZhcigtLXdjcC1pbnB1dC1yYWRpby1saWdodC1ib3JkZXIpO1xuICAtLXdjcC1lZGl0YWJsZS1saWdodC1jb2xvcjogdmFyKC0td2NwLWlucHV0LXJhZGlvLWxpZ2h0LWNvbG9yKTtcbn1cblxuI2lucHV0IHtcbiAgZ3JpZC1hcmVhOiBiZWZvcmU7XG59XG5cbmxhYmVsIHtcbiAgZ3JpZC1hcmVhOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDA7XG59XG5cbjpob3N0KFtjaGVja2VkXSkge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJjo6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuXG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgaGVpZ2h0OiBjYWxjKHZhcigtLS13Y3AtaW5wdXQtcmFkaW8tc2l6ZSkgKiAwLjUpO1xuICAgIHdpZHRoOiBjYWxjKHZhcigtLS13Y3AtaW5wdXQtcmFkaW8tc2l6ZSkgKiAwLjUpO1xuXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGluc2V0OiBjYWxjKHZhcigtLS13Y3AtaW5wdXQtcmFkaW8tc2l6ZSkgKiAwLjUpIGF1dG8gYXV0byBjYWxjKHZhcigtLS13Y3AtaW5wdXQtcmFkaW8tc2l6ZSkgKiAwLjUpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuXG4gICAgYmFja2dyb3VuZDogdmFyKC0tLXdjcC1lZGl0YWJsZS1jb2xvcik7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIHotaW5kZXg6IDE7XG5cbiAgICB0cmFuc2l0aW9uOiB2YXIoLS13Y3AtZngtZGVmYXVsdC1kdXJhdGlvbikgZWFzZS1vdXQ7XG4gICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogaGVpZ2h0LCBpbnNldCwgb3BhY2l0eSwgd2lkdGg7XG4gICAgd2lsbC1jaGFuZ2U6IGhlaWdodCwgaW5zZXQsIG9wYWNpdHksIHdpZHRoO1xuICB9XG59XG5cbjpob3N0KFtjaGVja2VkXVtkaXNhYmxlZF0pOjphZnRlciB7XG4gIG9wYWNpdHk6IDAuNTtcbn1cblxuaW5wdXQge1xuICBhbGw6IHVuc2V0O1xuICBhcHBlYXJhbmNlOiBub25lO1xuICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMDtcbiAgd2lkdGg6IDA7XG4gIG1hcmdpbi1yaWdodDogdmFyKC0tLXdjcC1lZGl0YWJsZS1zcGFjaW5nKTtcblxuICAvLyBhcyB3ZSdyZSB1c2luZyB0aGUgYm9yZGVyIHRvIHNwYWNlIHRoZSBjaGVjayBtYXJrIHdpdGggdGhlIGJhY2tncm91bmQsXG4gIC8vIHdlIHVzZSB0aGUgb3V0bGluZSBhcyBhY3R1YWwgYm9yZGVyOyB0aHVzLCB3ZSBoYXZlIHRvIHN1YnRyYWN0IHRoZSB3aWR0aFxuICAvLyBvZiB0aGUgb3V0bGluZSBmcm9tIHRoZSBzaXplIG9mIHRoZSByYWRpbyBidXR0b24gYW5kIGFkZCBhIHBhZGRpbmcgdG9cbiAgLy8gY29tcGVuc2F0ZSBmb3IgdGhlIG91dGxpbmUgKHdoaWNoIGlzIG5vdCBwYXJ0IG9mIHRoZSBgYm9yZGVyLWJveGApXG4gIC8vIGh0dHBzOi8vd3d3Lnczc2Nob29scy5jb20vY3NzL2Nzc19vdXRsaW5lLmFzcFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS0td2NwLWVkaXRhYmxlLWJhY2tncm91bmQpO1xuICBvdXRsaW5lOiB2YXIoLS0td2NwLWVkaXRhYmxlLWJvcmRlci1zaXplKSBzb2xpZCB2YXIoLS0td2NwLWVkaXRhYmxlLWJvcmRlcik7XG4gIG91dGxpbmUtb2Zmc2V0OiBjYWxjKHZhcigtLS13Y3AtZWRpdGFibGUtYm9yZGVyLXNpemUpICogLTEpO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG5cbiAgLy8gd2UncmUgZG9pbmcgYWxsIHRyYW5zaXRpb25zIGRpcmVjdGx5IG9uIHRoZSBpbnB1dFxuICB0cmFuc2l0aW9uOiB2YXIoLS13Y3AtZngtZGVmYXVsdC1kdXJhdGlvbikgZWFzZS1vdXQ7XG4gIHRyYW5zaXRpb24tcHJvcGVydHk6IG9wYWNpdHksIG91dGxpbmUtb2Zmc2V0LCBvdXRsaW5lLXdpZHRoO1xuICB3aWxsLWNoYW5nZTogb3BhY2l0eSwgb3V0bGluZS1vZmZzZXQsIG91dGxpbmUtd2lkdGg7XG59XG4iLCI6aG9zdCB7XG4gIC0tLXdjcC1pbnB1dC1yYWRpby1zaXplOiB2YXIoLS13Y3AtaW5wdXQtcmFkaW8tc2l6ZSwgY2FsYyh2YXIoLS13Y3AtYmFzZS1zaXplLCAxMHB4KSAqIDIpKTtcbiAgLS13Y3AtZWRpdGFibGUtaGludC1zaXplOiB2YXIoLS13Y3AtaW5wdXQtcmFkaW8taGludC1zaXplKTtcbiAgLS13Y3AtZWRpdGFibGUtbGFiZWwtc2l6ZTogdmFyKC0td2NwLWlucHV0LXJhZGlvLWxhYmVsLXNpemUsIDFlbSk7XG4gIC0td2NwLWVkaXRhYmxlLXNwYWNpbmc6IHZhcigtLXdjcC1pbnB1dC1yYWRpby1zcGFjaW5nLCBjYWxjKHZhcigtLXdjcC1iYXNlLXNpemUsIDEwcHgpICogMSkpO1xuICAtLXdjcC1lZGl0YWJsZS1wYXNzaXZlLWJvcmRlci1yYWRpdXM6IHZhcigtLXdjcC1pbnB1dC1yYWRpby1ib3JkZXItcmFkaXVzKTtcbiAgLS13Y3AtZWRpdGFibGUtcGFzc2l2ZS1ib3JkZXItc2l6ZTogdmFyKC0td2NwLWlucHV0LXJhZGlvLWJvcmRlci1zaXplKTtcbiAgLS13Y3AtZWRpdGFibGUtYWN0aXZlLWJvcmRlci1yYWRpdXM6IHZhcigtLXdjcC1pbnB1dC1yYWRpby1ib3JkZXItcmFkaXVzKTtcbiAgLS13Y3AtZWRpdGFibGUtYWN0aXZlLWJvcmRlci1zaXplOiB2YXIoLS13Y3AtaW5wdXQtcmFkaW8tYm9yZGVyLXNpemUpO1xuICAtLXdjcC1lZGl0YWJsZS1kYXJrLWJhY2tncm91bmQ6IHZhcigtLXdjcC1pbnB1dC1yYWRpby1kYXJrLWJhY2tncm91bmQpO1xuICAtLXdjcC1lZGl0YWJsZS1kYXJrLWJvcmRlcjogdmFyKC0td2NwLWlucHV0LXJhZGlvLWRhcmstYm9yZGVyKTtcbiAgLS13Y3AtZWRpdGFibGUtZGFyay1jb2xvcjogdmFyKC0td2NwLWlucHV0LXJhZGlvLWRhcmstY29sb3IpO1xuICAtLXdjcC1lZGl0YWJsZS1saWdodC1iYWNrZ3JvdW5kOiB2YXIoLS13Y3AtaW5wdXQtcmFkaW8tbGlnaHQtYmFja2dyb3VuZCk7XG4gIC0td2NwLWVkaXRhYmxlLWxpZ2h0LWJvcmRlcjogdmFyKC0td2NwLWlucHV0LXJhZGlvLWxpZ2h0LWJvcmRlcik7XG4gIC0td2NwLWVkaXRhYmxlLWxpZ2h0LWNvbG9yOiB2YXIoLS13Y3AtaW5wdXQtcmFkaW8tbGlnaHQtY29sb3IpO1xufVxuXG4jaW5wdXQge1xuICBncmlkLWFyZWE6IGJlZm9yZTtcbn1cblxubGFiZWwge1xuICBncmlkLWFyZWE6IGNlbnRlcjtcbiAgcGFkZGluZzogMDtcbn1cblxuOmhvc3QoW2NoZWNrZWRdKSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbjpob3N0KFtjaGVja2VkXSk6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IGNhbGModmFyKC0tLXdjcC1pbnB1dC1yYWRpby1zaXplKSAqIDAuNSk7XG4gIHdpZHRoOiBjYWxjKHZhcigtLS13Y3AtaW5wdXQtcmFkaW8tc2l6ZSkgKiAwLjUpO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGluc2V0OiBjYWxjKHZhcigtLS13Y3AtaW5wdXQtcmFkaW8tc2l6ZSkgKiAwLjUpIGF1dG8gYXV0byBjYWxjKHZhcigtLS13Y3AtaW5wdXQtcmFkaW8tc2l6ZSkgKiAwLjUpO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgYmFja2dyb3VuZDogdmFyKC0tLXdjcC1lZGl0YWJsZS1jb2xvcik7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgei1pbmRleDogMTtcbiAgdHJhbnNpdGlvbjogdmFyKC0td2NwLWZ4LWRlZmF1bHQtZHVyYXRpb24pIGVhc2Utb3V0O1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBoZWlnaHQsIGluc2V0LCBvcGFjaXR5LCB3aWR0aDtcbiAgd2lsbC1jaGFuZ2U6IGhlaWdodCwgaW5zZXQsIG9wYWNpdHksIHdpZHRoO1xufVxuXG46aG9zdChbY2hlY2tlZF1bZGlzYWJsZWRdKTo6YWZ0ZXIge1xuICBvcGFjaXR5OiAwLjU7XG59XG5cbmlucHV0IHtcbiAgYWxsOiB1bnNldDtcbiAgYXBwZWFyYW5jZTogbm9uZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAwO1xuICB3aWR0aDogMDtcbiAgbWFyZ2luLXJpZ2h0OiB2YXIoLS0td2NwLWVkaXRhYmxlLXNwYWNpbmcpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS0td2NwLWVkaXRhYmxlLWJhY2tncm91bmQpO1xuICBvdXRsaW5lOiB2YXIoLS0td2NwLWVkaXRhYmxlLWJvcmRlci1zaXplKSBzb2xpZCB2YXIoLS0td2NwLWVkaXRhYmxlLWJvcmRlcik7XG4gIG91dGxpbmUtb2Zmc2V0OiBjYWxjKHZhcigtLS13Y3AtZWRpdGFibGUtYm9yZGVyLXNpemUpICogLTEpO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIHRyYW5zaXRpb246IHZhcigtLXdjcC1meC1kZWZhdWx0LWR1cmF0aW9uKSBlYXNlLW91dDtcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogb3BhY2l0eSwgb3V0bGluZS1vZmZzZXQsIG91dGxpbmUtd2lkdGg7XG4gIHdpbGwtY2hhbmdlOiBvcGFjaXR5LCBvdXRsaW5lLW9mZnNldCwgb3V0bGluZS13aWR0aDtcbn1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZTYjI5MElqb2lMMmh2YldVdmNuVnVibVZ5TDNkdmNtc3ZZMnhwWlc1MEwyTnNhV1Z1ZEM5emNtTXZZMjl0Y0c5dVpXNTBjeTltYjNKdGN5OXBibkIxZEMxeVlXUnBieUlzSW5OdmRYSmpaWE1pT2xzaWFXNXdkWFF0Y21Ga2FXOHVZMjl0Y0c5dVpXNTBMbk5qYzNNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlJVRTdSVUZEUlR0RlFVVkJPMFZCUTBFN1JVRkRRVHRGUVVWQk8wVkJRMEU3UlVGRlFUdEZRVU5CTzBWQlJVRTdSVUZEUVR0RlFVTkJPMFZCUlVFN1JVRkRRVHRGUVVOQk96czdRVUZIUmp0RlFVTkZPenM3UVVGSFJqdEZRVU5GTzBWQlEwRTdPenRCUVVkR08wVkJRMFU3TzBGQlJVRTdSVUZEUlR0RlFVTkJPMFZCUlVFN1JVRkRRVHRGUVVOQk8wVkJSVUU3UlVGRFFUdEZRVU5CTzBWQlJVRTdSVUZEUVR0RlFVTkJPMFZCUlVFN1JVRkRRVHRGUVVOQk96czdRVUZKU2p0RlFVTkZPenM3UVVGSFJqdEZRVU5GTzBWQlEwRTdSVUZEUVR0RlFVVkJPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGUFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVZEJPMFZCUTBFN1JVRkRRU0lzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWtCMWMyVWdKMEF2YzNSNWJHVnpMM1YwYVd4ekp5QmhjeUIxZEdsc2N6dGNibHh1T21odmMzUWdlMXh1SUNBdExTMTNZM0F0YVc1d2RYUXRjbUZrYVc4dGMybDZaVG9nZG1GeUtDMHRkMk53TFdsdWNIVjBMWEpoWkdsdkxYTnBlbVVzSUNON2RYUnBiSE11YzJsNlpTZ3lLWDBwTzF4dVhHNGdJQzB0ZDJOd0xXVmthWFJoWW14bExXaHBiblF0YzJsNlpUb2dkbUZ5S0MwdGQyTndMV2x1Y0hWMExYSmhaR2x2TFdocGJuUXRjMmw2WlNrN1hHNGdJQzB0ZDJOd0xXVmthWFJoWW14bExXeGhZbVZzTFhOcGVtVTZJSFpoY2lndExYZGpjQzFwYm5CMWRDMXlZV1JwYnkxc1lXSmxiQzF6YVhwbExDQXhaVzBwTzF4dUlDQXRMWGRqY0MxbFpHbDBZV0pzWlMxemNHRmphVzVuT2lCMllYSW9MUzEzWTNBdGFXNXdkWFF0Y21Ga2FXOHRjM0JoWTJsdVp5d2dJM3QxZEdsc2N5NXphWHBsS0RFcGZTazdYRzVjYmlBZ0xTMTNZM0F0WldScGRHRmliR1V0Y0dGemMybDJaUzFpYjNKa1pYSXRjbUZrYVhWek9pQjJZWElvTFMxM1kzQXRhVzV3ZFhRdGNtRmthVzh0WW05eVpHVnlMWEpoWkdsMWN5azdYRzRnSUMwdGQyTndMV1ZrYVhSaFlteGxMWEJoYzNOcGRtVXRZbTl5WkdWeUxYTnBlbVU2SUhaaGNpZ3RMWGRqY0MxcGJuQjFkQzF5WVdScGJ5MWliM0prWlhJdGMybDZaU2s3WEc1Y2JpQWdMUzEzWTNBdFpXUnBkR0ZpYkdVdFlXTjBhWFpsTFdKdmNtUmxjaTF5WVdScGRYTTZJSFpoY2lndExYZGpjQzFwYm5CMWRDMXlZV1JwYnkxaWIzSmtaWEl0Y21Ga2FYVnpLVHRjYmlBZ0xTMTNZM0F0WldScGRHRmliR1V0WVdOMGFYWmxMV0p2Y21SbGNpMXphWHBsT2lCMllYSW9MUzEzWTNBdGFXNXdkWFF0Y21Ga2FXOHRZbTl5WkdWeUxYTnBlbVVwTzF4dVhHNGdJQzB0ZDJOd0xXVmthWFJoWW14bExXUmhjbXN0WW1GamEyZHliM1Z1WkRvZ2RtRnlLQzB0ZDJOd0xXbHVjSFYwTFhKaFpHbHZMV1JoY21zdFltRmphMmR5YjNWdVpDazdYRzRnSUMwdGQyTndMV1ZrYVhSaFlteGxMV1JoY21zdFltOXlaR1Z5T2lCMllYSW9MUzEzWTNBdGFXNXdkWFF0Y21Ga2FXOHRaR0Z5YXkxaWIzSmtaWElwTzF4dUlDQXRMWGRqY0MxbFpHbDBZV0pzWlMxa1lYSnJMV052Ykc5eU9pQjJZWElvTFMxM1kzQXRhVzV3ZFhRdGNtRmthVzh0WkdGeWF5MWpiMnh2Y2lrN1hHNWNiaUFnTFMxM1kzQXRaV1JwZEdGaWJHVXRiR2xuYUhRdFltRmphMmR5YjNWdVpEb2dkbUZ5S0MwdGQyTndMV2x1Y0hWMExYSmhaR2x2TFd4cFoyaDBMV0poWTJ0bmNtOTFibVFwTzF4dUlDQXRMWGRqY0MxbFpHbDBZV0pzWlMxc2FXZG9kQzFpYjNKa1pYSTZJSFpoY2lndExYZGpjQzFwYm5CMWRDMXlZV1JwYnkxc2FXZG9kQzFpYjNKa1pYSXBPMXh1SUNBdExYZGpjQzFsWkdsMFlXSnNaUzFzYVdkb2RDMWpiMnh2Y2pvZ2RtRnlLQzB0ZDJOd0xXbHVjSFYwTFhKaFpHbHZMV3hwWjJoMExXTnZiRzl5S1R0Y2JuMWNibHh1STJsdWNIVjBJSHRjYmlBZ1ozSnBaQzFoY21WaE9pQmlaV1p2Y21VN1hHNTlYRzVjYm14aFltVnNJSHRjYmlBZ1ozSnBaQzFoY21WaE9pQmpaVzUwWlhJN1hHNGdJSEJoWkdScGJtYzZJREE3WEc1OVhHNWNianBvYjNOMEtGdGphR1ZqYTJWa1hTa2dlMXh1SUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hHNWNiaUFnSmpvNllXWjBaWElnZTF4dUlDQWdJR052Ym5SbGJuUTZJQ2NuTzF4dUlDQWdJSEJ2YVc1MFpYSXRaWFpsYm5Sek9pQnViMjVsTzF4dVhHNGdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUNBZ2FHVnBaMmgwT2lCallXeGpLSFpoY2lndExTMTNZM0F0YVc1d2RYUXRjbUZrYVc4dGMybDZaU2tnS2lBd0xqVXBPMXh1SUNBZ0lIZHBaSFJvT2lCallXeGpLSFpoY2lndExTMTNZM0F0YVc1d2RYUXRjbUZrYVc4dGMybDZaU2tnS2lBd0xqVXBPMXh1WEc0Z0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lHbHVjMlYwT2lCallXeGpLSFpoY2lndExTMTNZM0F0YVc1d2RYUXRjbUZrYVc4dGMybDZaU2tnS2lBd0xqVXBJR0YxZEc4Z1lYVjBieUJqWVd4aktIWmhjaWd0TFMxM1kzQXRhVzV3ZFhRdGNtRmthVzh0YzJsNlpTa2dLaUF3TGpVcE8xeHVJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbEtDMDFNQ1VzSUMwMU1DVXBPMXh1WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nZG1GeUtDMHRMWGRqY0MxbFpHbDBZV0pzWlMxamIyeHZjaWs3WEc0Z0lDQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ05UQWxPMXh1SUNBZ0lIb3RhVzVrWlhnNklERTdYRzVjYmlBZ0lDQjBjbUZ1YzJsMGFXOXVPaUIyWVhJb0xTMTNZM0F0Wm5ndFpHVm1ZWFZzZEMxa2RYSmhkR2x2YmlrZ1pXRnpaUzF2ZFhRN1hHNGdJQ0FnZEhKaGJuTnBkR2x2Ymkxd2NtOXdaWEowZVRvZ2FHVnBaMmgwTENCcGJuTmxkQ3dnYjNCaFkybDBlU3dnZDJsa2RHZzdYRzRnSUNBZ2QybHNiQzFqYUdGdVoyVTZJR2hsYVdkb2RDd2dhVzV6WlhRc0lHOXdZV05wZEhrc0lIZHBaSFJvTzF4dUlDQjlYRzU5WEc1Y2JqcG9iM04wS0Z0amFHVmphMlZrWFZ0a2FYTmhZbXhsWkYwcE9qcGhablJsY2lCN1hHNGdJRzl3WVdOcGRIazZJREF1TlR0Y2JuMWNibHh1YVc1d2RYUWdlMXh1SUNCaGJHdzZJSFZ1YzJWME8xeHVJQ0JoY0hCbFlYSmhibU5sT2lCdWIyNWxPMXh1SUNCamRYSnpiM0k2SUhCdmFXNTBaWEk3WEc1Y2JpQWdZbTk0TFhOcGVtbHVaem9nWW05eVpHVnlMV0p2ZUR0Y2JpQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJR2hsYVdkb2REb2dNRHRjYmlBZ2QybGtkR2c2SURBN1hHNGdJRzFoY21kcGJpMXlhV2RvZERvZ2RtRnlLQzB0TFhkamNDMWxaR2wwWVdKc1pTMXpjR0ZqYVc1bktUdGNibHh1SUNBdkx5QmhjeUIzWlNkeVpTQjFjMmx1WnlCMGFHVWdZbTl5WkdWeUlIUnZJSE53WVdObElIUm9aU0JqYUdWamF5QnRZWEpySUhkcGRHZ2dkR2hsSUdKaFkydG5jbTkxYm1Rc1hHNGdJQzh2SUhkbElIVnpaU0IwYUdVZ2IzVjBiR2x1WlNCaGN5QmhZM1IxWVd3Z1ltOXlaR1Z5T3lCMGFIVnpMQ0IzWlNCb1lYWmxJSFJ2SUhOMVluUnlZV04wSUhSb1pTQjNhV1IwYUZ4dUlDQXZMeUJ2WmlCMGFHVWdiM1YwYkdsdVpTQm1jbTl0SUhSb1pTQnphWHBsSUc5bUlIUm9aU0J5WVdScGJ5QmlkWFIwYjI0Z1lXNWtJR0ZrWkNCaElIQmhaR1JwYm1jZ2RHOWNiaUFnTHk4Z1kyOXRjR1Z1YzJGMFpTQm1iM0lnZEdobElHOTFkR3hwYm1VZ0tIZG9hV05vSUdseklHNXZkQ0J3WVhKMElHOW1JSFJvWlNCZ1ltOXlaR1Z5TFdKdmVHQXBYRzRnSUM4dklHaDBkSEJ6T2k4dmQzZDNMbmN6YzJOb2IyOXNjeTVqYjIwdlkzTnpMMk56YzE5dmRYUnNhVzVsTG1GemNGeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUIyWVhJb0xTMHRkMk53TFdWa2FYUmhZbXhsTFdKaFkydG5jbTkxYm1RcE8xeHVJQ0J2ZFhSc2FXNWxPaUIyWVhJb0xTMHRkMk53TFdWa2FYUmhZbXhsTFdKdmNtUmxjaTF6YVhwbEtTQnpiMnhwWkNCMllYSW9MUzB0ZDJOd0xXVmthWFJoWW14bExXSnZjbVJsY2lrN1hHNGdJRzkxZEd4cGJtVXRiMlptYzJWME9pQmpZV3hqS0haaGNpZ3RMUzEzWTNBdFpXUnBkR0ZpYkdVdFltOXlaR1Z5TFhOcGVtVXBJQ29nTFRFcE8xeHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQTFNQ1U3WEc1Y2JpQWdMeThnZDJVbmNtVWdaRzlwYm1jZ1lXeHNJSFJ5WVc1emFYUnBiMjV6SUdScGNtVmpkR3g1SUc5dUlIUm9aU0JwYm5CMWRGeHVJQ0IwY21GdWMybDBhVzl1T2lCMllYSW9MUzEzWTNBdFpuZ3RaR1ZtWVhWc2RDMWtkWEpoZEdsdmJpa2daV0Z6WlMxdmRYUTdYRzRnSUhSeVlXNXphWFJwYjI0dGNISnZjR1Z5ZEhrNklHOXdZV05wZEhrc0lHOTFkR3hwYm1VdGIyWm1jMlYwTENCdmRYUnNhVzVsTFhkcFpIUm9PMXh1SUNCM2FXeHNMV05vWVc1blpUb2diM0JoWTJsMGVTd2diM1YwYkdsdVpTMXZabVp6WlhRc0lHOTFkR3hwYm1VdGQybGtkR2c3WEc1OVhHNGlYWDA9ICovIl19 */`;\n", "import { LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\n/**\n * A helper element to declare options for a `wcp-input-select` element.\n *\n */\n@customElement('wcp-input-select-option')\nexport class InputSelectOption extends LitElement {\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  @property({ type: String, reflect: true })\n  value?: string;\n\n  @property({ type: String, reflect: true })\n  label?: string;\n\n  // as this is just a declarative structural helper, we do not need any shadow DOM here\n  protected override createRenderRoot(): HTMLElement | DocumentFragment {\n    return this;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-input-select-option': InputSelectOption;\n  }\n}\n", "import { html, LitElement, PropertyValues, unsafeCSS } from 'lit';\nimport { customElement, eventOptions, property, query } from 'lit/decorators.js';\n\nimport { Editable } from '@/mixins/editable.mixin.js';\nimport type { FormAssociated } from '@/utils/form.utils.js';\n\nimport { InputSelectOption } from './input-select-option.component.js';\n\n// instruct esbuild to load the CSS file as a string\nimport styles from './input-select.component.scss';\n\n/**\n * A numeric input element using the wcp style. Fully form aware.\n *\n * \n * @property {string} label - The label of the input element.\n * \n * @slot {<wcp-input-select-option value=\"foo\" label=\"Foo\"></wcp-input-select-option>} - Projects options into the select elements dropdown menu.\n * @slot hint - Receives optional descriptions below the input.\n * \n * @cssprop --wcp-input-select-arrow-size - The size of the arrow icon.\n * @cssprop --wcp-input-select-hint-size - The font size of the hint.\n * @cssprop --wcp-input-select-label-size - The font size of the label.\n * @cssprop --wcp-input-select-spacing - The inner spacing of the input element.\n\n * @cssprop --wcp-input-select-dark-background - The background color of the element in dark mode.\n * @cssprop --wcp-input-select-dark-border - The border color of the element in dark mode.\n * @cssprop --wcp-input-select-dark-color - The font color of the input element in dark mode.\n * \n * @cssprop --wcp-input-select-light-background - The background color of the element in light mode.\n * @cssprop --wcp-input-select-light-border - The border color of the element in light mode.\n * @cssprop --wcp-input-select-light-color - The font color of the input element in light mode.\n * \n */\n@customElement('wcp-input-select')\nexport class InputSelect extends Editable({ hasAfterSlot: false })(LitElement) implements FormAssociated<string> {\n  static override readonly styles = [super.formStyles, unsafeCSS(styles)];\n\n  #initialValue?: string;\n\n  @query('select')\n  private readonly input?: HTMLSelectElement;\n\n  @property({ type: Boolean, reflect: true })\n  autocomplete = false;\n\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  @property({ type: Boolean, reflect: true })\n  readonly = false;\n\n  @property({ type: Boolean, reflect: true })\n  required = false;\n\n  @property({ type: String, reflect: true })\n  name = 'text';\n\n  @property({ type: String, reflect: true })\n  value?: string;\n\n  protected override firstUpdated(props: PropertyValues<this>): void {\n    super.firstUpdated(props);\n    this.#initialValue = this.value;\n  }\n\n  formResetCallback() {\n    this.value = this.#initialValue;\n  }\n\n  checkValidity(): boolean {\n    if (!this.input?.checkValidity()) {\n      this.internals.setValidity({ customError: true }, 'Invalid input');\n    } else {\n      this.internals.setValidity({});\n    }\n\n    return this.internals.validity.valid;\n  }\n\n  override attributeChangedCallback(name: string, oldValue: string | null, newValue: string | null): void {\n    super.attributeChangedCallback(name, oldValue, newValue);\n\n    if (name !== 'value') return;\n    this.checkValidity();\n    this.internals.setFormValue(this.value ?? null);\n  }\n\n  @eventOptions({ passive: true })\n  handleSlotChange(event: Event) {\n    // collect all slotted options\n    const slot = event.target as HTMLSlotElement;\n    const options = slot\n      .assignedElements({ flatten: true })\n      .filter((element) => element instanceof InputSelectOption) as InputSelectOption[];\n\n    // clear the input and append the options as copies\n    this.input!.innerHTML = '';\n    this.input!.append(\n      ...options.map((option) => {\n        const copy = document.createElement('option');\n        copy.value = option.value ?? '';\n        copy.textContent = option.label ?? '';\n        copy.disabled = option.disabled;\n        copy.selected = copy.value === this.value;\n        return copy;\n      }),\n    );\n  }\n\n  @eventOptions({ passive: true })\n  handleInput(event: Event) {\n    const input = event.target as HTMLInputElement | HTMLTextAreaElement;\n    this.value = input.value ?? undefined;\n  }\n\n  override renderInput(id: string) {\n    return html`\n      <select\n        id=\"${id}\"\n        name=\"${this.name}\"\n        autocomplete=\"${this.autocomplete ? 'on' : 'off'}\"\n        ?disabled=\"${this.disabled}\"\n        ?required=\"${this.required}\"\n        .value=\"${this.value ?? ''}\"\n        @input=\"${this.handleInput}\"\n      ></select>\n      <slot @slotchange=\"${this.handleSlotChange}\"></slot>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-input-select': InputSelect;\n  }\n}\n", "export default `:host {\n  ---wcp-input-select-arrow-size: var(--wcp-input-select-arrow-size, calc(var(--wcp-base-size, 10px) * 0.5));\n  --wcp-editable-hint-size: var(--wcp-input-select-hint-size);\n  --wcp-editable-label-size: var(--wcp-input-select-label-size);\n  --wcp-editable-spacing: var(--wcp-input-select-spacing);\n  --wcp-editable-passive-border-radius: var(--wcp-input-select-border-radius);\n  --wcp-editable-passive-border-size: var(--wcp-input-select-border-size);\n  --wcp-editable-active-border-radius: var(--wcp-input-select-border-radius);\n  --wcp-editable-active-border-size: var(--wcp-input-select-border-size);\n  --wcp-editable-dark-background: var(--wcp-input-select-dark-background);\n  --wcp-editable-dark-border: var(--wcp-input-select-dark-border);\n  --wcp-editable-dark-color: var(--wcp-input-select-dark-color);\n  --wcp-editable-light-background: var(--wcp-input-select-light-background);\n  --wcp-editable-light-border: var(--wcp-input-select-light-border);\n  --wcp-editable-light-color: var(--wcp-input-select-light-color);\n}\n\nselect {\n  all: unset;\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none;\n  box-sizing: border-box;\n  width: 100%;\n  color: var(---wcp-input-select-color);\n  text-align: left;\n}\n\nslot:not([name]) {\n  display: none;\n}\n\n#input {\n  grid-area: center/center/center/after;\n}\n\n:host::after {\n  content: \"\";\n  grid-area: after;\n  align-self: center;\n  pointer-events: none;\n  margin: var(---wcp-editable-spacing);\n  margin-top: auto;\n  margin-bottom: auto;\n  display: block;\n  height: 0;\n  width: 0;\n  border: var(---wcp-input-select-arrow-size) solid;\n  border-color: transparent currentColor currentColor transparent;\n  transform-origin: 50% -25%;\n  transform: rotate(45deg);\n  transition: opacity var(--wcp-fx-default-duration) ease-out;\n  will-change: opacity;\n}\n\n:host([disabled])::after {\n  opacity: 0.5;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2NsaWVudC9jbGllbnQvc3JjL2NvbXBvbmVudHMvZm9ybXMvaW5wdXQtc2VsZWN0L2lucHV0LXNlbGVjdC5jb21wb25lbnQuc2NzcyIsIjpob3N0JTIwJTdCJTBBJTIwJTIwLS0td2NwLWlucHV0LXNlbGVjdC1hcnJvdy1zaXplOiUyMHZhcigtLXdjcC1pbnB1dC1zZWxlY3QtYXJyb3ctc2l6ZSwlMjBjYWxjKHZhcigtLXdjcC1iYXNlLXNpemUsJTIwMTBweCklMjAqJTIwMC41KSk7JTBBJTIwJTIwLS13Y3AtZWRpdGFibGUtaGludC1zaXplOiUyMHZhcigtLXdjcC1pbnB1dC1zZWxlY3QtaGludC1zaXplKTslMEElMjAlMjAtLXdjcC1lZGl0YWJsZS1sYWJlbC1zaXplOiUyMHZhcigtLXdjcC1pbnB1dC1zZWxlY3QtbGFiZWwtc2l6ZSk7JTBBJTIwJTIwLS13Y3AtZWRpdGFibGUtc3BhY2luZzolMjB2YXIoLS13Y3AtaW5wdXQtc2VsZWN0LXNwYWNpbmcpOyUwQSUyMCUyMC0td2NwLWVkaXRhYmxlLXBhc3NpdmUtYm9yZGVyLXJhZGl1czolMjB2YXIoLS13Y3AtaW5wdXQtc2VsZWN0LWJvcmRlci1yYWRpdXMpOyUwQSUyMCUyMC0td2NwLWVkaXRhYmxlLXBhc3NpdmUtYm9yZGVyLXNpemU6JTIwdmFyKC0td2NwLWlucHV0LXNlbGVjdC1ib3JkZXItc2l6ZSk7JTBBJTIwJTIwLS13Y3AtZWRpdGFibGUtYWN0aXZlLWJvcmRlci1yYWRpdXM6JTIwdmFyKC0td2NwLWlucHV0LXNlbGVjdC1ib3JkZXItcmFkaXVzKTslMEElMjAlMjAtLXdjcC1lZGl0YWJsZS1hY3RpdmUtYm9yZGVyLXNpemU6JTIwdmFyKC0td2NwLWlucHV0LXNlbGVjdC1ib3JkZXItc2l6ZSk7JTBBJTIwJTIwLS13Y3AtZWRpdGFibGUtZGFyay1iYWNrZ3JvdW5kOiUyMHZhcigtLXdjcC1pbnB1dC1zZWxlY3QtZGFyay1iYWNrZ3JvdW5kKTslMEElMjAlMjAtLXdjcC1lZGl0YWJsZS1kYXJrLWJvcmRlcjolMjB2YXIoLS13Y3AtaW5wdXQtc2VsZWN0LWRhcmstYm9yZGVyKTslMEElMjAlMjAtLXdjcC1lZGl0YWJsZS1kYXJrLWNvbG9yOiUyMHZhcigtLXdjcC1pbnB1dC1zZWxlY3QtZGFyay1jb2xvcik7JTBBJTIwJTIwLS13Y3AtZWRpdGFibGUtbGlnaHQtYmFja2dyb3VuZDolMjB2YXIoLS13Y3AtaW5wdXQtc2VsZWN0LWxpZ2h0LWJhY2tncm91bmQpOyUwQSUyMCUyMC0td2NwLWVkaXRhYmxlLWxpZ2h0LWJvcmRlcjolMjB2YXIoLS13Y3AtaW5wdXQtc2VsZWN0LWxpZ2h0LWJvcmRlcik7JTBBJTIwJTIwLS13Y3AtZWRpdGFibGUtbGlnaHQtY29sb3I6JTIwdmFyKC0td2NwLWlucHV0LXNlbGVjdC1saWdodC1jb2xvcik7JTBBJTdEJTBBJTBBc2VsZWN0JTIwJTdCJTBBJTIwJTIwYWxsOiUyMHVuc2V0OyUwQSUyMCUyMGFwcGVhcmFuY2U6JTIwbm9uZTslMEElMjAlMjBib3gtc2l6aW5nOiUyMGJvcmRlci1ib3g7JTBBJTIwJTIwd2lkdGg6JTIwMTAwJTI1OyUwQSUyMCUyMGNvbG9yOiUyMHZhcigtLS13Y3AtaW5wdXQtc2VsZWN0LWNvbG9yKTslMEElMjAlMjB0ZXh0LWFsaWduOiUyMGxlZnQ7JTBBJTdEJTBBJTBBc2xvdDpub3QoJTVCbmFtZSU1RCklMjAlN0IlMEElMjAlMjBkaXNwbGF5OiUyMG5vbmU7JTBBJTdEJTBBJTBBJTIzaW5wdXQlMjAlN0IlMEElMjAlMjBncmlkLWFyZWE6JTIwY2VudGVyL2NlbnRlci9jZW50ZXIvYWZ0ZXI7JTBBJTdEJTBBJTBBOmhvc3Q6OmFmdGVyJTIwJTdCJTBBJTIwJTIwY29udGVudDolMjAlMjIlMjI7JTBBJTIwJTIwZ3JpZC1hcmVhOiUyMGFmdGVyOyUwQSUyMCUyMGFsaWduLXNlbGY6JTIwY2VudGVyOyUwQSUyMCUyMHBvaW50ZXItZXZlbnRzOiUyMG5vbmU7JTBBJTIwJTIwbWFyZ2luOiUyMHZhcigtLS13Y3AtZWRpdGFibGUtc3BhY2luZyk7JTBBJTIwJTIwbWFyZ2luLXRvcDolMjBhdXRvOyUwQSUyMCUyMG1hcmdpbi1ib3R0b206JTIwYXV0bzslMEElMjAlMjBkaXNwbGF5OiUyMGJsb2NrOyUwQSUyMCUyMGhlaWdodDolMjAwOyUwQSUyMCUyMHdpZHRoOiUyMDA7JTBBJTIwJTIwYm9yZGVyOiUyMHZhcigtLS13Y3AtaW5wdXQtc2VsZWN0LWFycm93LXNpemUpJTIwc29saWQ7JTBBJTIwJTIwYm9yZGVyLWNvbG9yOiUyMHRyYW5zcGFyZW50JTIwY3VycmVudENvbG9yJTIwY3VycmVudENvbG9yJTIwdHJhbnNwYXJlbnQ7JTBBJTIwJTIwdHJhbnNmb3JtLW9yaWdpbjolMjA1MCUyNSUyMC0yNSUyNTslMEElMjAlMjB0cmFuc2Zvcm06JTIwcm90YXRlKDQ1ZGVnKTslMEElMjAlMjB0cmFuc2l0aW9uOiUyMG9wYWNpdHklMjB2YXIoLS13Y3AtZngtZGVmYXVsdC1kdXJhdGlvbiklMjBlYXNlLW91dDslMEElMjAlMjB3aWxsLWNoYW5nZTolMjBvcGFjaXR5OyUwQSU3RCUwQSUwQTpob3N0KCU1QmRpc2FibGVkJTVEKTo6YWZ0ZXIlMjAlN0IlMEElMjAlMjBvcGFjaXR5OiUyMDAuNTslMEElN0QlMEEvKiUyMyUyMHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVlNiMjkwSWpvaUwyaHZiV1V2Y25WdWJtVnlMM2R2Y21zdlkyeHBaVzUwTDJOc2FXVnVkQzl6Y21NdlkyOXRjRzl1Wlc1MGN5OW1iM0p0Y3k5cGJuQjFkQzF6Wld4bFkzUWlMQ0p6YjNWeVkyVnpJanBiSW1sdWNIVjBMWE5sYkdWamRDNWpiMjF3YjI1bGJuUXVjMk56Y3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGRlFUdEZRVU5GTzBWQlJVRTdSVUZEUVR0RlFVTkJPMFZCUlVFN1JVRkRRVHRGUVVWQk8wVkJRMEU3UlVGRlFUdEZRVU5CTzBWQlEwRTdSVUZGUVR0RlFVTkJPMFZCUTBFN096dEJRVWRHTzBWQlEwVTdSVUZEUVR0RlFVTkJPMFZCUlVFN1JVRkRRVHRGUVVOQk96czdRVUZIUmp0RlFVTkZPenM3UVVGSFJqdEZRVU5GT3pzN1FVRkhSanRGUVVORk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlJVRTdSVUZEUVR0RlFVTkJPMFZCUlVFN1JVRkRRVHRGUVVOQk8wVkJSVUU3UlVGRFFUdEZRVVZCTzBWQlEwRTdSVUZGUVR0RlFVTkJPenM3UVVGSFJqdEZRVU5GSWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaVFIVnpaU0FuUUM5emRIbHNaWE12ZFhScGJITW5JR0Z6SUhWMGFXeHpPMXh1WEc0NmFHOXpkQ0I3WEc0Z0lDMHRMWGRqY0MxcGJuQjFkQzF6Wld4bFkzUXRZWEp5YjNjdGMybDZaVG9nZG1GeUtDMHRkMk53TFdsdWNIVjBMWE5sYkdWamRDMWhjbkp2ZHkxemFYcGxMQ0FqZTNWMGFXeHpMbk5wZW1Vb01DNDFLWDBwTzF4dVhHNGdJQzB0ZDJOd0xXVmthWFJoWW14bExXaHBiblF0YzJsNlpUb2dkbUZ5S0MwdGQyTndMV2x1Y0hWMExYTmxiR1ZqZEMxb2FXNTBMWE5wZW1VcE8xeHVJQ0F0TFhkamNDMWxaR2wwWVdKc1pTMXNZV0psYkMxemFYcGxPaUIyWVhJb0xTMTNZM0F0YVc1d2RYUXRjMlZzWldOMExXeGhZbVZzTFhOcGVtVXBPMXh1SUNBdExYZGpjQzFsWkdsMFlXSnNaUzF6Y0dGamFXNW5PaUIyWVhJb0xTMTNZM0F0YVc1d2RYUXRjMlZzWldOMExYTndZV05wYm1jcE8xeHVYRzRnSUMwdGQyTndMV1ZrYVhSaFlteGxMWEJoYzNOcGRtVXRZbTl5WkdWeUxYSmhaR2wxY3pvZ2RtRnlLQzB0ZDJOd0xXbHVjSFYwTFhObGJHVmpkQzFpYjNKa1pYSXRjbUZrYVhWektUdGNiaUFnTFMxM1kzQXRaV1JwZEdGaWJHVXRjR0Z6YzJsMlpTMWliM0prWlhJdGMybDZaVG9nZG1GeUtDMHRkMk53TFdsdWNIVjBMWE5sYkdWamRDMWliM0prWlhJdGMybDZaU2s3WEc1Y2JpQWdMUzEzWTNBdFpXUnBkR0ZpYkdVdFlXTjBhWFpsTFdKdmNtUmxjaTF5WVdScGRYTTZJSFpoY2lndExYZGpjQzFwYm5CMWRDMXpaV3hsWTNRdFltOXlaR1Z5TFhKaFpHbDFjeWs3WEc0Z0lDMHRkMk53TFdWa2FYUmhZbXhsTFdGamRHbDJaUzFpYjNKa1pYSXRjMmw2WlRvZ2RtRnlLQzB0ZDJOd0xXbHVjSFYwTFhObGJHVmpkQzFpYjNKa1pYSXRjMmw2WlNrN1hHNWNiaUFnTFMxM1kzQXRaV1JwZEdGaWJHVXRaR0Z5YXkxaVlXTnJaM0p2ZFc1a09pQjJZWElvTFMxM1kzQXRhVzV3ZFhRdGMyVnNaV04wTFdSaGNtc3RZbUZqYTJkeWIzVnVaQ2s3WEc0Z0lDMHRkMk53TFdWa2FYUmhZbXhsTFdSaGNtc3RZbTl5WkdWeU9pQjJZWElvTFMxM1kzQXRhVzV3ZFhRdGMyVnNaV04wTFdSaGNtc3RZbTl5WkdWeUtUdGNiaUFnTFMxM1kzQXRaV1JwZEdGaWJHVXRaR0Z5YXkxamIyeHZjam9nZG1GeUtDMHRkMk53TFdsdWNIVjBMWE5sYkdWamRDMWtZWEpyTFdOdmJHOXlLVHRjYmx4dUlDQXRMWGRqY0MxbFpHbDBZV0pzWlMxc2FXZG9kQzFpWVdOclozSnZkVzVrT2lCMllYSW9MUzEzWTNBdGFXNXdkWFF0YzJWc1pXTjBMV3hwWjJoMExXSmhZMnRuY205MWJtUXBPMXh1SUNBdExYZGpjQzFsWkdsMFlXSnNaUzFzYVdkb2RDMWliM0prWlhJNklIWmhjaWd0TFhkamNDMXBibkIxZEMxelpXeGxZM1F0YkdsbmFIUXRZbTl5WkdWeUtUdGNiaUFnTFMxM1kzQXRaV1JwZEdGaWJHVXRiR2xuYUhRdFkyOXNiM0k2SUhaaGNpZ3RMWGRqY0MxcGJuQjFkQzF6Wld4bFkzUXRiR2xuYUhRdFkyOXNiM0lwTzF4dWZWeHVYRzV6Wld4bFkzUWdlMXh1SUNCaGJHdzZJSFZ1YzJWME8xeHVJQ0JoY0hCbFlYSmhibU5sT2lCdWIyNWxPMXh1SUNCaWIzZ3RjMmw2YVc1bk9pQmliM0prWlhJdFltOTRPMXh1WEc0Z0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNCamIyeHZjam9nZG1GeUtDMHRMWGRqY0MxcGJuQjFkQzF6Wld4bFkzUXRZMjlzYjNJcE8xeHVJQ0IwWlhoMExXRnNhV2R1T2lCc1pXWjBPMXh1ZlZ4dVhHNXpiRzkwT201dmRDaGJibUZ0WlYwcElIdGNiaUFnWkdsemNHeGhlVG9nYm05dVpUdGNibjFjYmx4dUkybHVjSFYwSUh0Y2JpQWdaM0pwWkMxaGNtVmhPaUJqWlc1MFpYSWdMeUJqWlc1MFpYSWdMeUJqWlc1MFpYSWdMeUJoWm5SbGNqdGNibjFjYmx4dU9taHZjM1E2T21GbWRHVnlJSHRjYmlBZ1kyOXVkR1Z1ZERvZ0p5YzdYRzRnSUdkeWFXUXRZWEpsWVRvZ1lXWjBaWEk3WEc0Z0lHRnNhV2R1TFhObGJHWTZJR05sYm5SbGNqdGNiaUFnY0c5cGJuUmxjaTFsZG1WdWRITTZJRzV2Ym1VN1hHNWNiaUFnYldGeVoybHVPaUIyWVhJb0xTMHRkMk53TFdWa2FYUmhZbXhsTFhOd1lXTnBibWNwTzF4dUlDQnRZWEpuYVc0dGRHOXdPaUJoZFhSdk8xeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQmhkWFJ2TzF4dVhHNGdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0JvWldsbmFIUTZJREE3WEc0Z0lIZHBaSFJvT2lBd08xeHVYRzRnSUdKdmNtUmxjam9nZG1GeUtDMHRMWGRqY0MxcGJuQjFkQzF6Wld4bFkzUXRZWEp5YjNjdGMybDZaU2tnYzI5c2FXUTdYRzRnSUdKdmNtUmxjaTFqYjJ4dmNqb2dkSEpoYm5Od1lYSmxiblFnWTNWeWNtVnVkRU52Ykc5eUlHTjFjbkpsYm5SRGIyeHZjaUIwY21GdWMzQmhjbVZ1ZER0Y2JseHVJQ0IwY21GdWMyWnZjbTB0YjNKcFoybHVPaUExTUNVZ0xUSTFKVHRjYmlBZ2RISmhibk5tYjNKdE9pQnliM1JoZEdVb05EVmtaV2NwTzF4dVhHNGdJSFJ5WVc1emFYUnBiMjQ2SUc5d1lXTnBkSGtnZG1GeUtDMHRkMk53TFdaNExXUmxabUYxYkhRdFpIVnlZWFJwYjI0cElHVmhjMlV0YjNWME8xeHVJQ0IzYVd4c0xXTm9ZVzVuWlRvZ2IzQmhZMmwwZVR0Y2JuMWNibHh1T21odmMzUW9XMlJwYzJGaWJHVmtYU2s2T21GbWRHVnlJSHRjYmlBZ2IzQmhZMmwwZVRvZ01DNDFPMXh1ZlZ4dUlsMTklMjAqIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0UsMEdBQUE7RUFFQSwyREFBQTtFQUNBLDZEQUFBO0VBQ0EsdURBQUE7RUFFQSwyRUFBQTtFQUNBLHVFQUFBO0VBRUEsMEVBQUE7RUFDQSxzRUFBQTtFQUVBLHVFQUFBO0VBQ0EsK0RBQUE7RUFDQSw2REFBQTtFQUVBLHlFQUFBO0VBQ0EsaUVBQUE7RUFDQSwrREFBQTtBQ05GOztBRFNBO0VBQ0UsVUFBQTtFQUNBLHdCQUFBO0tBQUEscUJBQUE7VUFBQSxnQkFBQTtFQUNBLHNCQUFBO0VBRUEsV0FBQTtFQUNBLHFDQUFBO0VBQ0EsZ0JBQUE7QUNQRjs7QURVQTtFQUNFLGFBQUE7QUNQRjs7QURVQTtFQUNFLHFDQUFBO0FDUEY7O0FEVUE7RUFDRSxXQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLG9CQUFBO0VBRUEsb0NBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0VBRUEsY0FBQTtFQUNBLFNBQUE7RUFDQSxRQUFBO0VBRUEsaURBQUE7RUFDQSwrREFBQTtFQUVBLDBCQUFBO0VBQ0Esd0JBQUE7RUFFQSwyREFBQTtFQUNBLG9CQUFBO0FDWkY7O0FEZUE7RUFDRSxZQUFBO0FDWkYiLCJmaWxlIjoiOmhvc3Qge1xuICAtLS13Y3AtaW5wdXQtc2VsZWN0LWFycm93LXNpemU6IHZhcigtLXdjcC1pbnB1dC1zZWxlY3QtYXJyb3ctc2l6ZSwgY2FsYyh2YXIoLS13Y3AtYmFzZS1zaXplLCAxMHB4KSAqIDAuNSkpO1xuICAtLXdjcC1lZGl0YWJsZS1oaW50LXNpemU6IHZhcigtLXdjcC1pbnB1dC1zZWxlY3QtaGludC1zaXplKTtcbiAgLS13Y3AtZWRpdGFibGUtbGFiZWwtc2l6ZTogdmFyKC0td2NwLWlucHV0LXNlbGVjdC1sYWJlbC1zaXplKTtcbiAgLS13Y3AtZWRpdGFibGUtc3BhY2luZzogdmFyKC0td2NwLWlucHV0LXNlbGVjdC1zcGFjaW5nKTtcbiAgLS13Y3AtZWRpdGFibGUtcGFzc2l2ZS1ib3JkZXItcmFkaXVzOiB2YXIoLS13Y3AtaW5wdXQtc2VsZWN0LWJvcmRlci1yYWRpdXMpO1xuICAtLXdjcC1lZGl0YWJsZS1wYXNzaXZlLWJvcmRlci1zaXplOiB2YXIoLS13Y3AtaW5wdXQtc2VsZWN0LWJvcmRlci1zaXplKTtcbiAgLS13Y3AtZWRpdGFibGUtYWN0aXZlLWJvcmRlci1yYWRpdXM6IHZhcigtLXdjcC1pbnB1dC1zZWxlY3QtYm9yZGVyLXJhZGl1cyk7XG4gIC0td2NwLWVkaXRhYmxlLWFjdGl2ZS1ib3JkZXItc2l6ZTogdmFyKC0td2NwLWlucHV0LXNlbGVjdC1ib3JkZXItc2l6ZSk7XG4gIC0td2NwLWVkaXRhYmxlLWRhcmstYmFja2dyb3VuZDogdmFyKC0td2NwLWlucHV0LXNlbGVjdC1kYXJrLWJhY2tncm91bmQpO1xuICAtLXdjcC1lZGl0YWJsZS1kYXJrLWJvcmRlcjogdmFyKC0td2NwLWlucHV0LXNlbGVjdC1kYXJrLWJvcmRlcik7XG4gIC0td2NwLWVkaXRhYmxlLWRhcmstY29sb3I6IHZhcigtLXdjcC1pbnB1dC1zZWxlY3QtZGFyay1jb2xvcik7XG4gIC0td2NwLWVkaXRhYmxlLWxpZ2h0LWJhY2tncm91bmQ6IHZhcigtLXdjcC1pbnB1dC1zZWxlY3QtbGlnaHQtYmFja2dyb3VuZCk7XG4gIC0td2NwLWVkaXRhYmxlLWxpZ2h0LWJvcmRlcjogdmFyKC0td2NwLWlucHV0LXNlbGVjdC1saWdodC1ib3JkZXIpO1xuICAtLXdjcC1lZGl0YWJsZS1saWdodC1jb2xvcjogdmFyKC0td2NwLWlucHV0LXNlbGVjdC1saWdodC1jb2xvcik7XG59XG5cbnNlbGVjdCB7XG4gIGFsbDogdW5zZXQ7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHdpZHRoOiAxMDAlO1xuICBjb2xvcjogdmFyKC0tLXdjcC1pbnB1dC1zZWxlY3QtY29sb3IpO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG5zbG90Om5vdChbbmFtZV0pIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuI2lucHV0IHtcbiAgZ3JpZC1hcmVhOiBjZW50ZXIvY2VudGVyL2NlbnRlci9hZnRlcjtcbn1cblxuOmhvc3Q6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgZ3JpZC1hcmVhOiBhZnRlcjtcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgbWFyZ2luOiB2YXIoLS0td2NwLWVkaXRhYmxlLXNwYWNpbmcpO1xuICBtYXJnaW4tdG9wOiBhdXRvO1xuICBtYXJnaW4tYm90dG9tOiBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAwO1xuICB3aWR0aDogMDtcbiAgYm9yZGVyOiB2YXIoLS0td2NwLWlucHV0LXNlbGVjdC1hcnJvdy1zaXplKSBzb2xpZDtcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCBjdXJyZW50Q29sb3IgY3VycmVudENvbG9yIHRyYW5zcGFyZW50O1xuICB0cmFuc2Zvcm0tb3JpZ2luOiA1MCUgLTI1JTtcbiAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IHZhcigtLXdjcC1meC1kZWZhdWx0LWR1cmF0aW9uKSBlYXNlLW91dDtcbiAgd2lsbC1jaGFuZ2U6IG9wYWNpdHk7XG59XG5cbjpob3N0KFtkaXNhYmxlZF0pOjphZnRlciB7XG4gIG9wYWNpdHk6IDAuNTtcbn1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZTYjI5MElqb2lMMmh2YldVdmNuVnVibVZ5TDNkdmNtc3ZZMnhwWlc1MEwyTnNhV1Z1ZEM5emNtTXZZMjl0Y0c5dVpXNTBjeTltYjNKdGN5OXBibkIxZEMxelpXeGxZM1FpTENKemIzVnlZMlZ6SWpwYkltbHVjSFYwTFhObGJHVmpkQzVqYjIxd2IyNWxiblF1YzJOemN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkZRVHRGUVVORk8wVkJSVUU3UlVGRFFUdEZRVU5CTzBWQlJVRTdSVUZEUVR0RlFVVkJPMFZCUTBFN1JVRkZRVHRGUVVOQk8wVkJRMEU3UlVGRlFUdEZRVU5CTzBWQlEwRTdPenRCUVVkR08wVkJRMFU3UlVGRFFUdEZRVU5CTzBWQlJVRTdSVUZEUVR0RlFVTkJPenM3UVVGSFJqdEZRVU5GT3pzN1FVRkhSanRGUVVORk96czdRVUZIUmp0RlFVTkZPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJSVUU3UlVGRFFUdEZRVU5CTzBWQlJVRTdSVUZEUVR0RlFVTkJPMFZCUlVFN1JVRkRRVHRGUVVWQk8wVkJRMEU3UlVGRlFUdEZRVU5CT3pzN1FVRkhSanRGUVVORklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lRSFZ6WlNBblFDOXpkSGxzWlhNdmRYUnBiSE1uSUdGeklIVjBhV3h6TzF4dVhHNDZhRzl6ZENCN1hHNGdJQzB0TFhkamNDMXBibkIxZEMxelpXeGxZM1F0WVhKeWIzY3RjMmw2WlRvZ2RtRnlLQzB0ZDJOd0xXbHVjSFYwTFhObGJHVmpkQzFoY25KdmR5MXphWHBsTENBamUzVjBhV3h6TG5OcGVtVW9NQzQxS1gwcE8xeHVYRzRnSUMwdGQyTndMV1ZrYVhSaFlteGxMV2hwYm5RdGMybDZaVG9nZG1GeUtDMHRkMk53TFdsdWNIVjBMWE5sYkdWamRDMW9hVzUwTFhOcGVtVXBPMXh1SUNBdExYZGpjQzFsWkdsMFlXSnNaUzFzWVdKbGJDMXphWHBsT2lCMllYSW9MUzEzWTNBdGFXNXdkWFF0YzJWc1pXTjBMV3hoWW1Wc0xYTnBlbVVwTzF4dUlDQXRMWGRqY0MxbFpHbDBZV0pzWlMxemNHRmphVzVuT2lCMllYSW9MUzEzWTNBdGFXNXdkWFF0YzJWc1pXTjBMWE53WVdOcGJtY3BPMXh1WEc0Z0lDMHRkMk53TFdWa2FYUmhZbXhsTFhCaGMzTnBkbVV0WW05eVpHVnlMWEpoWkdsMWN6b2dkbUZ5S0MwdGQyTndMV2x1Y0hWMExYTmxiR1ZqZEMxaWIzSmtaWEl0Y21Ga2FYVnpLVHRjYmlBZ0xTMTNZM0F0WldScGRHRmliR1V0Y0dGemMybDJaUzFpYjNKa1pYSXRjMmw2WlRvZ2RtRnlLQzB0ZDJOd0xXbHVjSFYwTFhObGJHVmpkQzFpYjNKa1pYSXRjMmw2WlNrN1hHNWNiaUFnTFMxM1kzQXRaV1JwZEdGaWJHVXRZV04wYVhabExXSnZjbVJsY2kxeVlXUnBkWE02SUhaaGNpZ3RMWGRqY0MxcGJuQjFkQzF6Wld4bFkzUXRZbTl5WkdWeUxYSmhaR2wxY3lrN1hHNGdJQzB0ZDJOd0xXVmthWFJoWW14bExXRmpkR2wyWlMxaWIzSmtaWEl0YzJsNlpUb2dkbUZ5S0MwdGQyTndMV2x1Y0hWMExYTmxiR1ZqZEMxaWIzSmtaWEl0YzJsNlpTazdYRzVjYmlBZ0xTMTNZM0F0WldScGRHRmliR1V0WkdGeWF5MWlZV05yWjNKdmRXNWtPaUIyWVhJb0xTMTNZM0F0YVc1d2RYUXRjMlZzWldOMExXUmhjbXN0WW1GamEyZHliM1Z1WkNrN1hHNGdJQzB0ZDJOd0xXVmthWFJoWW14bExXUmhjbXN0WW05eVpHVnlPaUIyWVhJb0xTMTNZM0F0YVc1d2RYUXRjMlZzWldOMExXUmhjbXN0WW05eVpHVnlLVHRjYmlBZ0xTMTNZM0F0WldScGRHRmliR1V0WkdGeWF5MWpiMnh2Y2pvZ2RtRnlLQzB0ZDJOd0xXbHVjSFYwTFhObGJHVmpkQzFrWVhKckxXTnZiRzl5S1R0Y2JseHVJQ0F0TFhkamNDMWxaR2wwWVdKc1pTMXNhV2RvZEMxaVlXTnJaM0p2ZFc1a09pQjJZWElvTFMxM1kzQXRhVzV3ZFhRdGMyVnNaV04wTFd4cFoyaDBMV0poWTJ0bmNtOTFibVFwTzF4dUlDQXRMWGRqY0MxbFpHbDBZV0pzWlMxc2FXZG9kQzFpYjNKa1pYSTZJSFpoY2lndExYZGpjQzFwYm5CMWRDMXpaV3hsWTNRdGJHbG5hSFF0WW05eVpHVnlLVHRjYmlBZ0xTMTNZM0F0WldScGRHRmliR1V0YkdsbmFIUXRZMjlzYjNJNklIWmhjaWd0TFhkamNDMXBibkIxZEMxelpXeGxZM1F0YkdsbmFIUXRZMjlzYjNJcE8xeHVmVnh1WEc1elpXeGxZM1FnZTF4dUlDQmhiR3c2SUhWdWMyVjBPMXh1SUNCaGNIQmxZWEpoYm1ObE9pQnViMjVsTzF4dUlDQmliM2d0YzJsNmFXNW5PaUJpYjNKa1pYSXRZbTk0TzF4dVhHNGdJSGRwWkhSb09pQXhNREFsTzF4dUlDQmpiMnh2Y2pvZ2RtRnlLQzB0TFhkamNDMXBibkIxZEMxelpXeGxZM1F0WTI5c2IzSXBPMXh1SUNCMFpYaDBMV0ZzYVdkdU9pQnNaV1owTzF4dWZWeHVYRzV6Ykc5ME9tNXZkQ2hiYm1GdFpWMHBJSHRjYmlBZ1pHbHpjR3hoZVRvZ2JtOXVaVHRjYm4xY2JseHVJMmx1Y0hWMElIdGNiaUFnWjNKcFpDMWhjbVZoT2lCalpXNTBaWElnTHlCalpXNTBaWElnTHlCalpXNTBaWElnTHlCaFpuUmxjanRjYm4xY2JseHVPbWh2YzNRNk9tRm1kR1Z5SUh0Y2JpQWdZMjl1ZEdWdWREb2dKeWM3WEc0Z0lHZHlhV1F0WVhKbFlUb2dZV1owWlhJN1hHNGdJR0ZzYVdkdUxYTmxiR1k2SUdObGJuUmxjanRjYmlBZ2NHOXBiblJsY2kxbGRtVnVkSE02SUc1dmJtVTdYRzVjYmlBZ2JXRnlaMmx1T2lCMllYSW9MUzB0ZDJOd0xXVmthWFJoWW14bExYTndZV05wYm1jcE8xeHVJQ0J0WVhKbmFXNHRkRzl3T2lCaGRYUnZPMXh1SUNCdFlYSm5hVzR0WW05MGRHOXRPaUJoZFhSdk8xeHVYRzRnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNCb1pXbG5hSFE2SURBN1hHNGdJSGRwWkhSb09pQXdPMXh1WEc0Z0lHSnZjbVJsY2pvZ2RtRnlLQzB0TFhkamNDMXBibkIxZEMxelpXeGxZM1F0WVhKeWIzY3RjMmw2WlNrZ2MyOXNhV1E3WEc0Z0lHSnZjbVJsY2kxamIyeHZjam9nZEhKaGJuTndZWEpsYm5RZ1kzVnljbVZ1ZEVOdmJHOXlJR04xY25KbGJuUkRiMnh2Y2lCMGNtRnVjM0JoY21WdWREdGNibHh1SUNCMGNtRnVjMlp2Y20wdGIzSnBaMmx1T2lBMU1DVWdMVEkxSlR0Y2JpQWdkSEpoYm5ObWIzSnRPaUJ5YjNSaGRHVW9ORFZrWldjcE8xeHVYRzRnSUhSeVlXNXphWFJwYjI0NklHOXdZV05wZEhrZ2RtRnlLQzB0ZDJOd0xXWjRMV1JsWm1GMWJIUXRaSFZ5WVhScGIyNHBJR1ZoYzJVdGIzVjBPMXh1SUNCM2FXeHNMV05vWVc1blpUb2diM0JoWTJsMGVUdGNibjFjYmx4dU9taHZjM1FvVzJScGMyRmliR1ZrWFNrNk9tRm1kR1Z5SUh0Y2JpQWdiM0JoWTJsMGVUb2dNQzQxTzF4dWZWeHVJbDE5ICoiLCJzb3VyY2VzQ29udGVudCI6WyJAdXNlICdAL3N0eWxlcy91dGlscycgYXMgdXRpbHM7XG5cbjpob3N0IHtcbiAgLS0td2NwLWlucHV0LXNlbGVjdC1hcnJvdy1zaXplOiB2YXIoLS13Y3AtaW5wdXQtc2VsZWN0LWFycm93LXNpemUsICN7dXRpbHMuc2l6ZSgwLjUpfSk7XG5cbiAgLS13Y3AtZWRpdGFibGUtaGludC1zaXplOiB2YXIoLS13Y3AtaW5wdXQtc2VsZWN0LWhpbnQtc2l6ZSk7XG4gIC0td2NwLWVkaXRhYmxlLWxhYmVsLXNpemU6IHZhcigtLXdjcC1pbnB1dC1zZWxlY3QtbGFiZWwtc2l6ZSk7XG4gIC0td2NwLWVkaXRhYmxlLXNwYWNpbmc6IHZhcigtLXdjcC1pbnB1dC1zZWxlY3Qtc3BhY2luZyk7XG5cbiAgLS13Y3AtZWRpdGFibGUtcGFzc2l2ZS1ib3JkZXItcmFkaXVzOiB2YXIoLS13Y3AtaW5wdXQtc2VsZWN0LWJvcmRlci1yYWRpdXMpO1xuICAtLXdjcC1lZGl0YWJsZS1wYXNzaXZlLWJvcmRlci1zaXplOiB2YXIoLS13Y3AtaW5wdXQtc2VsZWN0LWJvcmRlci1zaXplKTtcblxuICAtLXdjcC1lZGl0YWJsZS1hY3RpdmUtYm9yZGVyLXJhZGl1czogdmFyKC0td2NwLWlucHV0LXNlbGVjdC1ib3JkZXItcmFkaXVzKTtcbiAgLS13Y3AtZWRpdGFibGUtYWN0aXZlLWJvcmRlci1zaXplOiB2YXIoLS13Y3AtaW5wdXQtc2VsZWN0LWJvcmRlci1zaXplKTtcblxuICAtLXdjcC1lZGl0YWJsZS1kYXJrLWJhY2tncm91bmQ6IHZhcigtLXdjcC1pbnB1dC1zZWxlY3QtZGFyay1iYWNrZ3JvdW5kKTtcbiAgLS13Y3AtZWRpdGFibGUtZGFyay1ib3JkZXI6IHZhcigtLXdjcC1pbnB1dC1zZWxlY3QtZGFyay1ib3JkZXIpO1xuICAtLXdjcC1lZGl0YWJsZS1kYXJrLWNvbG9yOiB2YXIoLS13Y3AtaW5wdXQtc2VsZWN0LWRhcmstY29sb3IpO1xuXG4gIC0td2NwLWVkaXRhYmxlLWxpZ2h0LWJhY2tncm91bmQ6IHZhcigtLXdjcC1pbnB1dC1zZWxlY3QtbGlnaHQtYmFja2dyb3VuZCk7XG4gIC0td2NwLWVkaXRhYmxlLWxpZ2h0LWJvcmRlcjogdmFyKC0td2NwLWlucHV0LXNlbGVjdC1saWdodC1ib3JkZXIpO1xuICAtLXdjcC1lZGl0YWJsZS1saWdodC1jb2xvcjogdmFyKC0td2NwLWlucHV0LXNlbGVjdC1saWdodC1jb2xvcik7XG59XG5cbnNlbGVjdCB7XG4gIGFsbDogdW5zZXQ7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cbiAgd2lkdGg6IDEwMCU7XG4gIGNvbG9yOiB2YXIoLS0td2NwLWlucHV0LXNlbGVjdC1jb2xvcik7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbnNsb3Q6bm90KFtuYW1lXSkge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4jaW5wdXQge1xuICBncmlkLWFyZWE6IGNlbnRlciAvIGNlbnRlciAvIGNlbnRlciAvIGFmdGVyO1xufVxuXG46aG9zdDo6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgZ3JpZC1hcmVhOiBhZnRlcjtcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcblxuICBtYXJnaW46IHZhcigtLS13Y3AtZWRpdGFibGUtc3BhY2luZyk7XG4gIG1hcmdpbi10b3A6IGF1dG87XG4gIG1hcmdpbi1ib3R0b206IGF1dG87XG5cbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMDtcbiAgd2lkdGg6IDA7XG5cbiAgYm9yZGVyOiB2YXIoLS0td2NwLWlucHV0LXNlbGVjdC1hcnJvdy1zaXplKSBzb2xpZDtcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCBjdXJyZW50Q29sb3IgY3VycmVudENvbG9yIHRyYW5zcGFyZW50O1xuXG4gIHRyYW5zZm9ybS1vcmlnaW46IDUwJSAtMjUlO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG5cbiAgdHJhbnNpdGlvbjogb3BhY2l0eSB2YXIoLS13Y3AtZngtZGVmYXVsdC1kdXJhdGlvbikgZWFzZS1vdXQ7XG4gIHdpbGwtY2hhbmdlOiBvcGFjaXR5O1xufVxuXG46aG9zdChbZGlzYWJsZWRdKTo6YWZ0ZXIge1xuICBvcGFjaXR5OiAwLjU7XG59XG4iLCI6aG9zdCB7XG4gIC0tLXdjcC1pbnB1dC1zZWxlY3QtYXJyb3ctc2l6ZTogdmFyKC0td2NwLWlucHV0LXNlbGVjdC1hcnJvdy1zaXplLCBjYWxjKHZhcigtLXdjcC1iYXNlLXNpemUsIDEwcHgpICogMC41KSk7XG4gIC0td2NwLWVkaXRhYmxlLWhpbnQtc2l6ZTogdmFyKC0td2NwLWlucHV0LXNlbGVjdC1oaW50LXNpemUpO1xuICAtLXdjcC1lZGl0YWJsZS1sYWJlbC1zaXplOiB2YXIoLS13Y3AtaW5wdXQtc2VsZWN0LWxhYmVsLXNpemUpO1xuICAtLXdjcC1lZGl0YWJsZS1zcGFjaW5nOiB2YXIoLS13Y3AtaW5wdXQtc2VsZWN0LXNwYWNpbmcpO1xuICAtLXdjcC1lZGl0YWJsZS1wYXNzaXZlLWJvcmRlci1yYWRpdXM6IHZhcigtLXdjcC1pbnB1dC1zZWxlY3QtYm9yZGVyLXJhZGl1cyk7XG4gIC0td2NwLWVkaXRhYmxlLXBhc3NpdmUtYm9yZGVyLXNpemU6IHZhcigtLXdjcC1pbnB1dC1zZWxlY3QtYm9yZGVyLXNpemUpO1xuICAtLXdjcC1lZGl0YWJsZS1hY3RpdmUtYm9yZGVyLXJhZGl1czogdmFyKC0td2NwLWlucHV0LXNlbGVjdC1ib3JkZXItcmFkaXVzKTtcbiAgLS13Y3AtZWRpdGFibGUtYWN0aXZlLWJvcmRlci1zaXplOiB2YXIoLS13Y3AtaW5wdXQtc2VsZWN0LWJvcmRlci1zaXplKTtcbiAgLS13Y3AtZWRpdGFibGUtZGFyay1iYWNrZ3JvdW5kOiB2YXIoLS13Y3AtaW5wdXQtc2VsZWN0LWRhcmstYmFja2dyb3VuZCk7XG4gIC0td2NwLWVkaXRhYmxlLWRhcmstYm9yZGVyOiB2YXIoLS13Y3AtaW5wdXQtc2VsZWN0LWRhcmstYm9yZGVyKTtcbiAgLS13Y3AtZWRpdGFibGUtZGFyay1jb2xvcjogdmFyKC0td2NwLWlucHV0LXNlbGVjdC1kYXJrLWNvbG9yKTtcbiAgLS13Y3AtZWRpdGFibGUtbGlnaHQtYmFja2dyb3VuZDogdmFyKC0td2NwLWlucHV0LXNlbGVjdC1saWdodC1iYWNrZ3JvdW5kKTtcbiAgLS13Y3AtZWRpdGFibGUtbGlnaHQtYm9yZGVyOiB2YXIoLS13Y3AtaW5wdXQtc2VsZWN0LWxpZ2h0LWJvcmRlcik7XG4gIC0td2NwLWVkaXRhYmxlLWxpZ2h0LWNvbG9yOiB2YXIoLS13Y3AtaW5wdXQtc2VsZWN0LWxpZ2h0LWNvbG9yKTtcbn1cblxuc2VsZWN0IHtcbiAgYWxsOiB1bnNldDtcbiAgYXBwZWFyYW5jZTogbm9uZTtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgd2lkdGg6IDEwMCU7XG4gIGNvbG9yOiB2YXIoLS0td2NwLWlucHV0LXNlbGVjdC1jb2xvcik7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbnNsb3Q6bm90KFtuYW1lXSkge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4jaW5wdXQge1xuICBncmlkLWFyZWE6IGNlbnRlci9jZW50ZXIvY2VudGVyL2FmdGVyO1xufVxuXG46aG9zdDo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBncmlkLWFyZWE6IGFmdGVyO1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICBtYXJnaW46IHZhcigtLS13Y3AtZWRpdGFibGUtc3BhY2luZyk7XG4gIG1hcmdpbi10b3A6IGF1dG87XG4gIG1hcmdpbi1ib3R0b206IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDA7XG4gIHdpZHRoOiAwO1xuICBib3JkZXI6IHZhcigtLS13Y3AtaW5wdXQtc2VsZWN0LWFycm93LXNpemUpIHNvbGlkO1xuICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IGN1cnJlbnRDb2xvciBjdXJyZW50Q29sb3IgdHJhbnNwYXJlbnQ7XG4gIHRyYW5zZm9ybS1vcmlnaW46IDUwJSAtMjUlO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgdmFyKC0td2NwLWZ4LWRlZmF1bHQtZHVyYXRpb24pIGVhc2Utb3V0O1xuICB3aWxsLWNoYW5nZTogb3BhY2l0eTtcbn1cblxuOmhvc3QoW2Rpc2FibGVkXSk6OmFmdGVyIHtcbiAgb3BhY2l0eTogMC41O1xufVxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVlNiMjkwSWpvaUwyaHZiV1V2Y25WdWJtVnlMM2R2Y21zdlkyeHBaVzUwTDJOc2FXVnVkQzl6Y21NdlkyOXRjRzl1Wlc1MGN5OW1iM0p0Y3k5cGJuQjFkQzF6Wld4bFkzUWlMQ0p6YjNWeVkyVnpJanBiSW1sdWNIVjBMWE5sYkdWamRDNWpiMjF3YjI1bGJuUXVjMk56Y3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGRlFUdEZRVU5GTzBWQlJVRTdSVUZEUVR0RlFVTkJPMFZCUlVFN1JVRkRRVHRGUVVWQk8wVkJRMEU3UlVGRlFUdEZRVU5CTzBWQlEwRTdSVUZGUVR0RlFVTkJPMFZCUTBFN096dEJRVWRHTzBWQlEwVTdSVUZEUVR0RlFVTkJPMFZCUlVFN1JVRkRRVHRGUVVOQk96czdRVUZIUmp0RlFVTkZPenM3UVVGSFJqdEZRVU5GT3pzN1FVRkhSanRGUVVORk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlJVRTdSVUZEUVR0RlFVTkJPMFZCUlVFN1JVRkRRVHRGUVVOQk8wVkJSVUU3UlVGRFFUdEZRVVZCTzBWQlEwRTdSVUZGUVR0RlFVTkJPenM3UVVGSFJqdEZRVU5GSWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaVFIVnpaU0FuUUM5emRIbHNaWE12ZFhScGJITW5JR0Z6SUhWMGFXeHpPMXh1WEc0NmFHOXpkQ0I3WEc0Z0lDMHRMWGRqY0MxcGJuQjFkQzF6Wld4bFkzUXRZWEp5YjNjdGMybDZaVG9nZG1GeUtDMHRkMk53TFdsdWNIVjBMWE5sYkdWamRDMWhjbkp2ZHkxemFYcGxMQ0FqZTNWMGFXeHpMbk5wZW1Vb01DNDFLWDBwTzF4dVhHNGdJQzB0ZDJOd0xXVmthWFJoWW14bExXaHBiblF0YzJsNlpUb2dkbUZ5S0MwdGQyTndMV2x1Y0hWMExYTmxiR1ZqZEMxb2FXNTBMWE5wZW1VcE8xeHVJQ0F0TFhkamNDMWxaR2wwWVdKc1pTMXNZV0psYkMxemFYcGxPaUIyWVhJb0xTMTNZM0F0YVc1d2RYUXRjMlZzWldOMExXeGhZbVZzTFhOcGVtVXBPMXh1SUNBdExYZGpjQzFsWkdsMFlXSnNaUzF6Y0dGamFXNW5PaUIyWVhJb0xTMTNZM0F0YVc1d2RYUXRjMlZzWldOMExYTndZV05wYm1jcE8xeHVYRzRnSUMwdGQyTndMV1ZrYVhSaFlteGxMWEJoYzNOcGRtVXRZbTl5WkdWeUxYSmhaR2wxY3pvZ2RtRnlLQzB0ZDJOd0xXbHVjSFYwTFhObGJHVmpkQzFpYjNKa1pYSXRjbUZrYVhWektUdGNiaUFnTFMxM1kzQXRaV1JwZEdGaWJHVXRjR0Z6YzJsMlpTMWliM0prWlhJdGMybDZaVG9nZG1GeUtDMHRkMk53TFdsdWNIVjBMWE5sYkdWamRDMWliM0prWlhJdGMybDZaU2s3WEc1Y2JpQWdMUzEzWTNBdFpXUnBkR0ZpYkdVdFlXTjBhWFpsTFdKdmNtUmxjaTF5WVdScGRYTTZJSFpoY2lndExYZGpjQzFwYm5CMWRDMXpaV3hsWTNRdFltOXlaR1Z5TFhKaFpHbDFjeWs3WEc0Z0lDMHRkMk53TFdWa2FYUmhZbXhsTFdGamRHbDJaUzFpYjNKa1pYSXRjMmw2WlRvZ2RtRnlLQzB0ZDJOd0xXbHVjSFYwTFhObGJHVmpkQzFpYjNKa1pYSXRjMmw2WlNrN1hHNWNiaUFnTFMxM1kzQXRaV1JwZEdGaWJHVXRaR0Z5YXkxaVlXTnJaM0p2ZFc1a09pQjJZWElvTFMxM1kzQXRhVzV3ZFhRdGMyVnNaV04wTFdSaGNtc3RZbUZqYTJkeWIzVnVaQ2s3WEc0Z0lDMHRkMk53TFdWa2FYUmhZbXhsTFdSaGNtc3RZbTl5WkdWeU9pQjJZWElvTFMxM1kzQXRhVzV3ZFhRdGMyVnNaV04wTFdSaGNtc3RZbTl5WkdWeUtUdGNiaUFnTFMxM1kzQXRaV1JwZEdGaWJHVXRaR0Z5YXkxamIyeHZjam9nZG1GeUtDMHRkMk53TFdsdWNIVjBMWE5sYkdWamRDMWtZWEpyTFdOdmJHOXlLVHRjYmx4dUlDQXRMWGRqY0MxbFpHbDBZV0pzWlMxc2FXZG9kQzFpWVdOclozSnZkVzVrT2lCMllYSW9MUzEzWTNBdGFXNXdkWFF0YzJWc1pXTjBMV3hwWjJoMExXSmhZMnRuY205MWJtUXBPMXh1SUNBdExYZGpjQzFsWkdsMFlXSnNaUzFzYVdkb2RDMWliM0prWlhJNklIWmhjaWd0TFhkamNDMXBibkIxZEMxelpXeGxZM1F0YkdsbmFIUXRZbTl5WkdWeUtUdGNiaUFnTFMxM1kzQXRaV1JwZEdGaWJHVXRiR2xuYUhRdFkyOXNiM0k2SUhaaGNpZ3RMWGRqY0MxcGJuQjFkQzF6Wld4bFkzUXRiR2xuYUhRdFkyOXNiM0lwTzF4dWZWeHVYRzV6Wld4bFkzUWdlMXh1SUNCaGJHdzZJSFZ1YzJWME8xeHVJQ0JoY0hCbFlYSmhibU5sT2lCdWIyNWxPMXh1SUNCaWIzZ3RjMmw2YVc1bk9pQmliM0prWlhJdFltOTRPMXh1WEc0Z0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNCamIyeHZjam9nZG1GeUtDMHRMWGRqY0MxcGJuQjFkQzF6Wld4bFkzUXRZMjlzYjNJcE8xeHVJQ0IwWlhoMExXRnNhV2R1T2lCc1pXWjBPMXh1ZlZ4dVhHNXpiRzkwT201dmRDaGJibUZ0WlYwcElIdGNiaUFnWkdsemNHeGhlVG9nYm05dVpUdGNibjFjYmx4dUkybHVjSFYwSUh0Y2JpQWdaM0pwWkMxaGNtVmhPaUJqWlc1MFpYSWdMeUJqWlc1MFpYSWdMeUJqWlc1MFpYSWdMeUJoWm5SbGNqdGNibjFjYmx4dU9taHZjM1E2T21GbWRHVnlJSHRjYmlBZ1kyOXVkR1Z1ZERvZ0p5YzdYRzRnSUdkeWFXUXRZWEpsWVRvZ1lXWjBaWEk3WEc0Z0lHRnNhV2R1TFhObGJHWTZJR05sYm5SbGNqdGNiaUFnY0c5cGJuUmxjaTFsZG1WdWRITTZJRzV2Ym1VN1hHNWNiaUFnYldGeVoybHVPaUIyWVhJb0xTMHRkMk53TFdWa2FYUmhZbXhsTFhOd1lXTnBibWNwTzF4dUlDQnRZWEpuYVc0dGRHOXdPaUJoZFhSdk8xeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQmhkWFJ2TzF4dVhHNGdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0JvWldsbmFIUTZJREE3WEc0Z0lIZHBaSFJvT2lBd08xeHVYRzRnSUdKdmNtUmxjam9nZG1GeUtDMHRMWGRqY0MxcGJuQjFkQzF6Wld4bFkzUXRZWEp5YjNjdGMybDZaU2tnYzI5c2FXUTdYRzRnSUdKdmNtUmxjaTFqYjJ4dmNqb2dkSEpoYm5Od1lYSmxiblFnWTNWeWNtVnVkRU52Ykc5eUlHTjFjbkpsYm5SRGIyeHZjaUIwY21GdWMzQmhjbVZ1ZER0Y2JseHVJQ0IwY21GdWMyWnZjbTB0YjNKcFoybHVPaUExTUNVZ0xUSTFKVHRjYmlBZ2RISmhibk5tYjNKdE9pQnliM1JoZEdVb05EVmtaV2NwTzF4dVhHNGdJSFJ5WVc1emFYUnBiMjQ2SUc5d1lXTnBkSGtnZG1GeUtDMHRkMk53TFdaNExXUmxabUYxYkhRdFpIVnlZWFJwYjI0cElHVmhjMlV0YjNWME8xeHVJQ0IzYVd4c0xXTm9ZVzVuWlRvZ2IzQmhZMmwwZVR0Y2JuMWNibHh1T21odmMzUW9XMlJwYzJGaWJHVmtYU2s2T21GbWRHVnlJSHRjYmlBZ2IzQmhZMmwwZVRvZ01DNDFPMXh1ZlZ4dUlsMTkgKi8iXX0= */`;\n", "import { html, LitElement, PropertyValues, unsafeCSS } from 'lit';\nimport { customElement, eventOptions, property, query } from 'lit/decorators.js';\n\nimport { Editable } from '@/mixins/editable.mixin.js';\nimport type { FormAssociated } from '@/utils/form.utils.js';\n\n// instruct esbuild to load the CSS file as a string\nimport styles from './input-text.component.scss';\n\n/**\n * A text input element using the wcp style. Fully form aware.\n * Can display multiline text (textarea) if configured to do so.\n *\n * @property {string} label - The label of the input element.\n *\n * @slot hint - Receives optional descriptions below the input.\n *\n * @cssprop --wcp-input-text-hint-size - The font size of the hint.\n * @cssprop --wcp-input-text-label-size - The font size of the label.\n * @cssprop --wcp-input-text-spacing - The inner spacing of the input element.\n *\n * @cssprop --wcp-input-text-dark-background - The background color of the element in dark mode.\n * @cssprop --wcp-input-text-dark-border - The border color of the element in dark mode.\n * @cssprop --wcp-input-text-dark-color - The font color of the input element in dark mode.\n *\n * @cssprop --wcp-input-text-light-background - The background color of the element in light mode.\n * @cssprop --wcp-input-text-light-border - The border color of the element in light mode.\n * @cssprop --wcp-input-text-light-color - The font color of the input element in light mode.\n *\n */\n@customElement('wcp-input-text')\nexport class InputText extends Editable()(LitElement) implements FormAssociated<string> {\n  static override readonly styles = [super.formStyles, unsafeCSS(styles)];\n\n  #initialValue?: string;\n\n  @query('input, textarea')\n  private readonly input?: HTMLInputElement | HTMLTextAreaElement;\n\n  @property({ type: Boolean, reflect: true })\n  multiline = false;\n\n  @property({ type: Boolean, reflect: true })\n  autocomplete = false;\n\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  @property({ type: Boolean, reflect: true })\n  readonly = false;\n\n  @property({ type: Boolean, reflect: true })\n  required = false;\n\n  @property({ type: String, reflect: true })\n  name = 'text';\n\n  /**\n   * Can be set to to `text`, `email`, `password`, `search`, `tel`, or `url`. \\\n   * Beware that this will be ignored if combined with the `multiline` attribute.\n   */\n  @property({ type: String, reflect: true })\n  type: 'text' | 'email' | 'password' | 'search' | 'tel' | 'url' = 'text';\n\n  @property({ type: String, reflect: true })\n  value?: string;\n\n  protected override firstUpdated(props: PropertyValues<this>): void {\n    super.firstUpdated(props);\n    this.#initialValue = this.value;\n  }\n\n  formResetCallback() {\n    this.value = this.#initialValue;\n  }\n\n  checkValidity(): boolean {\n    if (!this.input?.checkValidity()) {\n      this.internals.setValidity({ customError: true }, 'Invalid input');\n    } else {\n      this.internals.setValidity({});\n    }\n\n    return this.internals.validity.valid;\n  }\n\n  override attributeChangedCallback(name: string, oldValue: string | null, newValue: string | null): void {\n    super.attributeChangedCallback(name, oldValue, newValue);\n\n    if (name !== 'value') return;\n    this.checkValidity();\n    this.internals.setFormValue(this.value ?? null);\n  }\n\n  @eventOptions({ passive: true })\n  handleInput(event: Event) {\n    const input = event.target as HTMLInputElement | HTMLTextAreaElement;\n    this.value = input.value ?? undefined;\n  }\n\n  override renderInput(id: string) {\n    if (this.multiline) {\n      return html`\n        <textarea\n          id=\"${id}\"\n          name=\"${this.name}\"\n          autocomplete=\"${this.autocomplete ? 'on' : 'off'}\"\n          ?disabled=\"${this.disabled}\"\n          ?required=\"${this.required}\"\n          .value=\"${this.value ?? ''}\"\n          @input=\"${this.handleInput}\"\n        ></textarea>\n      `;\n    }\n\n    return html`\n      <input\n        type=\"${this.type}\"\n        id=\"${id}\"\n        name=\"${this.name}\"\n        autocomplete=\"${this.autocomplete ? 'on' : 'off'}\"\n        ?disabled=\"${this.disabled}\"\n        ?required=\"${this.required}\"\n        .value=\"${this.value ?? ''}\"\n        @input=\"${this.handleInput}\"\n      />\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-input-text': InputText;\n  }\n}\n", "export default `:host {\n  --wcp-editable-hint-size: var(--wcp-input-text-hint-size);\n  --wcp-editable-label-size: var(--wcp-input-text-label-size);\n  --wcp-editable-spacing: var(--wcp-input-text-spacing);\n  --wcp-editable-passive-border-radius: var(--wcp-input-text-border-radius);\n  --wcp-editable-passive-border-size: var(--wcp-input-text-border-size);\n  --wcp-editable-active-border-radius: var(--wcp-input-text-border-radius);\n  --wcp-editable-active-border-size: var(--wcp-input-text-border-size);\n  --wcp-editable-dark-background: var(--wcp-input-text-dark-background);\n  --wcp-editable-dark-border: var(--wcp-input-text-dark-border);\n  --wcp-editable-dark-color: var(--wcp-input-text-dark-color);\n  --wcp-editable-light-background: var(--wcp-input-text-light-background);\n  --wcp-editable-light-border: var(--wcp-input-text-light-border);\n  --wcp-editable-light-color: var(--wcp-input-text-light-color);\n}\n\ninput,\ntextarea {\n  all: unset;\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none;\n  box-sizing: border-box;\n  width: 100%;\n  color: var(---wcp-input-text-color);\n  text-align: left;\n}\n\ninput[type=search]::-webkit-search-decoration, input[type=search]::-webkit-search-cancel-button, input[type=search]::-webkit-search-results-button, input[type=search]::-webkit-search-results-decoration {\n  display: none;\n}\n\ntextarea {\n  aspect-ratio: 16/9;\n  max-height: 200px;\n  resize: vertical;\n}\n/*# sourceMappingURL=data:application/json;base64, */`;\n", "import { html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement, eventOptions, property } from 'lit/decorators.js';\n\nimport { ColorSchemable } from '@/mixins/color-schemable.mixin.js';\nimport { listen } from '@/utils/decorator.utils.js';\nimport { persist, read } from '@/utils/state.utils.js';\n\nimport styles from './aside.component.scss';\n\ndeclare global {\n  interface WCP {\n    def: {\n      breakpoints: Record<string, number>;\n    };\n  }\n\n  interface Window {\n    wcp: WCP;\n  }\n}\n\n/**\n * To toggle the side bar remotely, you can dispatch a custom event on the global window object:\n * ```js\n * window.dispatchEvent(new CustomEvent('wcp-aside:toggle'));\n * ```\n * You may pass an optional boolean value to the event to toggle the side bar to a specific state:\n * ```js\n * window.dispatchEvent(new CustomEvent('wcp-aside:toggle', { detail: true }));\n * ```\n *\n * @slot - Projects elements aside the main content\n * @slot header - Elements in the fixed header of the side bar\n *\n * @emits wcp-aside:toggled - Dispatches this event when the side bar has been toggled. Do not get confused with the `wcp-aside:toggle` event.\n *\n * @cssprop --wcp-aside-max-width - The maximum width of the aside bar when visible\n * @cssprop --wcp-aside-spacing - Inner padding of the aside bar\n * @cssprop --wcp-aside-toggle-size - The size of the toggle button\n *\n * @cssprop --wcp-aside-dark-background - The background color of the side bar in dark mode\n * @cssprop --wcp-aside-dark-color - The color of the side bar in dark mode\n *\n * @cssprop --wcp-aside-light-background - The background color of the side bar in light mode\n * @cssprop --wcp-aside-light-color - The color of the side bar in light mode\n */\n@customElement('wcp-aside')\nexport class Aside extends ColorSchemable(LitElement) {\n  static override readonly styles = unsafeCSS(styles);\n\n  /**\n   * Used to toggle the width of the aside bar\n   */\n  @property({ type: Boolean, reflect: true })\n  override hidden = false;\n\n  /**\n   * Presets the aria role to `complementary` as we do not use te aside element directly\n   * @see https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/complementary_role\n   */\n  @property({ type: String, reflect: true })\n  override role = 'complementary';\n\n  @eventOptions({ passive: true })\n  handleButtonClick() {\n    persist('aside-visible', false);\n  }\n\n  @eventOptions({ passive: true })\n  @listen('wcp-state-changed:aside-visible', 'window')\n  protected listenAsideToggle({ detail }: CustomEvent<boolean>) {\n    this.hidden = !detail;\n  }\n\n  @eventOptions({ passive: true })\n  @listen('hashchange', 'window')\n  protected handleRouteChange() {\n    // close sidebar on mobile\n    const small = window.wcp?.def?.breakpoints?.sm ?? 0;\n    if (!window.matchMedia(`(min-width: ${small}px)`).matches) {\n      persist('aside-visible', false);\n    }\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n\n    // check if the state is recoverable\n    const visible = read('aside-visible');\n    if (visible !== undefined) {\n      this.hidden = !visible;\n    } else {\n      // on desktop, the sidebar is visible by default,\n      // on mobile, the sidebar is hidden by default\n      const small = window.wcp?.def?.breakpoints?.sm ?? 0;\n      this.hidden = !window.matchMedia(`(min-width: ${small}px)`).matches;\n    }\n  }\n\n  protected override render(): TemplateResult {\n    return html`\n      <header>\n        <slot name=\"header\"></slot>\n        <wcp-button kind=\"icon\" @click=\"${this.handleButtonClick}\">\n          <wcp-icon name=\"close\"></wcp-icon>\n        </wcp-button>\n      </header>\n      <section>\n        <slot></slot>\n      </section>\n    `;\n  }\n}\n\ndeclare global {\n  interface State {\n    ['aside-visible']: boolean;\n  }\n  interface HTMLElementTagNameMap {\n    'wcp-aside': Aside;\n  }\n}\n", "export default `:host {\n  ---wcp-aside-max-width: var(--wcp-aside-max-width, calc(var(--wcp-base-size, 10px) * 24));\n  ---wcp-aside-min-width: var(--wcp-aside-min-width, var(---wcp-aside-max-width));\n  ---wcp-aside-spacing: var(--wcp-aside-spacing, 0);\n  ---wcp-aside-dark-background: var(--wcp-aside-dark-background, var(--wcp-color-blue-13));\n  ---wcp-aside-dark-color: var(--wcp-aside-dark-color, var(--wcp-color-blue-96));\n  ---wcp-aside-light-background: var(--wcp-aside-dark-background, var(--wcp-color-blue-17));\n  ---wcp-aside-light-color: var(--wcp-aside-dark-color, var(--wcp-color-blue-96));\n  ---wcp-aside-toggle-size: var(--wcp-aside-toggle-size, calc(var(--wcp-base-size, 10px) * 2));\n}\n@media (prefers-color-scheme: dark) {\n  :host {\n    ---wcp-aside-background: var(---wcp-aside-dark-background);\n    ---wcp-aside-color: var(---wcp-aside-dark-color);\n  }\n}\n:host([color-scheme=dark]):host {\n  ---wcp-aside-background: var(---wcp-aside-dark-background);\n  ---wcp-aside-color: var(---wcp-aside-dark-color);\n}\n\n@media (prefers-color-scheme: light) {\n  :host {\n    ---wcp-aside-background: var(---wcp-aside-light-background);\n    ---wcp-aside-color: var(---wcp-aside-light-color);\n  }\n}\n:host([color-scheme=light]):host {\n  ---wcp-aside-background: var(---wcp-aside-light-background);\n  ---wcp-aside-color: var(---wcp-aside-light-color);\n}\n\n:host {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 3;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  padding: var(---wcp-aside-spacing);\n  height: 100%;\n  max-width: 100%;\n  min-width: 100%;\n  background-color: var(---wcp-aside-background);\n  color: var(---wcp-aside-color);\n  transition: transform ease-in-out var(--wcp-fx-layout-duration);\n  will-change: transform;\n}\n@media (min-width: 768px) {\n  :host {\n    position: relative;\n    max-width: var(---wcp-aside-max-width);\n    min-width: var(---wcp-aside-min-width);\n    transition: margin-left ease-in-out var(--wcp-fx-layout-duration);\n    will-change: margin-left;\n  }\n}\n\n:host([hidden]) {\n  transform: translateX(-100%);\n}\n@media (min-width: 768px) {\n  :host([hidden]) {\n    transform: none;\n    margin-left: calc(var(---wcp-aside-max-width) * -1);\n  }\n}\n\nheader {\n  position: sticky;\n  top: 0;\n  right: 0;\n  bottom: auto;\n  left: 0;\n  z-index: 4;\n}\n\nsection {\n  scrollbar-color: var(--wcp-color-blue-34) transparent;\n  overflow: auto;\n  overflow-x: hidden;\n}\nsection::-webkit-scrollbar {\n  width: 0.5rem;\n}\nsection::-webkit-scrollbar-thumb {\n  background-color: var(--wcp-color-blue-34);\n  border-radius: 0.5rem;\n}\nsection::-webkit-scrollbar-track {\n  display: none;\n  background-color: transparent;\n}\n\nwcp-button {\n  position: absolute;\n  top: calc(10px * 0.4);\n  top: calc(var(--wcp-base-size, 10px) * 0.4);\n  right: calc(10px * 1.5);\n  right: calc(var(--wcp-base-size, 10px) * 1.5);\n}\n@media (min-width: 768px) {\n  wcp-button {\n    display: none;\n  }\n}\n/*# sourceMappingURL=data:application/json;base64, */`;\n", "import { html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement } from 'lit/decorators.js';\n\nimport { ColorSchemable } from '@/mixins/color-schemable.mixin.js';\n\nimport styles from './layout.component.scss';\n\n/**\n * @cssprop --wcp-layout-dark-background - The background color of the whole layout\n * @cssprop --wcp-layout-dark-color - The text color of the whole layout\n *\n * @cssprop --wcp-layout-light-background - The background color of the whole layout\n * @cssprop --wcp-layout-light-color - The text color of the whole layout\n *\n * @slot header - Shows contents fixed above the aside\n * @slot aside - Projects elements aside the main content\n * @slot - Receives the content of the main section\n */\n@customElement('wcp-layout')\nexport class Layout extends ColorSchemable(LitElement) {\n  static override readonly styles = unsafeCSS(styles);\n\n  protected override render(): TemplateResult {\n    return html`\n      <wcp-aside>\n        <slot name=\"header\" slot=\"header\"></slot>\n        <slot name=\"aside\"></slot>\n      </wcp-aside>\n\n      <wcp-main>\n        <slot></slot>\n      </wcp-main>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-layout': Layout;\n  }\n}\n", "export default `:host {\n  ---wcp-layout-dark-background: var(--wcp-layout-dark-background, var(--wcp-color-blue-17));\n  ---wcp-layout-dark-color: var(--wcp-layout-dark-color, var(--wcp-color-grey-96));\n  ---wcp-layout-light-background: var(--wcp-layout-light-background, var(--wcp-color-blue-80));\n  ---wcp-layout-light-color: var(--wcp-layout-light-color, var(--wcp-color-grey-96));\n}\n\n@media (prefers-color-scheme: dark) {\n  :host {\n    ---wcp-layout-background: var(---wcp-layout-dark-background);\n    ---wcp-layout-color: var(---wcp-layout-dark-color);\n  }\n}\n:host([color-scheme=dark]):host {\n  ---wcp-layout-background: var(---wcp-layout-dark-background);\n  ---wcp-layout-color: var(---wcp-layout-dark-color);\n}\n\n@media (prefers-color-scheme: light) {\n  :host {\n    ---wcp-layout-background: var(---wcp-layout-light-background);\n    ---wcp-layout-color: var(---wcp-layout-light-color);\n  }\n}\n:host([color-scheme=light]):host {\n  ---wcp-layout-background: var(---wcp-layout-light-background);\n  ---wcp-layout-color: var(---wcp-layout-light-color);\n}\n\n:host {\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  overflow: hidden;\n  background-color: var(---wcp-layout-background);\n  color: var(---wcp-layout-color);\n}\n/*# sourceMappingURL=data:application/json;base64, */`;\n", "import { html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nimport styles from './main.component.scss';\n\n/**\n * @slot - Projects elements to the main content\n */\n@customElement('wcp-main')\nexport class Main extends LitElement {\n  static override readonly styles = unsafeCSS(styles);\n\n  /**\n   * Presets the aria role to `main` as we do not use te main element directly\n   * @see https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/main_role\n   */\n  @property({ type: String, reflect: true })\n  override role = 'main';\n\n  protected override render(): TemplateResult {\n    return html`<slot></slot>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-main': Main;\n  }\n}\n", "export default `:host {\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  height: 100%;\n  scrollbar-color: var(--wcp-color-blue-34) transparent;\n  overflow: auto;\n  overflow-x: hidden;\n}\n:host::-webkit-scrollbar {\n  width: 0.5rem;\n}\n:host::-webkit-scrollbar-thumb {\n  background-color: var(--wcp-color-blue-34);\n  border-radius: 0.5rem;\n}\n:host::-webkit-scrollbar-track {\n  display: none;\n  background-color: transparent;\n}\n/*# sourceMappingURL=data:application/json;base64, */`;\n", "import type { CustomElementDeclaration } from 'custom-elements-manifest/schema.d.js';\nimport { html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement, eventOptions, property, query, state } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { map } from 'lit/directives/map.js';\nimport { when } from 'lit/directives/when.js';\nimport { html as staticHtml, unsafeStatic } from 'lit/static-html.js';\n\nimport { getConfig, loadConfig } from '@/utils/config.utils.js';\nimport { loadManifest } from '@/utils/manifest.utils.js';\nimport { prepareNavigation } from '@/utils/navigation.utils.js';\nimport type * as Parsed from '@/utils/parser.types.js';\nimport { Router } from '@/utils/router.utils.js';\n\nimport { prepareRoutes } from './root.routes.js';\nimport type { RootNavigation } from './root-navigation/root-navigation.component.js';\n\nimport logo from '@/assets/icons/logo.svg';\n\nimport styles from './root.component.scss';\n\n/**\n * @slot logo - Allows setting a custom logo to be displayed in the title.\n * @slot preview-controls - Can be used to inject additional preview controls.\n * @slot preview-frame - Used to be override the existing preview pane.\n * @slot preview-details - Can be used to inject additional preview detail panes.\n *\n * @cssprop --wcp-root-dark-background - The background color of the root element in dark mode.\n * @cssprop --wcp-root-dark-color - The text color of the text in the root element in dark mode.\n *\n * @cssprop --wcp-root-light-background - The background color of the root element in light mode.\n * @cssprop --wcp-root-light-color - The text color of the text in the root element in light mode.\n *\n * @emits wcp-root:active-element-changed - Fired when the active element changes. Carries the declaration of the new active element with it.\n */\n@customElement('wcp-root')\nexport class Root extends LitElement {\n  static override readonly styles = unsafeCSS(styles);\n\n  readonly #router = new Router(this);\n\n  @state()\n  private ready = false;\n\n  @state()\n  private topbarPlugins: string[] = [];\n\n  @state()\n  // private navigationItems: GroupedNavigationItems = new Map();\n  private navigationItems: Parsed.GroupedElements = new Map();\n\n  @query('wcp-root-navigation')\n  readonly navigationRef!: RootNavigation;\n\n  /**\n   * Flags the component to be displayed inline and not standalone. Requires the surrounding\n   * layout to provide the necessary styles like for any other block element.\n   */\n  @property({ type: Boolean, reflect: true })\n  inline = false;\n\n  /**\n   * Allows hiding the splash screen.\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'hide-splash' })\n  hideSplash = false;\n\n  /**\n   * An optional reload query param to be removed after initial load.\n   * Will prevent the splash screen to be shown on reload.\n   */\n  @property({ type: String, reflect: true, attribute: 'reload-query-param' })\n  reloadQueryParam?: string;\n\n  /**\n   * Allows to set a url to load a config file from.\n   */\n  @property({ type: String, reflect: true, attribute: 'config-url' })\n  configUrl?: string;\n\n  /**\n   * Defines the location of the custom element manifest file.\n   */\n  @property({ type: String, reflect: true, attribute: 'manifest-url' })\n  manifestUrl!: string;\n\n  @eventOptions({ passive: true })\n  handleSearchInput({ detail }: CustomEvent<string>) {\n    this.navigationRef.searchTerms = detail.toLowerCase().split(' ');\n  }\n\n  @eventOptions({ passive: true })\n  handleSplashTransitionEnd(event: Event) {\n    const splash = event.target as HTMLElement;\n    splash.remove();\n  }\n\n  override async connectedCallback() {\n    // do not block the render loop to show some loading indicator\n    super.connectedCallback();\n\n    // check for the reload query param\n    if (this.reloadQueryParam) {\n      const params = new URLSearchParams(window.location.search);\n      if (params.has(this.reloadQueryParam)) this.hideSplash = true;\n    }\n\n    // once connected, load the config and the manifest\n    const config = await loadConfig(this.configUrl);\n    const manifest = await loadManifest(this.manifestUrl, config.excludeElements);\n\n    // set the document title and prepare the navigation\n    document.title = config.labels.title;\n    this.navigationItems = prepareNavigation(manifest, config);\n    this.topbarPlugins = config.topbarPlugins ?? [];\n\n    // prepare and set routes\n    const routes = prepareRoutes();\n    this.#router.registerRoutes(routes);\n    this.#router.connect();\n\n    // we're finished loading\n    this.ready = true;\n\n    // remove reload query param\n    if (this.reloadQueryParam) {\n      const url = new URL(window.location.href);\n      url.searchParams.delete(this.reloadQueryParam);\n      window.history.replaceState({}, '', url.toString());\n    }\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.#router.disconnect();\n  }\n\n  protected override render(): TemplateResult {\n    return html`\n      ${when(\n        !this.hideSplash,\n        () => html`\n          <wcp-root-splash ?hidden=\"${this.ready}\" @transitionend=\"${this.handleSplashTransitionEnd}\">\n            Loading...\n          </wcp-root-splash>\n        `,\n      )}\n      ${when(\n        this.ready,\n        () => html`\n          <wcp-layout>\n            <wcp-title slot=\"header\" title=\"${ifDefined(getConfig()?.labels.title)}\">\n              <slot name=\"logo\" slot=\"logo\">\n                <img src=\"${logo}\" alt=\"${ifDefined(getConfig()?.labels.title)}\" height=\"20px\" />\n              </slot>\n            </wcp-title>\n\n            <wcp-navigation-search\n              slot=\"header\"\n              @wcp-navigation-search:search=\"${this.handleSearchInput}\"\n            ></wcp-navigation-search>\n\n            <wcp-root-navigation\n              slot=\"aside\"\n              min-search-length=\"2\"\n              current-path=\"${ifDefined(this.#router.currentPath)}\"\n              empty-message=\"${ifDefined(getConfig()?.labels.emptyNavigation)}\"\n              .items=\"${this.navigationItems}\"\n            ></wcp-root-navigation>\n\n            <wcp-topbar>\n              ${map(this.topbarPlugins, (plugin) => staticHtml`<${unsafeStatic(plugin)}></${unsafeStatic(plugin)}>`)}\n              <slot name=\"topbar-plugins\"></slot>\n            </wcp-topbar>\n\n            <slot name=\"stage\">${this.#router.outlet()}</slot>\n          </wcp-layout>\n        `,\n      )}\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementEventMap {\n    'wcp-root:active-element-changed': CustomEvent<CustomElementDeclaration | undefined>;\n  }\n\n  interface HTMLElementTagNameMap {\n    'wcp-root': Root;\n  }\n}\n", "import type { Config } from '@/utils/config.utils.js';\nimport type * as Parsed from '@/utils/parser.types.js';\n\nexport const ROUTE_ELEMENTS = '/element';\nexport const ROUTE_READMES = '/readme';\n\n/**\n * Creates a navigation item for a given readme.\n */\nexport function prepareReadmeLink(url: string): string {\n  return `${ROUTE_READMES}/${encodeURIComponent(url)}`;\n}\n\n/**\n * Creates a navigation item for a given element.\n */\nexport function prepareElementLink(element: Parsed.Element): string {\n  return `${ROUTE_ELEMENTS}/${element.getNiceUrl()}`;\n}\n\n/**\n * Prepares a grouped navigation structure of readmes and elements.\n */\nexport function prepareNavigation(manifest: Parsed.Manifest, config: Config): Parsed.GroupedElements {\n  const items = new Map() as Parsed.GroupedElements;\n  const group = config.labels.additionalReadmeGroupName;\n\n  // prepare readme navigation\n  if (config.additionalReadmes?.length) {\n    const readmes = config.additionalReadmes.reduce((readmes, { name, url }) => {\n      const element = { hasGroups: true, groups: [group], name, getNiceName: () => name } as unknown as Parsed.Element;\n      return readmes.set(name, { name, link: prepareReadmeLink(url), element });\n    }, new Map() as Parsed.GroupedElements);\n    items.set(group, readmes);\n  }\n\n  const elements = manifest.groupedElements(config.labels.fallbackGroupName);\n  return new Map([...items, ...elements]);\n}\n\n/**\n * Predicate function to match a given content against a list of search terms.\n */\nexport function matchesSearch(content: string, terms: string[], minSearchLength = 1): boolean {\n  const contents = content.toLowerCase();\n  return terms.every((term) => term.length < minSearchLength || contents.includes(term));\n}\n\n/**\n * Filters the given navigation items by the given search terms recursively.\n */\nexport function filterItems(\n  items: Parsed.GroupedElements,\n  terms: string[],\n  minSearchLength = 1,\n): Parsed.GroupedElements {\n  // check if we even want to filter\n  if (terms.length < 1) return items;\n\n  // filter the items, skip empty groups\n  return Array.from(items.entries()).reduce((filtered, [group, item]) => {\n    // filter nested groups\n    if (item instanceof Map && item.size > 0) {\n      const filteredItems = filterItems(item, terms, minSearchLength);\n      if (filteredItems.size > 0) filtered.set(group, filteredItems);\n      return filtered;\n    }\n\n    // filter elements and take group names into account as well\n    const { element } = item as Parsed.GroupedElement;\n    const searchable = `${element.groups.join(' ')} ${element.getNiceName()}`;\n    if (matchesSearch(searchable, terms, minSearchLength)) {\n      filtered.set(group, item);\n    }\n\n    // hand out result\n    return filtered;\n  }, new Map() as Parsed.GroupedElements);\n}\n", "import type * as CEM from 'custom-elements-manifest';\n\nexport type CustomElementDeclarationWithExamples = CEM.CustomElementDeclaration & { examples: string[] };\nexport type CustomElementDeclarationWithGroups = CEM.CustomElementDeclaration & { groups: string[] };\nexport type CustomElementDeclarationWithReadme = CEM.CustomElementDeclaration & { readme: string };\nexport type CustomElementDeclarationWithTagName = CEM.CustomElementDeclaration & { tagName: string[] };\n\nexport function isCustomElementDeclarationWithTagName(\n  declaration?: CEM.Declaration,\n): declaration is CustomElementDeclarationWithTagName {\n  return declaration !== undefined && 'customElement' in declaration && 'tagName' in declaration;\n}\n\nexport function isCustomElementField(field?: CEM.ClassMember): field is CEM.CustomElementField {\n  return field?.kind === 'field';\n}\n\nexport const WRAPPED_STRING_REGEX = /^['\"`](.*)['\"`]$/;\nexport function unwrapString(value: string): string {\n  return value.replace(WRAPPED_STRING_REGEX, '$1');\n}\n\nexport function getEnumValues(field: CEM.CustomElementField): string[] {\n  const parsed = field.type?.text?.split('|') ?? [];\n  const trimmed = parsed.map((value) => value.trim());\n  const unique = new Set(trimmed);\n  return [...unique].filter((value) => value !== '');\n}\n", "import type * as CEM from 'custom-elements-manifest';\n\nimport type { Field } from '@/utils/parser.types.js';\n\nimport { getEnumValues, unwrapString, WRAPPED_STRING_REGEX } from '../utils.js';\n\nexport const CemField = class {\n  #types: string[];\n  #enumValues: string[];\n\n  get isBoolean(): boolean {\n    return this.#types[0] === 'boolean';\n  }\n  get isNumber(): boolean {\n    return this.#types[0] === 'number';\n  }\n  get isString(): boolean {\n    return this.#types[0] === 'string' || WRAPPED_STRING_REGEX.test(this.#types[0] ?? '');\n  }\n  get isEnum(): boolean {\n    return this.#types.length > 1 && this.#types[1] !== 'undefined';\n  }\n  get isArray(): boolean {\n    return this.#types[0]?.endsWith('[]');\n  }\n  get isObject(): boolean {\n    return !!this._field.type && !this.isBoolean && !this.isNumber && !this.isString && !this.isArray;\n  }\n\n  get isControllable(): boolean {\n    return this.isPublic && !this.isStatic;\n  }\n\n  get isOptional(): boolean {\n    return !!this._field.type?.text.endsWith(' | undefined');\n  }\n\n  get hasAttribute(): boolean {\n    return 'attribute' in this._field && !!this._field.reflects;\n  }\n\n  get hasDefault(): boolean {\n    return this._field.default !== undefined;\n  }\n\n  get hasDescription(): boolean {\n    return this._field.default !== undefined;\n  }\n\n  get isStatic(): boolean {\n    return !!this._field.static;\n  }\n  get isPublic(): boolean {\n    return !this._field.privacy || this._field.privacy === 'public';\n  }\n  get isPrivate(): boolean {\n    return this._field.privacy === 'private';\n  }\n  get isProtected(): boolean {\n    return this._field.privacy === 'protected';\n  }\n\n  get enumValues(): string[] {\n    return this.#enumValues;\n  }\n\n  get default(): string | number | boolean | undefined {\n    if (this.isBoolean) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return this.hasDefault && this._field.default!.startsWith('true');\n    }\n    if (this.isNumber) {\n      return this.hasDefault && Number(this._field.default);\n    }\n    if (this.isString) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return this.hasDefault ? unwrapString(this._field.default!) : '';\n    }\n\n    return this._field.default;\n  }\n\n  constructor(private _field: CEM.CustomElementField) {\n    this.#types = getEnumValues(this._field);\n    this.#enumValues = this.#types.map(unwrapString);\n\n    // allow access to the original data by proxying\n    return new Proxy(this, {\n      get: (t: this, p: keyof Element) => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return p in t ? (t as any)[p] : (this._field as any)[p];\n      },\n    });\n  }\n} as unknown as Field;\n", "import type * as CEM from 'custom-elements-manifest';\n\nimport type { Slot } from '@/utils/parser.types.js';\n\nexport const CemSlot = class {\n  get default(): string {\n    // we use a bug in the analyzer for the time being to provide default contents\n    // for slots by their inofficial (and maybe unintentionally shipped) type data\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (this._slot as any).type?.text ?? '';\n  }\n\n  get hasDescription(): boolean {\n    return this._slot.description !== undefined;\n  }\n\n  constructor(private _slot: CEM.Slot) {\n    // allow access to the original data by proxying\n    return new Proxy(this, {\n      get: (t: this, p: keyof Element) => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return p in t ? (t as any)[p] : (this._slot as any)[p];\n      },\n    });\n  }\n} as unknown as Slot;\n", "import type * as CEM from 'custom-elements-manifest';\n\nimport type { Element, Field, Slot } from '@/utils/parser.types.js';\n\nimport {\n  type CustomElementDeclarationWithExamples,\n  type CustomElementDeclarationWithGroups,\n  type CustomElementDeclarationWithReadme,\n  isCustomElementField,\n} from '../utils.js';\nimport { CemField } from './cem-field.js';\nimport { CemSlot } from './cem-slot.js';\n\nexport const CemElement = class {\n  #fields: Map<string, Field>;\n  #slots: Map<string, Slot>;\n\n  get fields() {\n    return this.#fields;\n  }\n  get hasFields(): boolean {\n    return this.#fields.size > 0;\n  }\n\n  get slots() {\n    return this.#slots;\n  }\n  get hasSlots(): boolean {\n    return this.#slots.size > 0;\n  }\n\n  get hasGroups(): boolean {\n    return 'groups' in this._element;\n  }\n  get groups(): string[] {\n    return (this._element as CustomElementDeclarationWithGroups).groups ?? [];\n  }\n\n  get hasReadme(): boolean {\n    return 'readme' in this._element;\n  }\n  get readme(): string | undefined {\n    return (this._element as CustomElementDeclarationWithReadme).readme;\n  }\n\n  get hasExamples(): boolean {\n    return 'examples' in this._element && (this._element as CustomElementDeclarationWithExamples).examples.length > 0;\n  }\n  get examples(): string[] {\n    return (this._element as CustomElementDeclarationWithExamples).examples ?? [];\n  }\n\n  getNiceName(): string {\n    return this._element.name.replace(/([a-z])([A-Z])/g, '$1 $2');\n  }\n\n  getNiceUrl(): string {\n    return this._element.tagName ?? this._element.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n\n  constructor(private _element: CEM.CustomElementDeclaration) {\n    this.#fields =\n      this._element.members\n        ?.filter(isCustomElementField)\n        .reduce((map, field) => map.set(field.name, new CemField(field)), new Map()) ?? new Map();\n    this.#slots =\n      this._element.slots?.reduce((map, slot) => map.set(slot.name, new CemSlot(slot)), new Map()) ?? new Map();\n\n    // allow access to the original data by proxying\n    return new Proxy(this, {\n      get: (t: this, p: keyof Element) => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return p in t ? (t as any)[p] : (this._element as any)[p];\n      },\n    });\n  }\n} as unknown as Element;\n", "import type * as CEM from 'custom-elements-manifest';\n\nimport type * as Parsed from '@/utils/parser.types.js';\n\nimport { prepareElementLink } from '../../../utils/navigation.utils.js';\nimport { isCustomElementDeclarationWithTagName } from '../utils.js';\nimport { CemElement } from './cem-element.js';\n\nexport const CemParser = class {\n  #elements: Map<string, Parsed.Element>;\n\n  get elements() {\n    return this.#elements;\n  }\n\n  groupedElements(fallbackGroupName: string): Parsed.GroupedElements {\n    // sort a given map\n    function sortGroupedElements(map: Parsed.GroupedElements): Parsed.GroupedElements {\n      return new Map([...map.entries()].sort(([a], [b]) => a.localeCompare(b)));\n    }\n\n    // helper function to recursively add a grouped element\n    function addGroupedElement(map: Parsed.GroupedElements, group: [string, ...string[]], element: Parsed.Element) {\n      // read current and nested groups\n      const [currentGroup, ...nestedGroups] = group;\n\n      // create the current group if not exists\n      const currentMap = (map.get(currentGroup) ?? new Map()) as Parsed.GroupedElements;\n\n      // add nested groups recursively\n      if (nestedGroups.length > 0) {\n        addGroupedElement(currentMap, nestedGroups as [string], element);\n      }\n      // or add element to current group\n      else {\n        const name = element.getNiceName();\n        currentMap.set(name, { element, name, link: prepareElementLink(element) });\n      }\n\n      // finally, sort the map\n      const sortedMap = sortGroupedElements(currentMap);\n      map.set(currentGroup, sortedMap);\n    }\n\n    const elements = new Map() as Parsed.GroupedElements;\n    Array.from(this.elements.values()).forEach((element) => {\n      // Read groups and fallback if not available\n      const groups = element.hasGroups ? element.groups : [fallbackGroupName];\n      // Cycle potentially nested groups and add the element\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      groups!.forEach((group) => addGroupedElement(elements, group.split('/') as [string], element));\n    });\n\n    // deliver result\n    return sortGroupedElements(elements);\n  }\n\n  constructor(\n    private _data: CEM.Package,\n    exclude: string[] = [],\n  ) {\n    // parse the elements\n    this.#elements = this._data.modules\n      .flatMap((module) => module.declarations)\n      .filter(isCustomElementDeclarationWithTagName)\n      .filter((element) => !exclude.includes(element.tagName))\n      .reduce((map, element) => map.set(element.tagName, new CemElement(element)), new Map());\n\n    // allow access to the original data by proxying\n    return new Proxy(this, {\n      get(t, p: keyof Parsed.Parser) {\n        return p in t ? t[p] : _data[p];\n      },\n    });\n  }\n} as unknown as Parsed.Parser;\n", "import type { Manifest, Parser } from '@/utils/parser.types.js';\n\nimport { CemParser as CEM_1_0_0_Parser } from './1.0.0/cem-parser.js';\n\n// stores all available CEM parsers, keyed by their supporting schema version\nconst CEM_PARSERS = new Map<string, Parser>();\nCEM_PARSERS.set('1.0.0', CEM_1_0_0_Parser);\n\n/**\n * Parses given manifest data with the appropriate CEM parser.\n * Will throw an error if no parser for the given schema version is found, or if the given data is invalid.\n */\nexport const parseCEM = (data: object, exclude?: string[]): Manifest => {\n  if (!('schemaVersion' in data) || typeof data.schemaVersion !== 'string') {\n    throw new Error('No schema version found in manifest data. Was it generated by a CEM compliant tool?');\n  }\n  const { schemaVersion } = data;\n  const parser = CEM_PARSERS.get(schemaVersion);\n  if (parser === undefined) {\n    throw new Error(`No parser for CEM version ${schemaVersion} found.`);\n  }\n\n  return new parser(data, exclude);\n};\n", "import { parseCEM } from '@/parsers/cem/parse.js';\nimport type { Manifest } from '@/utils/parser.types.js';\n\ndeclare global {\n  interface WCP {\n    manifest: Manifest;\n  }\n\n  interface Window {\n    wcp: WCP;\n  }\n}\n\nexport async function loadManifest(manifestUrl: string, excludeElements: string[]): Promise<Manifest> {\n  const response = await fetch(manifestUrl);\n  const manifest = await response.json();\n\n  if (window.wcp === undefined) {\n    window.wcp = {} as Window['wcp'];\n  }\n  if (window.wcp.manifest === undefined) {\n    window.wcp.manifest = parseCEM(manifest, excludeElements);\n  }\n\n  return getManifest();\n}\n\n/**\n * Convenience function to retrieve the config\n */\nexport function getManifest(): Manifest {\n  return window.wcp.manifest;\n}\n", "import type { LitElement, TemplateResult } from 'lit';\n\nimport { log } from '@/utils/log.utils.js';\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: Property 'UrlPattern' does not exist\nif (!globalThis.URLPattern) {\n  await import('urlpattern-polyfill');\n}\n\nexport type Params = Record<string, string | undefined>;\n\nexport type Route = {\n  path: string;\n  enter?: (params: Params, router: Router, outgoingParams?: Params) => boolean | Promise<boolean>;\n  render?: (params: Params, router: Router) => TemplateResult;\n};\n\nexport type RegisterRoutes = (router: Router) => Route[];\n\nexport type ParsedUrl = {\n  /**\n   * Cleaned up path, derived from hash\n   */\n  path: string;\n\n  /**\n   * Prefixed url with base\n   */\n  url: string;\n};\n\n/**\n * Helps comparing param objects for equality\n */\nexport function areParamsEqual(a: Params, b: Params, exclude: string[] = []): boolean {\n  return Object.entries(a)\n    .filter(([key]) => !exclude.includes(key))\n    .every(([key, value]) => b[key] === value);\n}\n\n/**\n * Merges two given sets of params.\n */\nexport function mergeParams(oldParams: Params, newParams: Params, exclude: string[] = []): Params {\n  return Object.entries(newParams).reduce(\n    (params, [key, value]) => {\n      if (exclude.includes(key)) delete params[key];\n      if (value !== undefined) params[key] = value;\n      return params;\n    },\n    { ...oldParams },\n  );\n}\n\n// a primitive hash router implementation\nexport class Router {\n  readonly #host!: LitElement;\n  #currentPath?: string;\n  #currentParams: Params = {};\n  #currentRoute?: Route;\n  #routes: Route[] = [];\n\n  static isActive(path: string, currentPath?: string, exact = false): boolean {\n    const isSamePath = currentPath === path;\n    const isNestedPath = currentPath?.startsWith(`${path}/`) ?? false;\n    return isSamePath || (!exact && isNestedPath);\n  }\n\n  /**\n   * Redirect to a given path. This will trigger a hash change event.\n   */\n  static navigate(...slugs: (string | undefined)[]) {\n    const path = slugs.filter(Boolean).join('/');\n    log.info(`Navigate to ${path}`);\n    location.hash = path;\n  }\n\n  get currentPath(): string | undefined {\n    return this.#currentPath;\n  }\n\n  /**\n   * Defines the routes for this router.\n   */\n  registerRoutes(routes: Route[]) {\n    this.#routes = routes;\n    log.info(`Registered ${routes.length} routes`);\n  }\n\n  /**\n   * Checks if the given path is the currently active.\n   */\n  isActive(path: string, exact = false): boolean {\n    return Router.isActive(path, this.#currentPath, exact);\n  }\n\n  /**\n   * Redirect to a given path. This will trigger a hash change event.\n   * @alias Router.navigate\n   * @todo check whether this should be removed in favor of the static method\n   */\n  redirect(...slugs: (string | undefined)[]) {\n    Router.navigate(...slugs);\n  }\n\n  /**\n   * Update the current path without triggering a redirect.\n   */\n  updateCurrent(path: string) {\n    log.info(`Update to ${path}`);\n    const url = new URL(location.href);\n    url.hash = path;\n    history.replaceState({}, '', url);\n  }\n\n  constructor(host: LitElement) {\n    this.#host = host;\n  }\n\n  #withBaseUrl(path = location.pathname): string {\n    return `${location.origin}${path}`;\n  }\n\n  #createPattern(path: string): URLPattern {\n    return new URLPattern(this.#withBaseUrl(path));\n  }\n\n  #parseUrl(url: string): ParsedUrl {\n    const { hash } = new URL(url);\n    const path = hash.replace(/^#/, '');\n    return { path, url: this.#withBaseUrl(path) };\n  }\n\n  #findRouteForUrl(url: string): Route | undefined {\n    return this.#routes.find(({ path }) => this.#createPattern(path).test(url));\n  }\n\n  #findCurrentRoute = (async (event: HashChangeEvent) => {\n    // find next path and route\n    const { path: nextPath, url: nextUrl } = this.#parseUrl(event.newURL);\n    const nextRoute = this.#findRouteForUrl(nextUrl);\n\n    // what's going on?\n    log.info(`Route changed to ${nextPath}`);\n\n    // no route found\n    if (nextRoute === undefined) {\n      log.error(`No route found for ${nextPath}`);\n      throw new Error(`No route found for ${nextPath}`);\n    }\n\n    // derive params\n    let outgoingParams: Params | undefined;\n    const nextPattern = this.#createPattern(nextRoute.path);\n    const nextParams = nextPattern.exec(nextUrl)?.pathname.groups ?? {};\n\n    // derive params from current url - as we do not want to have a generic\n    // param handling strategy, we just pass the current params to the onEnter\n    // route method as well and let the implementor decide what to do with them\n    if (event.oldURL !== '') {\n      // we do basically the same as above, but for the old url\n      const { url: pastUrl } = this.#parseUrl(event.oldURL);\n      // we can cast this to \"defined\", as we know that the current route must exist\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const pastRoute = this.#findRouteForUrl(pastUrl)!;\n      const pastPattern = this.#createPattern(pastRoute.path);\n      outgoingParams = pastPattern.exec(pastUrl)?.pathname.groups ?? {};\n    }\n\n    // match on enter\n    if (typeof nextRoute.enter === 'function') {\n      const success = await nextRoute.enter(nextParams, this, outgoingParams);\n      if (success === false) return;\n    }\n\n    // update state\n    this.#currentPath = nextPath;\n    this.#currentParams = nextParams;\n    this.#currentRoute = nextRoute;\n    this.#host.requestUpdate();\n  }).bind(this);\n\n  connect() {\n    // register hash change listener\n    window.addEventListener('hashchange', this.#findCurrentRoute, false);\n    // call the detection initially\n    const event = new HashChangeEvent('hashchange', { newURL: location.href });\n    this.#findCurrentRoute(event);\n\n    log.info('Connected router');\n  }\n\n  disconnect() {\n    // unregister hash change listener\n    window.removeEventListener('hashchange', this.#findCurrentRoute, false);\n  }\n\n  outlet(): TemplateResult {\n    return this.#currentRoute?.render?.(this.#currentParams, this) as TemplateResult;\n  }\n}\n", "import { html } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { map } from 'lit/directives/map.js';\nimport { until } from 'lit/directives/until.js';\nimport { unsafeStatic, withStatic } from 'lit/static-html.js';\n\nimport { getManifest } from '@/utils/manifest.utils.js';\nimport { prefixRelativeUrls } from '@/utils/markdown.utils.js';\nimport { areParamsEqual, mergeParams, type Route, Router } from '@/utils/router.utils.js';\n\nexport const prepareRoutes = (): Route[] => [\n  {\n    path: '/',\n    enter: () => {\n      // redirect to initial element if defined\n      if (window.wcp.config.initialActiveElement !== undefined) {\n        Router.navigate(`/element/${window.wcp.config.initialActiveElement}`);\n        return false;\n      }\n\n      // redirect to first readme if available\n      const firstReadme = window.wcp.config.additionalReadmes[0]?.url;\n      if (firstReadme !== undefined) {\n        Router.navigate(`/readme/${encodeURIComponent(firstReadme)}`);\n        return false;\n      }\n\n      // redirect to first element\n      const firstElement = getManifest().elements.values().next().value.getNiceUrl();\n      Router.navigate(`/element/${firstElement}`);\n      return false;\n    },\n  },\n  {\n    path: '/readme/:url/:hash?',\n    enter: () => (window.wcp.config.additionalReadmes.length ?? 0) > 0,\n    render: ({ url = '', hash }) => {\n      // the url is encoded to be able to use it as a param\n      const encoded = decodeURIComponent(url);\n      // fetch the readme contents and parse it as markdown\n      const markdown = fetch(encoded)\n        .then((response) => response.text())\n        .then((markdown) => prefixRelativeUrls(markdown, encoded, '/#/readme/'));\n      return html`\n        <wcp-readme-frame>\n          <wcp-readme markdown=\"${until(markdown, '')}\" hash=\"${ifDefined(hash)}\"></wcp-readme>\n        </wcp-readme-frame>\n      `;\n    },\n  },\n  {\n    path: '/element/:tagName/:pluginName?/:pluginData?',\n    // fill in existing params if not provided for next route\n    enter: (params, router, outgoingParams) => {\n      // check if the params can be taken over (current route is the same\n      // path with different params), but exclude pluginData, as they're\n      // specific to the current element and should not be taken over\n      const hasOutgoingParams = outgoingParams !== undefined;\n      const isSamePath = router.currentPath?.startsWith('/element/');\n      const alignedParams = mergeParams(outgoingParams ?? {}, params, ['pluginData']);\n      const haveParamsChanged = !areParamsEqual(params, alignedParams, ['pluginData']);\n\n      // digest these insights; redirect and block current route\n      if (hasOutgoingParams && haveParamsChanged && isSamePath) {\n        const { tagName, pluginName, pluginData } = alignedParams;\n        Router.navigate('/element', tagName, pluginName, pluginData);\n        return false;\n      }\n\n      // everything okay here, just go on\n      return true;\n    },\n    render: ({ tagName = '', pluginName = window.wcp.config.initialStageTab, pluginData }) => {\n      return html`\n        <wcp-stage\n          active-plugin=\"${ifDefined(pluginName)}\"\n          @wcp-stage:active-plugin-change=\"${({ detail: pluginName }: CustomEvent<string>) =>\n            Router.navigate('/element', tagName, pluginName)}\"\n        >\n          ${map(\n            window.wcp.config.stagePlugins ?? [],\n            (stagePlugin) => withStatic(html)`\n            <${unsafeStatic(stagePlugin)}\n              preview-tag-name=\"${tagName}\"\n              .data=\"${ifDefined(pluginData)}\"\n              @wcp-stage-plugin:data-change=\"${({ detail: pluginData }: CustomEvent<string>) =>\n                Router.navigate('/element', tagName, pluginName, pluginData)}\"\n            ></${unsafeStatic(stagePlugin)}>\n          `,\n          )}\n        </wcp-stage>\n      `;\n    },\n  },\n];\n", "export default `:host {\n  --wcp-base-size: 10px;\n  --wcp-border-radius: calc(var(--wcp-base-size) * 0.5);\n  --wcp-color-opacity: 1;\n  --wcp-color-grey-100-raw: 0deg 0% 100%;\n  --wcp-color-grey-100: hsl(var(--wcp-color-grey-100-raw)/var(--wcp-color-opacity));\n  --wcp-color-grey-96-raw: 0deg 0% 96%;\n  --wcp-color-grey-96: hsl(var(--wcp-color-grey-96-raw)/var(--wcp-color-opacity));\n  --wcp-color-grey-90-raw: 0deg 0% 90%;\n  --wcp-color-grey-90: hsl(var(--wcp-color-grey-90-raw)/var(--wcp-color-opacity));\n  --wcp-color-grey-80-raw: 0deg 0% 80%;\n  --wcp-color-grey-80: hsl(var(--wcp-color-grey-80-raw)/var(--wcp-color-opacity));\n  --wcp-color-grey-65-raw: 0deg 0% 65%;\n  --wcp-color-grey-65: hsl(var(--wcp-color-grey-65-raw)/var(--wcp-color-opacity));\n  --wcp-color-grey-24-raw: 0deg 0% 24%;\n  --wcp-color-grey-24: hsl(var(--wcp-color-grey-24-raw)/var(--wcp-color-opacity));\n  --wcp-color-grey-17-raw: 0deg 0% 17%;\n  --wcp-color-grey-17: hsl(var(--wcp-color-grey-17-raw)/var(--wcp-color-opacity));\n  --wcp-color-blue-13-raw: 225deg 6% 13%;\n  --wcp-color-blue-13: hsl(var(--wcp-color-blue-13-raw)/var(--wcp-color-opacity));\n  --wcp-color-blue-17-raw: 215deg 28% 17%;\n  --wcp-color-blue-17: hsl(var(--wcp-color-blue-17-raw)/var(--wcp-color-opacity));\n  --wcp-color-blue-20-raw: 217deg 19% 20%;\n  --wcp-color-blue-20: hsl(var(--wcp-color-blue-20-raw)/var(--wcp-color-opacity));\n  --wcp-color-blue-24-raw: 217deg 19% 24%;\n  --wcp-color-blue-24: hsl(var(--wcp-color-blue-24-raw)/var(--wcp-color-opacity));\n  --wcp-color-blue-27-raw: 217deg 19% 27%;\n  --wcp-color-blue-27: hsl(var(--wcp-color-blue-27-raw)/var(--wcp-color-opacity));\n  --wcp-color-blue-34-raw: 215deg 14% 34%;\n  --wcp-color-blue-34: hsl(var(--wcp-color-blue-34-raw)/var(--wcp-color-opacity));\n  --wcp-color-blue-55-raw: 215deg 14% 55%;\n  --wcp-color-blue-55: hsl(var(--wcp-color-blue-55-raw)/var(--wcp-color-opacity));\n  --wcp-color-blue-65-raw: 218deg 11% 65%;\n  --wcp-color-blue-65: hsl(var(--wcp-color-blue-65-raw)/var(--wcp-color-opacity));\n  --wcp-color-blue-80-raw: 220deg 13% 80%;\n  --wcp-color-blue-80: hsl(var(--wcp-color-blue-80-raw)/var(--wcp-color-opacity));\n  --wcp-color-blue-91-raw: 220deg 13% 91%;\n  --wcp-color-blue-91: hsl(var(--wcp-color-blue-91-raw)/var(--wcp-color-opacity));\n  --wcp-color-blue-93-raw: 220deg 13% 93%;\n  --wcp-color-blue-93: hsl(var(--wcp-color-blue-93-raw)/var(--wcp-color-opacity));\n  --wcp-color-blue-96-raw: 220deg 14% 96%;\n  --wcp-color-blue-96: hsl(var(--wcp-color-blue-96-raw)/var(--wcp-color-opacity));\n  --wcp-fx-default-duration: 0.2s;\n  --wcp-fx-layout-duration: 0.4s;\n  --wcp-font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\",\n    Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n  --wcp-layout-flowing-width: 800px;\n  --wcp-layout-fixed-width: 1200px;\n}\n\n:host {\n  display: block;\n  font-family: var(--wcp-font-family);\n  font-feature-settings: normal;\n  font-size: 15px;\n  line-height: 1.3;\n  container: wcp-root/inline-size;\n}\n@media (min-width: 768px) {\n  :host {\n    font-size: 13px;\n  }\n}\n@media (min-width: 992px) {\n  :host {\n    font-size: 14px;\n  }\n}\n@media (min-width: 1200px) {\n  :host {\n    font-size: 15px;\n  }\n}\n\n:host(:not([inline])) {\n  width: 100vw;\n}\n@supports not (height: 100dvh) {\n  :host(:not([inline])) {\n    height: 100vh;\n  }\n}\n@supports (height: 100dvh) {\n  :host(:not([inline])) {\n    height: 100dvh;\n  }\n}\n\nwcp-topbar {\n  position: sticky;\n  top: 0;\n  right: 0;\n  bottom: auto;\n  left: 0;\n  z-index: 1;\n}\n\nwcp-root-splash {\n  z-index: 10;\n}\n/*# sourceMappingURL=data:application/json;base64, */`;\n", "import { html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement, eventOptions, property, queryAll, state } from 'lit/decorators.js';\nimport { map } from 'lit/directives/map.js';\nimport { when } from 'lit/directives/when.js';\n\nimport type { Navigation } from '@/components/features/navigation/navigation/navigation.component.js';\nimport { filterItems } from '@/utils/navigation.utils.js';\nimport type * as Parsed from '@/utils/parser.types.js';\nimport { Router } from '@/utils/router.utils.js';\n\nimport styles from './root-navigation.component.scss';\n\n/**\n * Manages the main root-navigation in the application root.\n *\n * @cssprop --wcp-root-navigation-empty-message-spacing - The spacing of the empty message.\n * @cssprop --wcp-root-navigation-empty-message-font-size - The font size of the empty message.\n */\n@customElement('wcp-root-navigation')\nexport class RootNavigation extends LitElement {\n  static override readonly styles = unsafeCSS(styles);\n\n  #items: Parsed.GroupedElements = new Map();\n  #searchTerms: string[] = [];\n\n  #altKeyPressed = false;\n  #handleKeyDown = this.handleKeyDown.bind(this);\n  #handleKeyUp = this.handleKeyUp.bind(this);\n\n  @queryAll('wcp-navigation[togglable]')\n  private readonly togglableNavigationRefs!: NodeListOf<Navigation>;\n\n  @state()\n  private filteredItems: Parsed.GroupedElements = new Map();\n\n  @property({ type: String, reflect: true, attribute: 'current-path' })\n  currentPath?: string;\n\n  @property({ type: String, reflect: true, attribute: 'empty-message' })\n  emptyMessage = 'No readmes nor elements found.';\n\n  @property({ type: Number, reflect: true, attribute: 'min-search-length' })\n  minSearchLength = 1;\n\n  @property({ attribute: false, noAccessor: true })\n  set searchTerms(terms: string[]) {\n    this.#searchTerms = terms;\n    this.filteredItems = filterItems(this.#items, this.#searchTerms, this.minSearchLength);\n  }\n\n  @property({ attribute: false, noAccessor: true })\n  set items(items: Parsed.GroupedElements) {\n    this.#items = items;\n    this.filteredItems = filterItems(this.#items, this.#searchTerms, this.minSearchLength);\n  }\n\n  constructor() {\n    super();\n    window.addEventListener('keydown', this.#handleKeyDown);\n    window.addEventListener('keyup', this.#handleKeyUp);\n  }\n\n  override disconnectedCallback(): void {\n    super.disconnectedCallback();\n    window.removeEventListener('keydown', this.#handleKeyDown);\n    window.removeEventListener('keyup', this.#handleKeyUp);\n  }\n\n  @eventOptions({ passive: true })\n  private handleKeyDown(event: KeyboardEvent) {\n    this.#altKeyPressed = event.altKey;\n  }\n\n  @eventOptions({ passive: true })\n  private handleKeyUp() {\n    this.#altKeyPressed = false;\n  }\n\n  @eventOptions({ passive: true })\n  private handleNavigationToggle(event: CustomEvent<boolean>): void {\n    // only if 'alt' key is pressed\n    if (!this.#altKeyPressed) return;\n    // toggle all others as well\n    this.togglableNavigationRefs.forEach((navigation) => {\n      navigation.open = event.detail;\n    });\n  }\n\n  protected renderItem({ name, link }: Parsed.GroupedElement): TemplateResult {\n    return html`\n      <wcp-navigation-item ?active=\"${Router.isActive(link, this.currentPath)}\" href=\"#${link}\">\n        ${name}\n      </wcp-navigation-item>\n    `;\n  }\n\n  protected renderItems(items: Parsed.GroupedElements, nested = false): TemplateResult | undefined {\n    if (!items.size) return undefined;\n\n    return html`${map(\n      items.entries(),\n      ([group, element]) => html`\n        ${when(\n          element instanceof Map && element.size > 0,\n          () => html`\n            <wcp-navigation\n              headline=\"${group}\"\n              ?togglable=\"${nested}\"\n              ?open=\"${nested}\"\n              @wcp-navigation-toggle=\"${this.handleNavigationToggle}\"\n            >\n              ${this.renderItems(element as Parsed.GroupedElements, true)}\n            </wcp-navigation>\n          `,\n          () => this.renderItem(element as Parsed.GroupedElement),\n        )}\n      `,\n    )}`;\n  }\n\n  protected override render(): TemplateResult {\n    return html`\n      ${when(\n        this.filteredItems.size > 0,\n        () => this.renderItems(this.filteredItems),\n        () => html`<p>${this.emptyMessage}</p>`,\n      )}\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-root-navigation': RootNavigation;\n  }\n}\n", "export default `:host {\n  ---wcp-root-navigation-empty-message-spacing: var(--wcp-root-navigation-empty-message-spacing, calc(var(--wcp-base-size, 10px) * 1) calc(var(--wcp-base-size, 10px) * 2));\n  ---wcp-root-navigation-empty-message-font-size: var(--wcp-root-navigation-empty-message-font-size, 0.8em);\n}\n\n:host {\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n}\n\np {\n  margin: var(---wcp-root-navigation-empty-message-spacing);\n  font-size: var(---wcp-root-navigation-empty-message-font-size);\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2NsaWVudC9jbGllbnQvc3JjL2NvbXBvbmVudHMvcm9vdC9yb290LW5hdmlnYXRpb24vcm9vdC1uYXZpZ2F0aW9uLmNvbXBvbmVudC5zY3NzIiwiOmhvc3QlMjAlN0IlMEElMjAlMjAtLS13Y3Atcm9vdC1uYXZpZ2F0aW9uLWVtcHR5LW1lc3NhZ2Utc3BhY2luZzolMjB2YXIoLS13Y3Atcm9vdC1uYXZpZ2F0aW9uLWVtcHR5LW1lc3NhZ2Utc3BhY2luZywlMjBjYWxjKHZhcigtLXdjcC1iYXNlLXNpemUsJTIwMTBweCklMjAqJTIwMSklMjBjYWxjKHZhcigtLXdjcC1iYXNlLXNpemUsJTIwMTBweCklMjAqJTIwMikpOyUwQSUyMCUyMC0tLXdjcC1yb290LW5hdmlnYXRpb24tZW1wdHktbWVzc2FnZS1mb250LXNpemU6JTIwdmFyKC0td2NwLXJvb3QtbmF2aWdhdGlvbi1lbXB0eS1tZXNzYWdlLWZvbnQtc2l6ZSwlMjAwLjhlbSk7JTBBJTdEJTBBJTBBOmhvc3QlMjAlN0IlMEElMjAlMjB1c2VyLXNlbGVjdDolMjBub25lOyUwQSU3RCUwQSUwQXAlMjAlN0IlMEElMjAlMjBtYXJnaW46JTIwdmFyKC0tLXdjcC1yb290LW5hdmlnYXRpb24tZW1wdHktbWVzc2FnZS1zcGFjaW5nKTslMEElMjAlMjBmb250LXNpemU6JTIwdmFyKC0tLXdjcC1yb290LW5hdmlnYXRpb24tZW1wdHktbWVzc2FnZS1mb250LXNpemUpOyUwQSU3RCUwQS8qJTIzJTIwc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWU2IyOTBJam9pTDJodmJXVXZjblZ1Ym1WeUwzZHZjbXN2WTJ4cFpXNTBMMk5zYVdWdWRDOXpjbU12WTI5dGNHOXVaVzUwY3k5eWIyOTBMM0p2YjNRdGJtRjJhV2RoZEdsdmJpSXNJbk52ZFhKalpYTWlPbHNpY205dmRDMXVZWFpwWjJGMGFXOXVMbU52YlhCdmJtVnVkQzV6WTNOeklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVZEJPMFZCUTBVN1JVRkRRVHM3TzBGQlIwWTdSVUZEUlRzN08wRkJSMFk3UlVGRFJUdEZRVU5CSWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaVFIVnpaU0FuUUM5emRIbHNaWE12ZFhScGJITW5JR0Z6SUhWMGFXeHpPMXh1WEc0dkx5QndjbVYwZEdsbGNpMXBaMjV2Y21WY2JqcG9iM04wSUh0Y2JpQWdMUzB0ZDJOd0xYSnZiM1F0Ym1GMmFXZGhkR2x2YmkxbGJYQjBlUzF0WlhOellXZGxMWE53WVdOcGJtYzZJSFpoY2lndExYZGpjQzF5YjI5MExXNWhkbWxuWVhScGIyNHRaVzF3ZEhrdGJXVnpjMkZuWlMxemNHRmphVzVuTENBamUzVjBhV3h6TG5OcGVtVW9NU2tnZFhScGJITXVjMmw2WlNneUtYMHBPMXh1SUNBdExTMTNZM0F0Y205dmRDMXVZWFpwWjJGMGFXOXVMV1Z0Y0hSNUxXMWxjM05oWjJVdFptOXVkQzF6YVhwbE9pQjJZWElvTFMxM1kzQXRjbTl2ZEMxdVlYWnBaMkYwYVc5dUxXVnRjSFI1TFcxbGMzTmhaMlV0Wm05dWRDMXphWHBsTENBd0xqaGxiU2s3WEc1OVhHNWNianBvYjNOMElIdGNiaUFnZFhObGNpMXpaV3hsWTNRNklHNXZibVU3WEc1OVhHNWNibkFnZTF4dUlDQnRZWEpuYVc0NklIWmhjaWd0TFMxM1kzQXRjbTl2ZEMxdVlYWnBaMkYwYVc5dUxXVnRjSFI1TFcxbGMzTmhaMlV0YzNCaFkybHVaeWs3WEc0Z0lHWnZiblF0YzJsNlpUb2dkbUZ5S0MwdExYZGpjQzF5YjI5MExXNWhkbWxuWVhScGIyNHRaVzF3ZEhrdGJXVnpjMkZuWlMxbWIyNTBMWE5wZW1VcE8xeHVmVnh1SWwxOSUyMCoiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7RUFDRSx5S0FBQTtFQUNBLHlHQUFBO0FDRkY7O0FES0E7RUFDRSx5QkFBQTtLQUFBLHNCQUFBO1VBQUEsaUJBQUE7QUNGRjs7QURLQTtFQUNFLHlEQUFBO0VBQ0EsOERBQUE7QUNGRiIsImZpbGUiOiI6aG9zdCB7XG4gIC0tLXdjcC1yb290LW5hdmlnYXRpb24tZW1wdHktbWVzc2FnZS1zcGFjaW5nOiB2YXIoLS13Y3Atcm9vdC1uYXZpZ2F0aW9uLWVtcHR5LW1lc3NhZ2Utc3BhY2luZywgY2FsYyh2YXIoLS13Y3AtYmFzZS1zaXplLCAxMHB4KSAqIDEpIGNhbGModmFyKC0td2NwLWJhc2Utc2l6ZSwgMTBweCkgKiAyKSk7XG4gIC0tLXdjcC1yb290LW5hdmlnYXRpb24tZW1wdHktbWVzc2FnZS1mb250LXNpemU6IHZhcigtLXdjcC1yb290LW5hdmlnYXRpb24tZW1wdHktbWVzc2FnZS1mb250LXNpemUsIDAuOGVtKTtcbn1cblxuOmhvc3Qge1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cblxucCB7XG4gIG1hcmdpbjogdmFyKC0tLXdjcC1yb290LW5hdmlnYXRpb24tZW1wdHktbWVzc2FnZS1zcGFjaW5nKTtcbiAgZm9udC1zaXplOiB2YXIoLS0td2NwLXJvb3QtbmF2aWdhdGlvbi1lbXB0eS1tZXNzYWdlLWZvbnQtc2l6ZSk7XG59XG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWU2IyOTBJam9pTDJodmJXVXZjblZ1Ym1WeUwzZHZjbXN2WTJ4cFpXNTBMMk5zYVdWdWRDOXpjbU12WTI5dGNHOXVaVzUwY3k5eWIyOTBMM0p2YjNRdGJtRjJhV2RoZEdsdmJpSXNJbk52ZFhKalpYTWlPbHNpY205dmRDMXVZWFpwWjJGMGFXOXVMbU52YlhCdmJtVnVkQzV6WTNOeklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVZEJPMFZCUTBVN1JVRkRRVHM3TzBGQlIwWTdSVUZEUlRzN08wRkJSMFk3UlVGRFJUdEZRVU5CSWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaVFIVnpaU0FuUUM5emRIbHNaWE12ZFhScGJITW5JR0Z6SUhWMGFXeHpPMXh1WEc0dkx5QndjbVYwZEdsbGNpMXBaMjV2Y21WY2JqcG9iM04wSUh0Y2JpQWdMUzB0ZDJOd0xYSnZiM1F0Ym1GMmFXZGhkR2x2YmkxbGJYQjBlUzF0WlhOellXZGxMWE53WVdOcGJtYzZJSFpoY2lndExYZGpjQzF5YjI5MExXNWhkbWxuWVhScGIyNHRaVzF3ZEhrdGJXVnpjMkZuWlMxemNHRmphVzVuTENBamUzVjBhV3h6TG5OcGVtVW9NU2tnZFhScGJITXVjMmw2WlNneUtYMHBPMXh1SUNBdExTMTNZM0F0Y205dmRDMXVZWFpwWjJGMGFXOXVMV1Z0Y0hSNUxXMWxjM05oWjJVdFptOXVkQzF6YVhwbE9pQjJZWElvTFMxM1kzQXRjbTl2ZEMxdVlYWnBaMkYwYVc5dUxXVnRjSFI1TFcxbGMzTmhaMlV0Wm05dWRDMXphWHBsTENBd0xqaGxiU2s3WEc1OVhHNWNianBvYjNOMElIdGNiaUFnZFhObGNpMXpaV3hsWTNRNklHNXZibVU3WEc1OVhHNWNibkFnZTF4dUlDQnRZWEpuYVc0NklIWmhjaWd0TFMxM1kzQXRjbTl2ZEMxdVlYWnBaMkYwYVc5dUxXVnRjSFI1TFcxbGMzTmhaMlV0YzNCaFkybHVaeWs3WEc0Z0lHWnZiblF0YzJsNlpUb2dkbUZ5S0MwdExYZGpjQzF5YjI5MExXNWhkbWxuWVhScGIyNHRaVzF3ZEhrdGJXVnpjMkZuWlMxbWIyNTBMWE5wZW1VcE8xeHVmVnh1SWwxOSAqIiwic291cmNlc0NvbnRlbnQiOlsiQHVzZSAnQC9zdHlsZXMvdXRpbHMnIGFzIHV0aWxzO1xuXG4vLyBwcmV0dGllci1pZ25vcmVcbjpob3N0IHtcbiAgLS0td2NwLXJvb3QtbmF2aWdhdGlvbi1lbXB0eS1tZXNzYWdlLXNwYWNpbmc6IHZhcigtLXdjcC1yb290LW5hdmlnYXRpb24tZW1wdHktbWVzc2FnZS1zcGFjaW5nLCAje3V0aWxzLnNpemUoMSkgdXRpbHMuc2l6ZSgyKX0pO1xuICAtLS13Y3Atcm9vdC1uYXZpZ2F0aW9uLWVtcHR5LW1lc3NhZ2UtZm9udC1zaXplOiB2YXIoLS13Y3Atcm9vdC1uYXZpZ2F0aW9uLWVtcHR5LW1lc3NhZ2UtZm9udC1zaXplLCAwLjhlbSk7XG59XG5cbjpob3N0IHtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG59XG5cbnAge1xuICBtYXJnaW46IHZhcigtLS13Y3Atcm9vdC1uYXZpZ2F0aW9uLWVtcHR5LW1lc3NhZ2Utc3BhY2luZyk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tLXdjcC1yb290LW5hdmlnYXRpb24tZW1wdHktbWVzc2FnZS1mb250LXNpemUpO1xufVxuIiwiOmhvc3Qge1xuICAtLS13Y3Atcm9vdC1uYXZpZ2F0aW9uLWVtcHR5LW1lc3NhZ2Utc3BhY2luZzogdmFyKC0td2NwLXJvb3QtbmF2aWdhdGlvbi1lbXB0eS1tZXNzYWdlLXNwYWNpbmcsIGNhbGModmFyKC0td2NwLWJhc2Utc2l6ZSwgMTBweCkgKiAxKSBjYWxjKHZhcigtLXdjcC1iYXNlLXNpemUsIDEwcHgpICogMikpO1xuICAtLS13Y3Atcm9vdC1uYXZpZ2F0aW9uLWVtcHR5LW1lc3NhZ2UtZm9udC1zaXplOiB2YXIoLS13Y3Atcm9vdC1uYXZpZ2F0aW9uLWVtcHR5LW1lc3NhZ2UtZm9udC1zaXplLCAwLjhlbSk7XG59XG5cbjpob3N0IHtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG59XG5cbnAge1xuICBtYXJnaW46IHZhcigtLS13Y3Atcm9vdC1uYXZpZ2F0aW9uLWVtcHR5LW1lc3NhZ2Utc3BhY2luZyk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tLXdjcC1yb290LW5hdmlnYXRpb24tZW1wdHktbWVzc2FnZS1mb250LXNpemUpO1xufVxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVlNiMjkwSWpvaUwyaHZiV1V2Y25WdWJtVnlMM2R2Y21zdlkyeHBaVzUwTDJOc2FXVnVkQzl6Y21NdlkyOXRjRzl1Wlc1MGN5OXliMjkwTDNKdmIzUXRibUYyYVdkaGRHbHZiaUlzSW5OdmRYSmpaWE1pT2xzaWNtOXZkQzF1WVhacFoyRjBhVzl1TG1OdmJYQnZibVZ1ZEM1elkzTnpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJRVWRCTzBWQlEwVTdSVUZEUVRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN1JVRkRSVHRGUVVOQklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lRSFZ6WlNBblFDOXpkSGxzWlhNdmRYUnBiSE1uSUdGeklIVjBhV3h6TzF4dVhHNHZMeUJ3Y21WMGRHbGxjaTFwWjI1dmNtVmNianBvYjNOMElIdGNiaUFnTFMwdGQyTndMWEp2YjNRdGJtRjJhV2RoZEdsdmJpMWxiWEIwZVMxdFpYTnpZV2RsTFhOd1lXTnBibWM2SUhaaGNpZ3RMWGRqY0MxeWIyOTBMVzVoZG1sbllYUnBiMjR0Wlcxd2RIa3RiV1Z6YzJGblpTMXpjR0ZqYVc1bkxDQWplM1YwYVd4ekxuTnBlbVVvTVNrZ2RYUnBiSE11YzJsNlpTZ3lLWDBwTzF4dUlDQXRMUzEzWTNBdGNtOXZkQzF1WVhacFoyRjBhVzl1TFdWdGNIUjVMVzFsYzNOaFoyVXRabTl1ZEMxemFYcGxPaUIyWVhJb0xTMTNZM0F0Y205dmRDMXVZWFpwWjJGMGFXOXVMV1Z0Y0hSNUxXMWxjM05oWjJVdFptOXVkQzF6YVhwbExDQXdMamhsYlNrN1hHNTlYRzVjYmpwb2IzTjBJSHRjYmlBZ2RYTmxjaTF6Wld4bFkzUTZJRzV2Ym1VN1hHNTlYRzVjYm5BZ2UxeHVJQ0J0WVhKbmFXNDZJSFpoY2lndExTMTNZM0F0Y205dmRDMXVZWFpwWjJGMGFXOXVMV1Z0Y0hSNUxXMWxjM05oWjJVdGMzQmhZMmx1WnlrN1hHNGdJR1p2Ym5RdGMybDZaVG9nZG1GeUtDMHRMWGRqY0MxeWIyOTBMVzVoZG1sbllYUnBiMjR0Wlcxd2RIa3RiV1Z6YzJGblpTMW1iMjUwTFhOcGVtVXBPMXh1ZlZ4dUlsMTkgKi8iXX0= */`;\n", "import { html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement } from 'lit/decorators.js';\n\nimport styles from './root-splash.component.scss';\n\n/**\n * Shows a splash screen whilst initializing the application.\n *\n * @property {boolean} [hidden] - Use the global hidden attribute to fade out the splash screen.\n *\n * @cssprop --wcp-root-splash-dark-background-color - The background color of the splash screen in dark mode.\n * @cssprop --wcp-root-splash-dark-color - The text color of the splash screen in dark mode.\n * @cssprop --wcp-root-splash-light-background-color - The background color of the splash screen in light mode.\n * @cssprop --wcp-root-splash-light-color - The text color of the splash screen in light mode.\n *\n * @slot {Loading...} - The text content to be displayed in the splash screen.\n *\n */\n@customElement('wcp-root-splash')\nexport class RootSplash extends LitElement {\n  static override readonly styles = unsafeCSS(styles);\n\n  protected override render(): TemplateResult {\n    return html`<slot></slot>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-root-splash': RootSplash;\n  }\n}\n", "export default `:host {\n  ---wcp-root-splash-dark-background-color: var(--wcp-root-splash-dark-background-color, var(--wcp-color-blue-17));\n  ---wcp-root-splash-dark-color: var(--wcp-root-splash-dark-color, var(--wcp-color-grey-96));\n  ---wcp-root-splash-light-background-color: var(--wcp-root-splash-light-background-color, var(--wcp-color-grey-96));\n  ---wcp-root-splash-light-color: var(--wcp-root-splash-light-color, var(--wcp-color-blue-80));\n}\n@media (prefers-color-scheme: dark) {\n  :host {\n    ---wcp-root-splash-background-color: var(---wcp-root-splash-dark-background-color);\n    ---wcp-root-splash-color: var(---wcp-root-splash-dark-color);\n  }\n}\n@media (prefers-color-scheme: light) {\n  :host {\n    ---wcp-root-splash-background-color: var(---wcp-root-splash-light-background-color);\n    ---wcp-root-splash-color: var(---wcp-root-splash-light-color);\n  }\n}\n\n:host {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: var(---wcp-root-splash-background-color);\n  color: var(---wcp-root-splash-color);\n  font: var(--wcp-font-family);\n  transition: opacity 1s ease-in-out;\n  pointer-events: none;\n}\n\n:host([hidden]) {\n  opacity: 0;\n}\n/*# sourceMappingURL=data:application/json;base64, */`;\n", "// Safari still hasn't ElementInternals shipped\nimport 'element-internals-polyfill';\n\nimport { html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement, eventOptions, property } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { when } from 'lit/directives/when.js';\n\nimport { ColorSchemable } from '@/mixins/color-schemable.mixin.js';\n\nimport styles from './button.component.scss';\n\n/**\n * Shows a button element.\n *\n * @slot {Some <i>Button</i>} - Default slot for the button content\n *\n * @cssprop --wcp-button-dark-passive-background - Background color of the button if non interactive in dark mode\n * @cssprop --wcp-button-dark-passive-border-color - Border color of the button if non interactive in dark mode\n * @cssprop --wcp-button-dark-passive-color - Text color of the button if non interactive in dark mode\n *\n * @cssprop --wcp-button-dark-hover-background - Background color of the button if hovered in dark mode\n * @cssprop --wcp-button-dark-hover-border-color - Border color of the button if hovered in dark mode\n * @cssprop --wcp-button-dark-hover-color - Text color of the button if hovered in dark mode\n *\n * @cssprop --wcp-button-dark-active-background - Background color of the button if active in dark mode\n * @cssprop --wcp-button-dark-active-border-color - Border color of the button if active in dark mode\n * @cssprop --wcp-button-dark-active-color - Text color of the button if active in dark mode\n *\n * @cssprop --wcp-button-light-passive-background - Background color of the button if non interactive in light mode\n * @cssprop --wcp-button-light-passive-border-color - Border color of the button if non interactive in light mode\n * @cssprop --wcp-button-light-passive-color - Text color of the button if non interactive in light mode\n *\n * @cssprop --wcp-button-light-hover-background - Background color of the button if hovered in light mode\n * @cssprop --wcp-button-light-hover-border-color - Border color of the button if hovered in light mode\n * @cssprop --wcp-button-light-hover-color - Text color of the button if hovered in light mode\n *\n * @cssprop --wcp-button-light-active-background - Background color of the button if active in light mode\n * @cssprop --wcp-button-light-active-border-color - Border color of the button if active in light mode\n * @cssprop --wcp-button-light-active-color - Text color of the button if active in light mode\n */\n@customElement('wcp-button')\nexport class Button extends ColorSchemable(LitElement) {\n  static readonly formAssociated = true;\n  static override readonly styles = unsafeCSS(styles);\n\n  readonly #internals = this.attachInternals();\n\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  @property({ type: Boolean, reflect: true })\n  nowrap = false;\n\n  /**\n   * Allows stretching the button across the full width of its container.\n   * This is useful for buttons that are used in a narrow form, or in general\n   * on small viewports, like handheld devices.\n   */\n  @property({ type: Boolean, reflect: true })\n  stretched = false;\n\n  /**\n   * The kind of button to render. Either like a conventional button, or for\n   * icons. Icon buttons are quadratic and will show a radial background on interaction.\n   */\n  @property({ type: String, reflect: true })\n  kind: 'button' | 'icon' = 'button';\n\n  @property({ type: String, reflect: true })\n  type: 'button' | 'reset' | 'submit' = 'button';\n\n  @property({ type: String, reflect: true })\n  href?: string;\n\n  @property({ type: String, reflect: true })\n  target?: '_self' | '_blank' | '_parent' | '_top';\n\n  @eventOptions({ passive: true })\n  handleButtonClick() {\n    // invoke submit on associated form\n    if (this.type === 'submit') {\n      this.#internals.form?.requestSubmit();\n    }\n    // reset the associated form\n    if (this.type === 'reset') {\n      this.#internals.form?.reset();\n    }\n  }\n\n  protected override render(): TemplateResult {\n    return html`\n      ${when(\n        this.href !== undefined && !this.disabled,\n        () => html`\n          <a\n            part=\"button\"\n            class=\"button\"\n            type=\"${this.type}\"\n            href=\"${ifDefined(this.href)}\"\n            target=\"${ifDefined(this.target)}\"\n          >\n            <slot></slot>\n          </a>\n        `,\n        () => html`\n          <button\n            part=\"button\"\n            class=\"button\"\n            ?disabled=\"${this.disabled}\"\n            type=\"${this.type}\"\n            @click=\"${this.handleButtonClick}\"\n          >\n            <slot></slot>\n          </button>\n        `,\n      )}\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-button': Button;\n  }\n}\n", "export default `:host {\n  ---wcp-button-dark-passive-background: var(--wcp-button-dark-passive-background, transparent);\n  ---wcp-button-dark-passive-border-color: var(--wcp-button-dark-passive-border-color, var(--wcp-color-blue-96));\n  ---wcp-button-dark-passive-color: var(--wcp-button-dark-passive-color, var(--wcp-color-blue-96));\n  ---wcp-button-dark-hover-background: var(--wcp-button-dark-hover-background, var(--wcp-color-blue-96));\n  ---wcp-button-dark-hover-border-color: var(--wcp-button-dark-hover-border-color, var(--wcp-color-blue-96));\n  ---wcp-button-dark-hover-color: var(--wcp-button-dark-hover-color, var(--wcp-color-blue-17));\n  ---wcp-button-dark-active-background: var(--wcp-button-dark-active-background, var(--wcp-color-blue-96));\n  ---wcp-button-dark-active-border-color: var(--wcp-button-dark-active-border-color, var(--wcp-color-blue-96));\n  ---wcp-button-dark-active-color: var(--wcp-button-dark-active-color, var(--wcp-color-blue-17));\n  ---wcp-button-light-passive-background: var(--wcp-button-light-passive-background, transparent);\n  ---wcp-button-light-passive-border-color: var(--wcp-button-light-passive-border-color, var(--wcp-color-blue-17));\n  ---wcp-button-light-passive-color: var(--wcp-button-light-passive-color, var(--wcp-color-blue-17));\n  ---wcp-button-light-hover-background: var(--wcp-button-light-hover-background, var(--wcp-color-blue-17));\n  ---wcp-button-light-hover-border-color: var(--wcp-button-light-hover-border-color, var(--wcp-color-blue-17));\n  ---wcp-button-light-hover-color: var(--wcp-button-light-hover-color, var(--wcp-color-blue-96));\n  ---wcp-button-light-active-background: var(--wcp-button-light-active-background, var(--wcp-color-blue-17));\n  ---wcp-button-light-active-border-color: var(--wcp-button-light-active-border-color, var(--wcp-color-blue-17));\n  ---wcp-button-light-active-color: var(--wcp-button-light-active-color, var(--wcp-color-blue-96));\n}\n\n@media (prefers-color-scheme: dark) {\n  :host {\n    ---wcp-button-background: var(---wcp-button-dark-passive-background);\n    ---wcp-button-border-color: var(---wcp-button-dark-passive-border-color);\n    ---wcp-button-color: var(---wcp-button-dark-passive-color);\n  }\n}\n:host([color-scheme=dark]):host {\n  ---wcp-button-background: var(---wcp-button-dark-passive-background);\n  ---wcp-button-border-color: var(---wcp-button-dark-passive-border-color);\n  ---wcp-button-color: var(---wcp-button-dark-passive-color);\n}\n\n@media (prefers-color-scheme: light) {\n  :host {\n    ---wcp-button-background: var(---wcp-button-light-passive-background);\n    ---wcp-button-border-color: var(---wcp-button-light-passive-border-color);\n    ---wcp-button-color: var(---wcp-button-light-passive-color);\n  }\n}\n:host([color-scheme=light]):host {\n  ---wcp-button-background: var(---wcp-button-light-passive-background);\n  ---wcp-button-border-color: var(---wcp-button-light-passive-border-color);\n  ---wcp-button-color: var(---wcp-button-light-passive-color);\n}\n\n@media (prefers-color-scheme: dark) {\n  :host(:enabled:hover) {\n    ---wcp-button-background: var(---wcp-button-dark-hover-background);\n    ---wcp-button-border-color: var(---wcp-button-dark-hover-border-color);\n    ---wcp-button-color: var(---wcp-button-dark-hover-color);\n  }\n}\n:host([color-scheme=dark]):host(:enabled:hover) {\n  ---wcp-button-background: var(---wcp-button-dark-hover-background);\n  ---wcp-button-border-color: var(---wcp-button-dark-hover-border-color);\n  ---wcp-button-color: var(---wcp-button-dark-hover-color);\n}\n\n@media (prefers-color-scheme: light) {\n  :host(:enabled:hover) {\n    ---wcp-button-background: var(---wcp-button-light-hover-background);\n    ---wcp-button-border-color: var(---wcp-button-light-hover-border-color);\n    ---wcp-button-color: var(---wcp-button-light-hover-color);\n  }\n}\n:host([color-scheme=light]):host(:enabled:hover) {\n  ---wcp-button-background: var(---wcp-button-light-hover-background);\n  ---wcp-button-border-color: var(---wcp-button-light-hover-border-color);\n  ---wcp-button-color: var(---wcp-button-light-hover-color);\n}\n\n@media (prefers-color-scheme: dark) {\n  :host(:enabled:active) {\n    ---wcp-button-background: var(---wcp-button-dark-active-background);\n    ---wcp-button-border-color: var(---wcp-button-dark-active-border-color);\n    ---wcp-button-color: var(---wcp-button-dark-active-color);\n  }\n}\n:host([color-scheme=dark]):host(:enabled:active) {\n  ---wcp-button-background: var(---wcp-button-dark-active-background);\n  ---wcp-button-border-color: var(---wcp-button-dark-active-border-color);\n  ---wcp-button-color: var(---wcp-button-dark-active-color);\n}\n\n@media (prefers-color-scheme: light) {\n  :host(:enabled:active) {\n    ---wcp-button-background: var(---wcp-button-light-active-background);\n    ---wcp-button-border-color: var(---wcp-button-light-active-border-color);\n    ---wcp-button-color: var(---wcp-button-light-active-color);\n  }\n}\n:host([color-scheme=light]):host(:enabled:active) {\n  ---wcp-button-background: var(---wcp-button-light-active-background);\n  ---wcp-button-border-color: var(---wcp-button-light-active-border-color);\n  ---wcp-button-color: var(---wcp-button-light-active-color);\n}\n\n@media (prefers-color-scheme: dark) {\n  :host(:enabled.active) {\n    ---wcp-button-background: var(---wcp-button-dark-active-background);\n    ---wcp-button-border-color: var(---wcp-button-dark-active-border-color);\n    ---wcp-button-color: var(---wcp-button-dark-active-color);\n  }\n}\n:host([color-scheme=dark]):host(:enabled.active) {\n  ---wcp-button-background: var(---wcp-button-dark-active-background);\n  ---wcp-button-border-color: var(---wcp-button-dark-active-border-color);\n  ---wcp-button-color: var(---wcp-button-dark-active-color);\n}\n\n@media (prefers-color-scheme: light) {\n  :host(:enabled.active) {\n    ---wcp-button-background: var(---wcp-button-light-active-background);\n    ---wcp-button-border-color: var(---wcp-button-light-active-border-color);\n    ---wcp-button-color: var(---wcp-button-light-active-color);\n  }\n}\n:host([color-scheme=light]):host(:enabled.active) {\n  ---wcp-button-background: var(---wcp-button-light-active-background);\n  ---wcp-button-border-color: var(---wcp-button-light-active-border-color);\n  ---wcp-button-color: var(---wcp-button-light-active-color);\n}\n\n:host {\n  display: inline-block;\n  max-width: 100%;\n  width: -moz-fit-content;\n  width: fit-content;\n}\n\n:host(:not([kind=icon])[stretched]) {\n  width: 100%;\n}\n\n.button {\n  all: unset;\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none;\n  box-sizing: border-box;\n  display: block;\n  width: 100%;\n  font-weight: 700;\n  line-height: 1.5em;\n  letter-spacing: 0.16em;\n  text-align: center;\n  text-transform: uppercase;\n  word-wrap: break-word;\n  cursor: pointer;\n  transition: ease-in-out var(--wcp-fx-default-duration);\n  transition-property: background-color, color, opacity;\n}\n.button:disabled {\n  cursor: default;\n  opacity: 0.5;\n  pointer-events: none;\n}\n:host(:not([kind=icon])) .button {\n  padding: 0.5em 1em;\n  background-color: var(---wcp-button-background);\n  border: var(---wcp-button-border-color) 1px solid;\n  color: var(---wcp-button-color);\n}\n:host([kind=icon]) .button {\n  aspect-ratio: 1/1;\n  padding: calc(10px * 1);\n  padding: calc(var(--wcp-base-size, 10px) * 1);\n  position: relative;\n  font-size: 0;\n  line-height: 0;\n}\n:host([kind=icon]) .button::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  border-radius: 50%;\n  transition: ease-in-out var(--wcp-fx-default-duration);\n  transition-property: background-color, opacity;\n  background-color: var(---wcp-button-background);\n  opacity: 0.15;\n}\n:host([kind=icon]:enabled:active) .button::before, :host([kind=icon]:enabled.active) .button::before {\n  opacity: 0.3;\n}\n:host([nowrap]) .button {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  word-wrap: normal;\n  overflow: hidden;\n}\n/*# sourceMappingURL=data:application/json;base64, */`;\n", "import { html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement } from 'lit/decorators.js';\n\nimport { ColorSchemable } from '@/mixins/color-schemable.mixin.js';\n\nimport styles from './code.component.scss';\n\n/**\n * Shows a formatted code snippet.\n *\n */\n@customElement('wcp-code')\nexport class Code extends ColorSchemable(LitElement) {\n  static override readonly styles = unsafeCSS(styles);\n\n  // disable ShadowDOM\n  // https://stackoverflow.com/a/55213037/1146207\n  override createRenderRoot() {\n    return this;\n  }\n\n  // without ShadowDOM, we need to manually inject the styles\n  protected override render(): TemplateResult {\n    return html`\n      <style>\n        ${Code.styles}\n      </style>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-code': Code;\n  }\n}\n", "export default `@charset \"UTF-8\";\n@media (prefers-color-scheme: dark) {\n  wcp-code {\n    /**\n     * prism.js Dark theme for JavaScript, CSS and HTML\n     * Based on the slides of the talk \u201C/Reg(exp){2}lained/\u201D\n     * @author Lea Verou\n     */\n    /* Code blocks */\n    /* Inline code */\n  }\n  wcp-code code[class*=language-],\n  wcp-code pre[class*=language-] {\n    color: white;\n    background: none;\n    text-shadow: 0 -0.1em 0.2em black;\n    font-family: Consolas, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace;\n    font-size: 1em;\n    text-align: left;\n    white-space: pre;\n    word-spacing: normal;\n    word-break: normal;\n    word-wrap: normal;\n    line-height: 1.5;\n    -moz-tab-size: 4;\n    -o-tab-size: 4;\n    tab-size: 4;\n    -webkit-hyphens: none;\n    hyphens: none;\n  }\n}\n@media print and (prefers-color-scheme: dark) {\n  wcp-code code[class*=language-],\n  wcp-code pre[class*=language-] {\n    text-shadow: none;\n  }\n}\n@media (prefers-color-scheme: dark) {\n  wcp-code pre[class*=language-],\n  wcp-code :not(pre) > code[class*=language-] {\n    background: hsl(30, 20%, 25%);\n  }\n  wcp-code pre[class*=language-] {\n    padding: 1em;\n    margin: 0.5em 0;\n    overflow: auto;\n    border: 0.3em solid hsl(30, 20%, 40%);\n    border-radius: 0.5em;\n    box-shadow: 1px 1px 0.5em black inset;\n  }\n  wcp-code :not(pre) > code[class*=language-] {\n    padding: 0.15em 0.2em 0.05em;\n    border-radius: 0.3em;\n    border: 0.13em solid hsl(30, 20%, 40%);\n    box-shadow: 1px 1px 0.3em -0.1em black inset;\n    white-space: normal;\n  }\n  wcp-code .token.comment,\n  wcp-code .token.prolog,\n  wcp-code .token.doctype,\n  wcp-code .token.cdata {\n    color: hsl(30, 20%, 50%);\n  }\n  wcp-code .token.punctuation {\n    opacity: 0.7;\n  }\n  wcp-code .token.namespace {\n    opacity: 0.7;\n  }\n  wcp-code .token.property,\n  wcp-code .token.tag,\n  wcp-code .token.boolean,\n  wcp-code .token.number,\n  wcp-code .token.constant,\n  wcp-code .token.symbol {\n    color: hsl(350, 40%, 70%);\n  }\n  wcp-code .token.selector,\n  wcp-code .token.attr-name,\n  wcp-code .token.string,\n  wcp-code .token.char,\n  wcp-code .token.builtin,\n  wcp-code .token.inserted {\n    color: hsl(75, 70%, 60%);\n  }\n  wcp-code .token.operator,\n  wcp-code .token.entity,\n  wcp-code .token.url,\n  wcp-code .language-css .token.string,\n  wcp-code .style .token.string,\n  wcp-code .token.variable {\n    color: hsl(40, 90%, 60%);\n  }\n  wcp-code .token.atrule,\n  wcp-code .token.attr-value,\n  wcp-code .token.keyword {\n    color: hsl(350, 40%, 70%);\n  }\n  wcp-code .token.regex,\n  wcp-code .token.important {\n    color: #e90;\n  }\n  wcp-code .token.important,\n  wcp-code .token.bold {\n    font-weight: bold;\n  }\n  wcp-code .token.italic {\n    font-style: italic;\n  }\n  wcp-code .token.entity {\n    cursor: help;\n  }\n  wcp-code .token.deleted {\n    color: red;\n  }\n}\nwcp-code[color-scheme=dark] {\n  /**\n   * prism.js Dark theme for JavaScript, CSS and HTML\n   * Based on the slides of the talk \u201C/Reg(exp){2}lained/\u201D\n   * @author Lea Verou\n   */\n  /* Code blocks */\n  /* Inline code */\n}\nwcp-code[color-scheme=dark] code[class*=language-],\nwcp-code[color-scheme=dark] pre[class*=language-] {\n  color: white;\n  background: none;\n  text-shadow: 0 -0.1em 0.2em black;\n  font-family: Consolas, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace;\n  font-size: 1em;\n  text-align: left;\n  white-space: pre;\n  word-spacing: normal;\n  word-break: normal;\n  word-wrap: normal;\n  line-height: 1.5;\n  -moz-tab-size: 4;\n  -o-tab-size: 4;\n  tab-size: 4;\n  -webkit-hyphens: none;\n  hyphens: none;\n}\n@media print {\n  wcp-code[color-scheme=dark] code[class*=language-],\n  wcp-code[color-scheme=dark] pre[class*=language-] {\n    text-shadow: none;\n  }\n}\nwcp-code[color-scheme=dark] pre[class*=language-],\nwcp-code[color-scheme=dark] :not(pre) > code[class*=language-] {\n  background: hsl(30, 20%, 25%);\n}\nwcp-code[color-scheme=dark] pre[class*=language-] {\n  padding: 1em;\n  margin: 0.5em 0;\n  overflow: auto;\n  border: 0.3em solid hsl(30, 20%, 40%);\n  border-radius: 0.5em;\n  box-shadow: 1px 1px 0.5em black inset;\n}\nwcp-code[color-scheme=dark] :not(pre) > code[class*=language-] {\n  padding: 0.15em 0.2em 0.05em;\n  border-radius: 0.3em;\n  border: 0.13em solid hsl(30, 20%, 40%);\n  box-shadow: 1px 1px 0.3em -0.1em black inset;\n  white-space: normal;\n}\nwcp-code[color-scheme=dark] .token.comment,\nwcp-code[color-scheme=dark] .token.prolog,\nwcp-code[color-scheme=dark] .token.doctype,\nwcp-code[color-scheme=dark] .token.cdata {\n  color: hsl(30, 20%, 50%);\n}\nwcp-code[color-scheme=dark] .token.punctuation {\n  opacity: 0.7;\n}\nwcp-code[color-scheme=dark] .token.namespace {\n  opacity: 0.7;\n}\nwcp-code[color-scheme=dark] .token.property,\nwcp-code[color-scheme=dark] .token.tag,\nwcp-code[color-scheme=dark] .token.boolean,\nwcp-code[color-scheme=dark] .token.number,\nwcp-code[color-scheme=dark] .token.constant,\nwcp-code[color-scheme=dark] .token.symbol {\n  color: hsl(350, 40%, 70%);\n}\nwcp-code[color-scheme=dark] .token.selector,\nwcp-code[color-scheme=dark] .token.attr-name,\nwcp-code[color-scheme=dark] .token.string,\nwcp-code[color-scheme=dark] .token.char,\nwcp-code[color-scheme=dark] .token.builtin,\nwcp-code[color-scheme=dark] .token.inserted {\n  color: hsl(75, 70%, 60%);\n}\nwcp-code[color-scheme=dark] .token.operator,\nwcp-code[color-scheme=dark] .token.entity,\nwcp-code[color-scheme=dark] .token.url,\nwcp-code[color-scheme=dark] .language-css .token.string,\nwcp-code[color-scheme=dark] .style .token.string,\nwcp-code[color-scheme=dark] .token.variable {\n  color: hsl(40, 90%, 60%);\n}\nwcp-code[color-scheme=dark] .token.atrule,\nwcp-code[color-scheme=dark] .token.attr-value,\nwcp-code[color-scheme=dark] .token.keyword {\n  color: hsl(350, 40%, 70%);\n}\nwcp-code[color-scheme=dark] .token.regex,\nwcp-code[color-scheme=dark] .token.important {\n  color: #e90;\n}\nwcp-code[color-scheme=dark] .token.important,\nwcp-code[color-scheme=dark] .token.bold {\n  font-weight: bold;\n}\nwcp-code[color-scheme=dark] .token.italic {\n  font-style: italic;\n}\nwcp-code[color-scheme=dark] .token.entity {\n  cursor: help;\n}\nwcp-code[color-scheme=dark] .token.deleted {\n  color: red;\n}\n\n@media (prefers-color-scheme: light) {\n  wcp-code {\n    /**\n     * prism.js default theme for JavaScript, CSS and HTML\n     * Based on dabblet (http://dabblet.com)\n     * @author Lea Verou\n     */\n    /* Code blocks */\n    /* Inline code */\n  }\n  wcp-code code[class*=language-],\n  wcp-code pre[class*=language-] {\n    color: black;\n    background: none;\n    text-shadow: 0 1px white;\n    font-family: Consolas, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace;\n    font-size: 1em;\n    text-align: left;\n    white-space: pre;\n    word-spacing: normal;\n    word-break: normal;\n    word-wrap: normal;\n    line-height: 1.5;\n    -moz-tab-size: 4;\n    -o-tab-size: 4;\n    tab-size: 4;\n    -webkit-hyphens: none;\n    hyphens: none;\n  }\n  wcp-code pre[class*=language-]::-moz-selection, wcp-code pre[class*=language-] ::-moz-selection,\n  wcp-code code[class*=language-]::-moz-selection, wcp-code code[class*=language-] ::-moz-selection {\n    text-shadow: none;\n    background: #b3d4fc;\n  }\n  wcp-code pre[class*=language-]::-moz-selection, wcp-code pre[class*=language-] ::-moz-selection, wcp-code code[class*=language-]::-moz-selection, wcp-code code[class*=language-] ::-moz-selection {\n    text-shadow: none;\n    background: #b3d4fc;\n  }\n  wcp-code pre[class*=language-]::selection, wcp-code pre[class*=language-] ::selection,\n  wcp-code code[class*=language-]::selection, wcp-code code[class*=language-] ::selection {\n    text-shadow: none;\n    background: #b3d4fc;\n  }\n}\n@media print and (prefers-color-scheme: light) {\n  wcp-code code[class*=language-],\n  wcp-code pre[class*=language-] {\n    text-shadow: none;\n  }\n}\n@media (prefers-color-scheme: light) {\n  wcp-code pre[class*=language-] {\n    padding: 1em;\n    margin: 0.5em 0;\n    overflow: auto;\n  }\n  wcp-code :not(pre) > code[class*=language-],\n  wcp-code pre[class*=language-] {\n    background: #f5f2f0;\n  }\n  wcp-code :not(pre) > code[class*=language-] {\n    padding: 0.1em;\n    border-radius: 0.3em;\n    white-space: normal;\n  }\n  wcp-code .token.comment,\n  wcp-code .token.prolog,\n  wcp-code .token.doctype,\n  wcp-code .token.cdata {\n    color: slategray;\n  }\n  wcp-code .token.punctuation {\n    color: #999;\n  }\n  wcp-code .token.namespace {\n    opacity: 0.7;\n  }\n  wcp-code .token.property,\n  wcp-code .token.tag,\n  wcp-code .token.boolean,\n  wcp-code .token.number,\n  wcp-code .token.constant,\n  wcp-code .token.symbol,\n  wcp-code .token.deleted {\n    color: #905;\n  }\n  wcp-code .token.selector,\n  wcp-code .token.attr-name,\n  wcp-code .token.string,\n  wcp-code .token.char,\n  wcp-code .token.builtin,\n  wcp-code .token.inserted {\n    color: #690;\n  }\n  wcp-code .token.operator,\n  wcp-code .token.entity,\n  wcp-code .token.url,\n  wcp-code .language-css .token.string,\n  wcp-code .style .token.string {\n    color: #9a6e3a;\n    /* This background color was intended by the author of this theme. */\n    background: hsla(0, 0%, 100%, 0.5);\n  }\n  wcp-code .token.atrule,\n  wcp-code .token.attr-value,\n  wcp-code .token.keyword {\n    color: #07a;\n  }\n  wcp-code .token.function,\n  wcp-code .token.class-name {\n    color: #DD4A68;\n  }\n  wcp-code .token.regex,\n  wcp-code .token.important,\n  wcp-code .token.variable {\n    color: #e90;\n  }\n  wcp-code .token.important,\n  wcp-code .token.bold {\n    font-weight: bold;\n  }\n  wcp-code .token.italic {\n    font-style: italic;\n  }\n  wcp-code .token.entity {\n    cursor: help;\n  }\n}\nwcp-code[color-scheme=light] {\n  /**\n   * prism.js default theme for JavaScript, CSS and HTML\n   * Based on dabblet (http://dabblet.com)\n   * @author Lea Verou\n   */\n  /* Code blocks */\n  /* Inline code */\n}\nwcp-code[color-scheme=light] code[class*=language-],\nwcp-code[color-scheme=light] pre[class*=language-] {\n  color: black;\n  background: none;\n  text-shadow: 0 1px white;\n  font-family: Consolas, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace;\n  font-size: 1em;\n  text-align: left;\n  white-space: pre;\n  word-spacing: normal;\n  word-break: normal;\n  word-wrap: normal;\n  line-height: 1.5;\n  -moz-tab-size: 4;\n  -o-tab-size: 4;\n  tab-size: 4;\n  -webkit-hyphens: none;\n  hyphens: none;\n}\nwcp-code[color-scheme=light] pre[class*=language-]::-moz-selection, wcp-code[color-scheme=light] pre[class*=language-] ::-moz-selection,\nwcp-code[color-scheme=light] code[class*=language-]::-moz-selection, wcp-code[color-scheme=light] code[class*=language-] ::-moz-selection {\n  text-shadow: none;\n  background: #b3d4fc;\n}\nwcp-code[color-scheme=light] pre[class*=language-]::-moz-selection, wcp-code[color-scheme=light] pre[class*=language-] ::-moz-selection, wcp-code[color-scheme=light] code[class*=language-]::-moz-selection, wcp-code[color-scheme=light] code[class*=language-] ::-moz-selection {\n  text-shadow: none;\n  background: #b3d4fc;\n}\nwcp-code[color-scheme=light] pre[class*=language-]::selection, wcp-code[color-scheme=light] pre[class*=language-] ::selection,\nwcp-code[color-scheme=light] code[class*=language-]::selection, wcp-code[color-scheme=light] code[class*=language-] ::selection {\n  text-shadow: none;\n  background: #b3d4fc;\n}\n@media print {\n  wcp-code[color-scheme=light] code[class*=language-],\n  wcp-code[color-scheme=light] pre[class*=language-] {\n    text-shadow: none;\n  }\n}\nwcp-code[color-scheme=light] pre[class*=language-] {\n  padding: 1em;\n  margin: 0.5em 0;\n  overflow: auto;\n}\nwcp-code[color-scheme=light] :not(pre) > code[class*=language-],\nwcp-code[color-scheme=light] pre[class*=language-] {\n  background: #f5f2f0;\n}\nwcp-code[color-scheme=light] :not(pre) > code[class*=language-] {\n  padding: 0.1em;\n  border-radius: 0.3em;\n  white-space: normal;\n}\nwcp-code[color-scheme=light] .token.comment,\nwcp-code[color-scheme=light] .token.prolog,\nwcp-code[color-scheme=light] .token.doctype,\nwcp-code[color-scheme=light] .token.cdata {\n  color: slategray;\n}\nwcp-code[color-scheme=light] .token.punctuation {\n  color: #999;\n}\nwcp-code[color-scheme=light] .token.namespace {\n  opacity: 0.7;\n}\nwcp-code[color-scheme=light] .token.property,\nwcp-code[color-scheme=light] .token.tag,\nwcp-code[color-scheme=light] .token.boolean,\nwcp-code[color-scheme=light] .token.number,\nwcp-code[color-scheme=light] .token.constant,\nwcp-code[color-scheme=light] .token.symbol,\nwcp-code[color-scheme=light] .token.deleted {\n  color: #905;\n}\nwcp-code[color-scheme=light] .token.selector,\nwcp-code[color-scheme=light] .token.attr-name,\nwcp-code[color-scheme=light] .token.string,\nwcp-code[color-scheme=light] .token.char,\nwcp-code[color-scheme=light] .token.builtin,\nwcp-code[color-scheme=light] .token.inserted {\n  color: #690;\n}\nwcp-code[color-scheme=light] .token.operator,\nwcp-code[color-scheme=light] .token.entity,\nwcp-code[color-scheme=light] .token.url,\nwcp-code[color-scheme=light] .language-css .token.string,\nwcp-code[color-scheme=light] .style .token.string {\n  color: #9a6e3a;\n  /* This background color was intended by the author of this theme. */\n  background: hsla(0, 0%, 100%, 0.5);\n}\nwcp-code[color-scheme=light] .token.atrule,\nwcp-code[color-scheme=light] .token.attr-value,\nwcp-code[color-scheme=light] .token.keyword {\n  color: #07a;\n}\nwcp-code[color-scheme=light] .token.function,\nwcp-code[color-scheme=light] .token.class-name {\n  color: #DD4A68;\n}\nwcp-code[color-scheme=light] .token.regex,\nwcp-code[color-scheme=light] .token.important,\nwcp-code[color-scheme=light] .token.variable {\n  color: #e90;\n}\nwcp-code[color-scheme=light] .token.important,\nwcp-code[color-scheme=light] .token.bold {\n  font-weight: bold;\n}\nwcp-code[color-scheme=light] .token.italic {\n  font-style: italic;\n}\nwcp-code[color-scheme=light] .token.entity {\n  cursor: help;\n}\n\nwcp-code pre {\n  margin: 0;\n}\n/*# sourceMappingURL=data:application/json;base64, */`;\n", "import { html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nimport styles from './icon.component.scss';\n\n/**\n * Shows an icon from the css.gg icon set.\n *\n * @cssprop --wcp-icon-size - Sets the size of the icon as unitless number in pixels\n */\n@customElement('wcp-icon')\nexport class Icon extends LitElement {\n  static override readonly styles = unsafeCSS(styles);\n\n  @property({ type: String, reflect: true })\n  name!: string;\n\n  protected override render(): TemplateResult {\n    return html`<i class=\"gg-${this.name}\"></i>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-icon': Icon;\n  }\n}\n", "export default `.gg-add {\n  box-sizing: border-box;\n  position: relative;\n  display: block;\n  width: 22px;\n  height: 22px;\n  border: 2px solid;\n  transform: scale(1);\n  transform: scale(var(--ggs, 1));\n  border-radius: 22px;\n}\n.gg-add::after, .gg-add::before {\n  content: \"\";\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  width: 10px;\n  height: 2px;\n  background: currentColor;\n  border-radius: 5px;\n  top: 8px;\n  left: 4px;\n}\n.gg-add::after {\n  width: 2px;\n  height: 10px;\n  top: 4px;\n  left: 8px;\n}\n\n.gg-close {\n  box-sizing: border-box;\n  position: relative;\n  display: block;\n  transform: scale(1);\n  transform: scale(var(--ggs, 1));\n  width: 22px;\n  height: 22px;\n  border: 2px solid transparent;\n  border-radius: 40px;\n}\n.gg-close::after, .gg-close::before {\n  content: \"\";\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  width: 16px;\n  height: 2px;\n  background: currentColor;\n  transform: rotate(45deg);\n  border-radius: 5px;\n  top: 8px;\n  left: 1px;\n}\n.gg-close::after {\n  transform: rotate(-45deg);\n}\n\n.gg-chevron-down {\n  box-sizing: border-box;\n  position: relative;\n  display: block;\n  transform: scale(1);\n  transform: scale(var(--ggs, 1));\n  width: 22px;\n  height: 22px;\n  border: 2px solid transparent;\n  border-radius: 100px;\n}\n.gg-chevron-down::after {\n  content: \"\";\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  width: 10px;\n  height: 10px;\n  border-bottom: 2px solid;\n  border-right: 2px solid;\n  transform: rotate(45deg);\n  left: 4px;\n  top: 2px;\n}\n\n.gg-chevron-up {\n  box-sizing: border-box;\n  position: relative;\n  display: block;\n  transform: scale(1);\n  transform: scale(var(--ggs, 1));\n  width: 22px;\n  height: 22px;\n  border: 2px solid transparent;\n  border-radius: 100px;\n}\n.gg-chevron-up::after {\n  content: \"\";\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  width: 10px;\n  height: 10px;\n  border-top: 2px solid;\n  border-right: 2px solid;\n  transform: rotate(-45deg);\n  left: 4px;\n  bottom: 2px;\n}\n\n.gg-external {\n  box-sizing: border-box;\n  position: relative;\n  display: block;\n  transform: scale(1);\n  transform: scale(var(--ggs, 1));\n  width: 12px;\n  height: 12px;\n  box-shadow: -2px 2px 0 0, -4px -4px 0 -2px, 4px 4px 0 -2px;\n  margin-left: -2px;\n  margin-top: 1px;\n}\n.gg-external::after {\n  content: \"\";\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  right: -4px;\n}\n.gg-external::before {\n  content: \"\";\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  right: -4px;\n  background: currentColor;\n  transform: rotate(-45deg);\n  width: 12px;\n  height: 2px;\n  top: 1px;\n}\n.gg-external::after {\n  width: 8px;\n  height: 8px;\n  border-right: 2px solid;\n  border-top: 2px solid;\n  top: -4px;\n}\n\n.gg-laptop {\n  box-sizing: border-box;\n  position: relative;\n  display: block;\n  transform: scale(1);\n  transform: scale(var(--ggs, 1));\n  width: 18px;\n  height: 12px;\n  border: 2px solid;\n  border-radius: 2px;\n}\n.gg-laptop::after {\n  content: \"\";\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  width: 22px;\n  height: 2px;\n  background: currentColor;\n  left: -4px;\n  bottom: -5px;\n  border-radius: 100px;\n}\n\n.gg-menu {\n  transform: scale(1);\n  transform: scale(var(--ggs, 1));\n  box-sizing: border-box;\n  position: relative;\n  display: block;\n  width: 20px;\n  height: 2px;\n  border-radius: 3px;\n  background: currentColor;\n}\n.gg-menu::after, .gg-menu::before {\n  box-sizing: border-box;\n  position: relative;\n  display: block;\n  width: 20px;\n  height: 2px;\n  border-radius: 3px;\n  background: currentColor;\n}\n.gg-menu::after, .gg-menu::before {\n  content: \"\";\n  position: absolute;\n  top: -6px;\n}\n.gg-menu::after {\n  top: 6px;\n}\n\n.gg-moon {\n  display: block;\n  box-sizing: border-box;\n  border-radius: 50%;\n  overflow: hidden;\n  position: relative;\n  transform: rotate(-135deg) scale(1);\n  transform: rotate(-135deg) scale(var(--ggs, 1));\n  width: 20px;\n  height: 20px;\n  border: 2px solid;\n  border-bottom-color: transparent;\n}\n.gg-moon::after {\n  display: block;\n  box-sizing: border-box;\n  border-radius: 50%;\n  content: \"\";\n  position: absolute;\n  width: 12px;\n  height: 18px;\n  border: 2px solid transparent;\n  box-shadow: 0 0 0 2px;\n  top: 8px;\n  left: 2px;\n}\n\n.gg-more-alt {\n  transform: scale(1);\n  transform: scale(var(--ggs, 1));\n  box-sizing: border-box;\n  position: relative;\n  display: block;\n  width: 4px;\n  height: 4px;\n  background: currentColor;\n  border-radius: 100%;\n}\n.gg-more-alt::after, .gg-more-alt::before {\n  box-sizing: border-box;\n  position: relative;\n  display: block;\n  width: 4px;\n  height: 4px;\n  background: currentColor;\n  border-radius: 100%;\n}\n.gg-more-alt::after, .gg-more-alt::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n}\n.gg-more-alt::after {\n  left: -6px;\n}\n.gg-more-alt::before {\n  right: -6px;\n}\n\n.gg-push-chevron-down {\n  box-sizing: border-box;\n  position: relative;\n  display: block;\n  transform: scale(1);\n  transform: scale(var(--ggs, 1));\n  width: 22px;\n  height: 22px;\n  border: 2px solid transparent;\n  border-radius: 100px;\n}\n.gg-push-chevron-down::after {\n  content: \"\";\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  border-bottom: 2px solid;\n}\n.gg-push-chevron-down::before {\n  content: \"\";\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  border-bottom: 2px solid;\n  bottom: 0;\n  width: 14px;\n  height: 2px;\n  left: 2px;\n}\n.gg-push-chevron-down::after {\n  width: 10px;\n  height: 10px;\n  border-right: 2px solid;\n  transform: rotate(45deg);\n  left: 4px;\n  top: 2px;\n}\n\n.gg-push-chevron-up {\n  box-sizing: border-box;\n  position: relative;\n  display: block;\n  transform: scale(1);\n  transform: scale(var(--ggs, 1));\n  width: 22px;\n  height: 22px;\n  border: 2px solid transparent;\n  border-radius: 100px;\n}\n.gg-push-chevron-up::after {\n  content: \"\";\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  border-top: 2px solid;\n}\n.gg-push-chevron-up::before {\n  content: \"\";\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  border-top: 2px solid;\n  top: 0;\n  width: 14px;\n  height: 2px;\n  left: 2px;\n}\n.gg-push-chevron-up::after {\n  width: 10px;\n  height: 10px;\n  border-right: 2px solid;\n  transform: rotate(-45deg);\n  left: 4px;\n  bottom: 2px;\n}\n\n.gg-ratio {\n  box-sizing: border-box;\n  position: relative;\n  display: block;\n  transform: scale(1);\n  transform: scale(var(--ggs, 1));\n  width: 24px;\n  height: 20px;\n  border: 2px solid;\n  border-radius: 4px;\n}\n.gg-ratio::after {\n  content: \"\";\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  width: 6px;\n  height: 6px;\n}\n.gg-ratio::before {\n  content: \"\";\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  width: 6px;\n  height: 6px;\n  border-bottom: 2px solid;\n  border-right: 2px solid;\n  top: 8px;\n  left: 12px;\n}\n.gg-ratio::after {\n  border-top: 2px solid;\n  border-left: 2px solid;\n  top: 2px;\n  left: 2px;\n}\n\n.gg-remove {\n  box-sizing: border-box;\n  position: relative;\n  display: block;\n  transform: scale(1);\n  transform: scale(var(--ggs, 1));\n  width: 22px;\n  height: 22px;\n  border: 2px solid;\n  border-radius: 22px;\n}\n.gg-remove::before {\n  content: \"\";\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  width: 10px;\n  height: 2px;\n  background: currentColor;\n  border-radius: 5px;\n  top: 8px;\n  left: 4px;\n}\n\n.gg-screen {\n  box-sizing: border-box;\n  position: relative;\n  display: block;\n  transform: scale(1);\n  transform: scale(var(--ggs, 1));\n  width: 22px;\n  height: 14px;\n  border: 2px solid;\n  border-radius: 3px;\n  margin-top: -4px;\n}\n.gg-screen::after {\n  content: \"\";\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  border-radius: 3px;\n  width: 10px;\n  height: 2px;\n  background: currentColor;\n  top: 14px;\n  left: 4px;\n}\n.gg-screen::before {\n  content: \"\";\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  border-radius: 3px;\n  width: 10px;\n  height: 2px;\n  background: currentColor;\n  top: 14px;\n  left: 4px;\n  width: 2px;\n  height: 6px;\n  top: 10px;\n  left: 8px;\n}\n\n.gg-screen-wide {\n  box-sizing: border-box;\n  position: relative;\n  display: block;\n  transform: scale(1);\n  transform: scale(var(--ggs, 1));\n  width: 24px;\n  height: 11px;\n  border: 2px solid;\n  border-radius: 3px;\n  margin-top: -4px;\n}\n.gg-screen-wide::after {\n  content: \"\";\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  border-radius: 3px;\n  width: 8px;\n  height: 2px;\n  background: currentColor;\n  top: 10px;\n  left: 6px;\n}\n.gg-screen-wide::before {\n  content: \"\";\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  border-radius: 3px;\n  width: 8px;\n  height: 2px;\n  background: currentColor;\n  top: 10px;\n  left: 6px;\n  width: 2px;\n  height: 4px;\n  top: 8px;\n  left: 9px;\n}\n\n.gg-search {\n  box-sizing: border-box;\n  position: relative;\n  display: block;\n  transform: scale(1);\n  transform: scale(var(--ggs, 1));\n  width: 16px;\n  height: 16px;\n  border: 2px solid;\n  border-radius: 100%;\n  margin-left: -4px;\n  margin-top: -4px;\n}\n.gg-search::after {\n  content: \"\";\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  border-radius: 3px;\n  width: 2px;\n  height: 8px;\n  background: currentColor;\n  transform: rotate(-45deg);\n  top: 10px;\n  left: 12px;\n}\n\n.gg-smartphone {\n  background: linear-gradient(to left, currentColor 5px, transparent 0) no-repeat 4px 12px/2px 2px;\n  box-sizing: border-box;\n  position: relative;\n  display: block;\n  transform: scale(1);\n  transform: scale(var(--ggs, 1));\n  width: 14px;\n  height: 20px;\n  border: 2px solid;\n  border-radius: 2px;\n}\n\n.gg-sun {\n  box-sizing: border-box;\n  position: relative;\n  display: block;\n  transform: scale(1);\n  transform: scale(var(--ggs, 1));\n  width: 24px;\n  height: 24px;\n  background: linear-gradient(to bottom, currentColor 4px, transparent 0) no-repeat 5px -6px/2px 6px, linear-gradient(to bottom, currentColor 4px, transparent 0) no-repeat 5px 14px/2px 6px, linear-gradient(to bottom, currentColor 4px, transparent 0) no-repeat -8px 5px/6px 2px, linear-gradient(to bottom, currentColor 4px, transparent 0) no-repeat 14px 5px/6px 2px;\n  border-radius: 100px;\n  box-shadow: inset 0 0 0 2px;\n  border: 6px solid transparent;\n}\n.gg-sun::after {\n  content: \"\";\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  width: 24px;\n  height: 2px;\n  border-right: 4px solid;\n  border-left: 4px solid;\n  left: -6px;\n  top: 5px;\n}\n.gg-sun::before {\n  content: \"\";\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  width: 24px;\n  height: 2px;\n  border-right: 4px solid;\n  border-left: 4px solid;\n  left: -6px;\n  top: 5px;\n  transform: rotate(-45deg);\n}\n.gg-sun::after {\n  transform: rotate(45deg);\n}\n\n.gg-sync {\n  box-sizing: border-box;\n  position: relative;\n  display: block;\n  transform: scale(1);\n  transform: scale(var(--ggs, 1));\n  border-radius: 40px;\n  border: 2px solid;\n  margin: 1px;\n  border-left-color: transparent;\n  border-right-color: transparent;\n  width: 18px;\n  height: 18px;\n}\n.gg-sync::after {\n  content: \"\";\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  width: 0;\n  height: 0;\n  border-top: 4px solid transparent;\n  border-bottom: 4px solid transparent;\n  transform: rotate(-45deg);\n}\n.gg-sync::before {\n  content: \"\";\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  width: 0;\n  height: 0;\n  border-top: 4px solid transparent;\n  border-bottom: 4px solid transparent;\n  transform: rotate(-45deg);\n  border-left: 6px solid;\n  bottom: -1px;\n  right: -3px;\n}\n.gg-sync::after {\n  border-right: 6px solid;\n  top: -1px;\n  left: -3px;\n}\n\n.gg-terminal {\n  box-sizing: border-box;\n  position: relative;\n  display: block;\n  transform: scale(1);\n  transform: scale(var(--ggs, 1));\n  width: 24px;\n  height: 20px;\n  border: 2px solid;\n  border-radius: 2px;\n}\n.gg-terminal::after {\n  content: \"\";\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n}\n.gg-terminal::before {\n  content: \"\";\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  border-right: 2px solid;\n  border-bottom: 2px solid;\n  transform: rotate(-45deg);\n  width: 6px;\n  height: 6px;\n  top: 5px;\n  left: 3px;\n}\n.gg-terminal::after {\n  width: 4px;\n  height: 2px;\n  background: currentColor;\n  top: 10px;\n  left: 11px;\n}\n\n:host {\n  ---wcp-icon-size: var(--wcp-icon-size, 22);\n  --ggs: calc(var(---wcp-icon-size) / 22);\n}\n\n:host {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  height: calc(var(---wcp-icon-size) * 1px);\n  width: calc(var(---wcp-icon-size) * 1px);\n}\n\ni {\n  flex: 0 0 auto;\n}\n/*# sourceMappingURL=data:application/json;base64, */`;\n", "import { html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement, eventOptions, property, queryAll } from 'lit/decorators.js';\nimport { map } from 'lit/directives/map.js';\n\nimport { ColorSchemable } from '@/mixins/color-schemable.mixin.js';\n\nimport styles from './tabs.component.scss';\n\n/**\n * @slot tab name - The content of the named tab.\n * @emits wcp-tabs:active-tab-change - Notifies when the active tab changes\n *\n * @cssprop --wcp-tabs-tablist-gap - The gap between the tablist and the tabpanels\n * @cssprop --wcp-tabs-tablist-spacing - The inner padding of the tablist\n * @cssprop --wcp-tabs-tab-spacing - The inner padding of the tabs\n * @cssprop --wcp-tabs-tab-active-border-width - The border width of the active tab\n * @cssprop --wcp-tabs-panel-spacing - The inner padding of the tabpanels\n *\n * @cssprop --wcp-tabs-tablist-dark-border-color - The border color of the tablist in dark mode\n * @cssprop --wcp-tabs-tab-active-dark-border-color - The border color of the active tab in dark mode\n *\n * @cssprop --wcp-tabs-tablist-light-border-color - The border color of the tablist in light mode\n * @cssprop --wcp-tabs-tab-active-light-border-color - The border color of the active tab in light mode\n */\n@customElement('wcp-tabs')\nexport class Tabs extends ColorSchemable(LitElement) {\n  static override readonly styles = unsafeCSS(styles);\n\n  tabFocus = 0;\n\n  @queryAll('[role=\"tab\"]')\n  private readonly tabRoles!: HTMLElement[];\n\n  @property({ type: Object })\n  tabs: Record<string, { label: string; disabled?: boolean }> = {};\n\n  @property({ type: String, reflect: true, attribute: 'active-tab' })\n  activeTab?: string;\n\n  emitActiveTabChange() {\n    const event = new CustomEvent('wcp-tabs:active-tab-change', {\n      detail: this.activeTab,\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n    });\n    this.dispatchEvent(event);\n  }\n\n  @eventOptions({ passive: true })\n  handleTabClick(event: Event) {\n    const tab = event.target as HTMLButtonElement;\n    const activeTab = tab.dataset.name as typeof this.activeTab;\n    if (this.activeTab !== activeTab) {\n      this.activeTab = activeTab;\n      this.emitActiveTabChange();\n    }\n  }\n\n  @eventOptions({ passive: true })\n  handleKeydown(event: KeyboardEvent) {\n    // Move right\n    if (event.key === 'ArrowRight' || event.key === 'ArrowLeft') {\n      const tabs = this.tabRoles;\n      tabs[this.tabFocus].setAttribute('tabindex', '-1');\n      if (event.key === 'ArrowRight') {\n        this.tabFocus++;\n        // If we're at the end, go to the start\n        if (this.tabFocus >= tabs.length) {\n          this.tabFocus = 0;\n        }\n        // Move left\n      } else if (event.key === 'ArrowLeft') {\n        this.tabFocus--;\n        // If we're at the start, move to the end\n        if (this.tabFocus < 0) {\n          this.tabFocus = tabs.length - 1;\n        }\n      }\n\n      tabs[this.tabFocus].setAttribute('tabindex', '0');\n      tabs[this.tabFocus].focus();\n    }\n  }\n\n  protected override render(): TemplateResult {\n    return html`\n      <nav part=\"tablist\" role=\"tablist\" aria-label=\"Sample Tabs\" @keydown=\"${this.handleKeydown}\">\n        ${map(\n          Object.entries(this.tabs),\n          ([tab, { label, disabled }]) => html`\n            <button\n              role=\"tab\"\n              aria-selected=\"${this.activeTab === tab ? 'true' : 'false'}\"\n              aria-controls=\"${tab}-panel\"\n              data-name=\"${tab}\"\n              id=\"${tab}-tab\"\n              tabindex=\"${this.activeTab === tab ? '0' : '-1'}\"\n              ?disabled=\"${disabled}\"\n              @click=\"${this.handleTabClick}\"\n            >\n              ${label}\n            </button>\n          `,\n        )}\n      </nav>\n\n      ${map(\n        Object.keys(this.tabs),\n        (tab) => html`\n          <div\n            id=\"${tab}-panel\"\n            part=\"${tab}-panel\"\n            role=\"tabpanel\"\n            tabindex=\"0\"\n            aria-labelledby=\"${tab}-tab\"\n            ?hidden=\"${this.activeTab !== tab}\"\n          >\n            <slot name=\"${tab}\"></slot>\n          </div>\n        `,\n      )}\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementEventMap {\n    'wcp-tabs:active-tab-change': CustomEvent<string>;\n  }\n  interface HTMLElementTagNameMap {\n    'wcp-tabs': Tabs;\n  }\n}\n", "export default `:host {\n  ---wcp-tabs-tablist-gap: var(--wcp-tabs-tablist-gap, calc(var(--wcp-base-size, 10px) * 1));\n  ---wcp-tabs-tablist-spacing: var(--wcp-tabs-tablist-spacing, 0);\n  ---wcp-tabs-tab-spacing: var(--wcp-tabs-tab-spacing, calc(var(--wcp-base-size, 10px) * 1) calc(var(--wcp-base-size, 10px) * 1) calc(var(--wcp-base-size, 10px) * 0.5));\n  ---wcp-tabs-tab-active-border-width: var(--wcp-tabs-active-tab-border-width, 3px);\n  ---wcp-tabs-panel-spacing: var(--wcp-tabs-panel-spacing, calc(var(--wcp-base-size, 10px) * 1));\n  ---wcp-tabs-tablist-dark-border-color: var(--wcp-tabs-tablist-dark-border-color, var(--wcp-color-grey-24));\n  ---wcp-tabs-tab-active-dark-border-color: var(--wcp-tabs-active-tab-border-color, var(--wcp-color-blue-55));\n  ---wcp-tabs-tablist-light-border-color: var(--wcp-tabs-tablist-light-border-color, var(--wcp-color-grey-65));\n  ---wcp-tabs-tab-active-light-border-color: var(--wcp-tabs-active-tab-border-color, var(--wcp-color-blue-65));\n}\n@media (prefers-color-scheme: dark) {\n  :host {\n    ---wcp-tabs-tablist-border-color: var(---wcp-tabs-tablist-dark-border-color);\n    ---wcp-tabs-tab-active-border-color: var(---wcp-tabs-tab-active-dark-border-color);\n  }\n}\n:host([color-scheme=dark]):host {\n  ---wcp-tabs-tablist-border-color: var(---wcp-tabs-tablist-dark-border-color);\n  ---wcp-tabs-tab-active-border-color: var(---wcp-tabs-tab-active-dark-border-color);\n}\n\n@media (prefers-color-scheme: light) {\n  :host {\n    ---wcp-tabs-tablist-border-color: var(---wcp-tabs-tablist-light-border-color);\n    ---wcp-tabs-tab-active-border-color: var(---wcp-tabs-tab-active-light-border-color);\n  }\n}\n:host([color-scheme=light]):host {\n  ---wcp-tabs-tablist-border-color: var(---wcp-tabs-tablist-light-border-color);\n  ---wcp-tabs-tab-active-border-color: var(---wcp-tabs-tab-active-light-border-color);\n}\n\n:host {\n  display: flex;\n  flex-direction: column;\n}\n\nnav {\n  flex: 0 0 auto;\n  display: flex;\n  flex-direction: row;\n  gap: var(---wcp-tabs-tablist-gap);\n  padding: var(---wcp-tabs-tablist-spacing);\n  border-bottom: 1px solid var(---wcp-tabs-tablist-border-color);\n}\n\nbutton {\n  all: unset;\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none;\n  padding: var(---wcp-tabs-tab-spacing);\n  border-bottom: var(---wcp-tabs-tab-active-border-width) solid transparent;\n  transition: border-bottom-color var(---wcp-fx-default-duration) ease-in-out;\n  will-change: border-bottom-color;\n}\nbutton:enabled {\n  cursor: pointer;\n}\nbutton:enabled[aria-selected=true] {\n  border-bottom-color: var(---wcp-tabs-tab-active-border-color);\n}\nbutton:disabled {\n  opacity: 0.5;\n}\n\n[role=tabpanel] {\n  flex: 1 0 auto;\n  padding: var(---wcp-tabs-panel-spacing);\n  scrollbar-color: var(--wcp-color-blue-34) transparent;\n  overflow: auto;\n}\n[role=tabpanel]::-webkit-scrollbar {\n  width: 0.5rem;\n}\n[role=tabpanel]::-webkit-scrollbar-thumb {\n  background-color: var(--wcp-color-blue-34);\n  border-radius: 0.5rem;\n}\n[role=tabpanel]::-webkit-scrollbar-track {\n  display: none;\n  background-color: transparent;\n}\n/*# sourceMappingURL=data:application/json;base64, */`;\n", "import { html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nimport styles from './title.component.scss';\n\n/**\n * Shows the application title and a logo.\n *\n * @slot logo - Receives the logo image to be shown\n *\n * @cssprop --wcp-title-gap - The gap between the logo and the title\n * @cssprop --wcp-title-height - The height of the title. Content may exceed and scales the tile\n * @cssprop --wcp-title-spacing - Inner padding of the title\n * @cssprop --wcp-title-headline-size - The font size of the title\n * @cssprop --wcp-title-headline-weight - The font weight of the title\n * @cssprop --wcp-title-headline-spacing - The letter spacing of the title\n * @cssprop --wcp-title-headline-line-height - The line height of the title\n * @cssprop --wcp-title-headline-transform - The text transform of the title\n */\n@customElement('wcp-title')\nexport class Title extends LitElement {\n  static override readonly styles = unsafeCSS(styles);\n\n  @property({ type: String, reflect: true })\n  override title!: string;\n\n  protected override render(): TemplateResult {\n    return html`\n      <slot name=\"logo\"></slot>\n      <h1>${this.title}</h1>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-title': Title;\n  }\n}\n", "export default `:host {\n  ---wcp-title-gap: var(--wcp-title-gap, calc(var(--wcp-base-size, 10px) * 1));\n  ---wcp-title-height: var(--wcp-title-height, calc(var(--wcp-base-size, 10px) * 5));\n  ---wcp-title-spacing: var(--wcp-title-spacing, calc(var(--wcp-base-size, 10px) * 1) calc(var(--wcp-base-size, 10px) * 4) calc(var(--wcp-base-size, 10px) * 1) calc(var(--wcp-base-size, 10px) * 2));\n  ---wcp-title-headline-size: var(--wcp-title-headline-size, 15px);\n  ---wcp-title-headline-weight: var(--wcp-title-headline-weight, 400);\n  ---wcp-title-headline-spacing: var(--wcp-title-headline-spacing, 0.05em);\n  ---wcp-title-headline-line-height: var(--wcp-title-headline-line-height, 1.1);\n  ---wcp-title-headline-transform: var(--wcp-title-headline-transform, uppercase);\n}\n\n:host {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: var(---wcp-title-gap);\n  box-sizing: border-box;\n  padding: var(---wcp-title-spacing);\n  min-height: var(---wcp-title-height);\n}\n\nh1 {\n  height: -moz-fit-content;\n  height: fit-content;\n  margin: -0.175em 0 -0.1em;\n  font-size: var(---wcp-title-headline-size);\n  font-weight: var(---wcp-title-headline-weight);\n  letter-spacing: var(---wcp-title-headline-spacing);\n  line-height: var(---wcp-title-headline-line-height);\n  text-transform: var(---wcp-title-headline-transform);\n}\n/*# sourceMappingURL=data:application/json;base64, */`;\n", "import { html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement, eventOptions, property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { compress } from '@/utils/compression.utils.js';\nimport { listen } from '@/utils/decorator.utils.js';\nimport { isDescendantOf } from '@/utils/dom.utils.js';\nimport { getManifest } from '@/utils/manifest.utils.js';\nimport type { PreviewPlugin } from '@/utils/plugin.utils.js';\nimport { Router } from '@/utils/router.utils.js';\nimport { read } from '@/utils/state.utils.js';\n\nimport { readCurrentElementData } from './preview-editor-link.utils.js';\n\nimport styles from './preview-editor-link.plugin.scss';\n\n/**\n * Links all found custom elements in a preview with their current state to the editor to be further played around with.\n *\n */\n@customElement('wcp-preview-editor-link')\nexport class PreviewEditorLink extends LitElement implements PreviewPlugin {\n  static override readonly styles = unsafeCSS(styles);\n\n  readonly #manifest = getManifest();\n\n  readonly #overlay = document.createElement('div');\n\n  readonly name = 'editor-link';\n  readonly label = 'Show in editor';\n\n  readonly container?: HTMLElement;\n\n  @property({ type: String, reflect: true, attribute: 'preview-tag-name' })\n  readonly previewTagName!: string;\n\n  @property({ type: Boolean, reflect: true })\n  available = true;\n\n  @property({ type: Boolean, reflect: true })\n  enabled = read('editor-link-hint-visible') ?? false;\n\n  #checkAvailability() {\n    // check if the previewed element is in a viewer\n    const available = !isDescendantOf(this, 'wcp-stage-editor');\n\n    // do not go on if the availability did not change\n    if (available === this.available) return;\n    this.available = available;\n\n    // notify about availability change\n    const event = new CustomEvent('wcp-preview-plugin:availability-change', {\n      detail: available,\n      bubbles: true,\n      composed: true,\n    });\n    this.dispatchEvent(event);\n  }\n\n  #attachOverlay() {\n    this.#overlay.id = 'overlay';\n    this.#overlay.style.position = 'absolute';\n    this.#overlay.style.inset = '0';\n    this.#overlay.style.isolation = 'isolate';\n    this.container?.parentElement?.append(this.#overlay);\n  }\n\n  #detachOverlay() {\n    this.#overlay.remove();\n  }\n\n  #findContainerSlot(): HTMLSlotElement | undefined {\n    const host = this.container?.getRootNode() as HTMLElement;\n    return host.querySelector('slot') ?? undefined;\n  }\n\n  #observeContainerSlot() {\n    this.#findContainerSlot()?.addEventListener('slotchange', this.#handleContainerSlotChange, false);\n  }\n\n  #unobserveContainerSlot() {\n    this.#findContainerSlot()?.removeEventListener('slotchange', this.#handleContainerSlotChange, false);\n  }\n\n  #observeContainerScroll() {\n    this.container?.addEventListener('scroll', this.#handleContainerScroll, false);\n  }\n\n  #unobserveContainerScroll() {\n    this.container?.removeEventListener('scroll', this.#handleContainerScroll, false);\n  }\n\n  #handleContainerScroll = () => {\n    this.#overlay.style.transform = `translateY(-${this.container?.scrollTop ?? 0}px)`;\n  };\n\n  #handleContainerSlotChange = () => this.#attachHints();\n\n  #attachHints() {\n    // plugin must be available\n    this.#checkAvailability();\n    if (!this.available) return;\n\n    // gather all slotted elements\n    const host = this.container?.getRootNode() as HTMLElement | undefined;\n    const slot = host?.querySelector('slot');\n    const assigned = slot?.assignedElements({ flatten: true }) as HTMLElement[];\n\n    // attach hints to all previewed elements\n    assigned\n      .filter((element) => element.tagName.toLowerCase() === this.previewTagName)\n      .concat(assigned.flatMap((element) => [...element.querySelectorAll<HTMLElement>(this.previewTagName)]))\n      .forEach((element) => this.#attachHint(element));\n  }\n\n  #attachHint(element: HTMLElement) {\n    const hint = document.createElement('wcp-preview-editor-link-hint');\n    hint.debug = true;\n    hint.element = element;\n    hint.scrollParent = this.container;\n    hint.addEventListener('click', () => this.#openViewer(element), false);\n    this.#overlay.append(hint);\n  }\n\n  #detachHints() {\n    this.#overlay.innerHTML = '';\n  }\n\n  #setupHints() {\n    this.#checkAvailability();\n    if (this.enabled && this.available) {\n      this.#detachHints();\n      this.#attachOverlay();\n      this.#attachHints();\n\n      this.#observeContainerSlot();\n      this.#observeContainerScroll();\n    } else {\n      this.#teardownHints();\n    }\n  }\n\n  #teardownHints() {\n    this.#unobserveContainerSlot();\n    this.#unobserveContainerScroll();\n\n    this.#detachHints();\n    this.#detachOverlay();\n  }\n\n  async #openViewer(element: HTMLElement) {\n    // 1. gather element state (properties, attributes, slot contents, inline styles)\n    const data = readCurrentElementData(element);\n    const param = encodeURIComponent(await compress(JSON.stringify(data), 'deflate-raw'));\n    // 2. prepare a stateful preview link\n    const tagName = this.#manifest.elements.get(this.previewTagName)?.getNiceUrl();\n    const link = `/element/${tagName}/editor/${param}`;\n    // 3. open the preview link in the editor tab\n    Router.navigate(link);\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n\n    this.#setupHints();\n    this.#checkAvailability();\n  }\n\n  adoptedCallback() {\n    this.#checkAvailability();\n  }\n\n  override disconnectedCallback() {\n    this.#teardownHints();\n\n    super.disconnectedCallback();\n  }\n\n  @eventOptions({ passive: true })\n  @listen('wcp-state-changed:editor-link-hint-visible', 'window')\n  protected handleGlobalToggle({ detail: enabled }: CustomEvent<boolean>) {\n    // plugin must be available\n    this.#checkAvailability();\n    if (!this.available) return;\n\n    // update state and setup hints\n    this.enabled = enabled;\n    this.#setupHints();\n  }\n\n  @eventOptions({ passive: true })\n  private handleToggleClick() {\n    this.enabled = !this.enabled;\n    this.#setupHints();\n  }\n\n  // without ShadowDOM, we need to manually inject the styles\n  protected override render(): TemplateResult {\n    return html`\n      <wcp-button\n        kind=\"icon\"\n        class=\"${classMap({ active: this.enabled })}\"\n        ?disabled=\"${!this.available}\"\n        @click=\"${this.handleToggleClick}\"\n      >\n        <wcp-icon name=\"terminal\" style=\"--wcp-icon-size: 19\"></wcp-icon>\n      </wcp-button>\n    `;\n  }\n}\n\ndeclare global {\n  interface State {\n    'editor-link-hint-visible': boolean;\n  }\n\n  interface HTMLElementTagNameMap {\n    'wcp-preview-editor-link': PreviewEditorLink;\n  }\n}\n", "/**\n *\tCompress a string with browser native APIs into a string representation\n *\n * @param data - Input string that should be compressed\n * @param encoding - Compression algorithm to use\n * @returns The compressed string\n */\nexport async function compress(data: string, encoding: CompressionFormat): Promise<string> {\n  // stream the string through the compressor\n  const stream = new Blob([new TextEncoder().encode(data)]).stream().pipeThrough(new CompressionStream(encoding));\n  // convert the stream to an array buffer\n  const buffer = await new Response(stream).arrayBuffer();\n  // convert the array buffer to a binary string\n  const binary = Array.from(new Uint8Array(buffer), (x) => String.fromCodePoint(x)).join('');\n  // convert and deliver the binary as ascii string\n  return btoa(binary);\n}\n\n/**\n * Decompress a string representation with browser native APIs in to a normal js string\n *\n * @param data - String that should be decompressed\n * @param encoding - Decompression algorithm to use\n * @returns The decompressed string\n */\nexport async function decompress(data: string, encoding: CompressionFormat): Promise<string> {\n  // convert the input to a binary string\n  const binary = atob(data);\n  // stream the string through the decompressor\n  const stream = new Blob([Uint8Array.from(binary, (m) => m.codePointAt(0) ?? 0)])\n    .stream()\n    .pipeThrough(new DecompressionStream(encoding));\n  // convert the stream to a string\n  return new Response(stream).text();\n}\n", "// taken over from https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n// not the best implementation, but it works for now\nexport function isElementWithin(element: Element, container: Element = document.documentElement): boolean {\n  let currentElement: Node = element;\n  while (currentElement && currentElement.parentNode) {\n    // derive next parent node\n    if (currentElement.parentNode instanceof ShadowRoot) {\n      currentElement = currentElement.parentNode.host;\n    } else {\n      currentElement = currentElement.parentNode;\n    }\n    // check for a match\n    if (container.isSameNode(currentElement)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Delivers the relative boundary of an element to an optional parent.\n * If the parent element is omitted, the offset parent of the element is used.\n */\nexport function getRelativeBoundary(\n  element: HTMLElement,\n  parent: Element | null = element.offsetParent,\n): Pick<DOMRect, 'x' | 'y' | 'height' | 'width'> {\n  const { height, width, x, y } = element.getBoundingClientRect();\n  const { x: relX = 0, y: relY = 0 } = parent?.getBoundingClientRect() ?? {};\n  return { height, width, x: x - relX, y: y - relY };\n}\n\n/**\n * Returns the list of ancestor elements by reference to a given element.\n */\nexport function getAncestorPath(\n  element: Element,\n  check: (element: Element) => boolean = () => true,\n): (Element | Document)[] {\n  const ancestors: Element[] = [];\n  let currentElement: Element | null = element;\n  while (currentElement !== null) {\n    if (!check(currentElement)) break;\n    ancestors.unshift(currentElement);\n    currentElement = currentElement.parentElement ?? (currentElement.getRootNode() as ShadowRoot).host ?? null;\n  }\n  return ancestors;\n}\n\n/**\n * Determine if an element is a descendant of another element by tag name.\n */\nexport function isDescendantOf(element: Element, ancestor: string): boolean {\n  let isMatch = false;\n  getAncestorPath(element, ({ tagName }) => !(isMatch = tagName.toLowerCase() === ancestor));\n  return isMatch;\n}\n", "import type * as Parsed from '@/utils/parser.types.js';\n\n/**\n * Prepares a lit compatible template key for a given field\n */\nexport function litKey(field: Parsed.Field): string {\n  // set as property, if not reflected as attribute\n  if (!field.hasAttribute) {\n    return `.${field.name}`;\n  }\n  // set boolean attributes properly\n  else if (field.isBoolean) {\n    return `?${field.attribute}`;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return field.attribute!;\n}\n", "import { getManifest } from '@/utils/manifest.utils.js';\nimport { litKey } from '@/utils/parser.utils.js';\n\nimport type { ElementData } from '../../stage/stage-editor/stage-editor.utils.js';\n\nconst IGNORED_ATTRIBUTES = ['slot'];\n\n/**\n * Prepares an initial state object for the given element definition by:\n * 1. Read all controllable fields from the element definition (from properties)\n * 2. Read all (remaining) attributes from the element reference (not reflected from already collected properties)\n * 3. Read all slots from the element definition with their stringified contents\n *\n * @todo: separate steps into functions\n * @todo: test this sh!t\n */\nexport function readCurrentElementData(ref: HTMLElement): ElementData {\n  const elementData = getManifest().elements.get(ref.tagName.toLowerCase());\n\n  // store all attributes already collected by the element definition\n  const skipAttributes: string[] = [...IGNORED_ATTRIBUTES];\n\n  // 1. get all controllable fields with their current values\n  const fields =\n    Array.from(elementData?.fields.values() ?? []).reduce((acc, field) => {\n      if (field.isControllable) {\n        const value = ref[field.name as keyof HTMLElement];\n        if (value !== undefined) {\n          if (field.hasAttribute) skipAttributes.push(field.attribute!);\n          return { ...acc, [litKey(field)]: value };\n        }\n      }\n      return acc;\n    }, {}) ?? {};\n\n  // 2. get all remaining attributes\n  const attributeNames = ref.getAttributeNames().filter((attribute) => !skipAttributes.includes(attribute));\n  const attributes = attributeNames.reduce(\n    (acc, attr) => ({ ...acc, [attr]: ref.getAttribute(attr) ?? undefined }),\n    {},\n  );\n\n  // 3. read all slotted data with their current contents\n  const slots =\n    Array.from(elementData?.slots.values() ?? []).reduce((acc, slot) => {\n      // find the slot and gather all assigned nodes\n      const selector = slot.name === '' ? ':not([name])' : `[name=\"${slot.name}\"]`;\n      const root = ref.shadowRoot ?? ref;\n      const nodes = root.querySelector<HTMLSlotElement>(`slot${selector}`)?.assignedNodes() ?? [];\n\n      // read node contents into string\n      const value =\n        nodes.reduce((content, node) => {\n          if (node instanceof HTMLElement) return `${content}${node.outerHTML}`;\n          else if (node instanceof Text) return `${content}${node.textContent}`;\n          else return content;\n        }, '') ?? slot.default;\n\n      // deliver combined result\n      return { ...acc, [slot.name]: value };\n    }, {}) ?? {};\n\n  return { attributes, fields, slots };\n}\n", "export default `:host {\n  display: flex;\n  align-items: center;\n  min-height: calc(10px * 4.2);\n  min-height: calc(var(--wcp-base-size, 10px) * 4.2);\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2NsaWVudC9jbGllbnQvc3JjL3BsdWdpbnMvcHJldmlldy9wcmV2aWV3LWVkaXRvci1saW5rL3ByZXZpZXctZWRpdG9yLWxpbmsucGx1Z2luLnNjc3MiLCI6aG9zdCUyMCU3QiUwQSUyMCUyMGRpc3BsYXk6JTIwZmxleDslMEElMjAlMjBhbGlnbi1pdGVtczolMjBjZW50ZXI7JTBBJTIwJTIwbWluLWhlaWdodDolMjBjYWxjKHZhcigtLXdjcC1iYXNlLXNpemUsJTIwMTBweCklMjAqJTIwNC4yKTslMEElN0QlMEEvKiUyMyUyMHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVlNiMjkwSWpvaUwyaHZiV1V2Y25WdWJtVnlMM2R2Y21zdlkyeHBaVzUwTDJOc2FXVnVkQzl6Y21NdmNHeDFaMmx1Y3k5d2NtVjJhV1YzTDNCeVpYWnBaWGN0WldScGRHOXlMV3hwYm1zaUxDSnpiM1Z5WTJWeklqcGJJbkJ5WlhacFpYY3RaV1JwZEc5eUxXeHBibXN1Y0d4MVoybHVMbk5qYzNNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlJVRTdSVUZEUlR0RlFVTkJPMFZCUlVFaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SkFkWE5sSUNkQUwzTjBlV3hsY3k5MWRHbHNjeWNnWVhNZ2RYUnBiSE03WEc1Y2JqcG9iM04wSUh0Y2JpQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjYmx4dUlDQnRhVzR0YUdWcFoyaDBPaUIxZEdsc2N5NXphWHBsS0RRdU1pazdYRzU5WEc0aVhYMD0lMjAqIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBRUEsNEJBQUE7RUFBQSxrREFBQTtBQ0ZGIiwiZmlsZSI6Ijpob3N0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWluLWhlaWdodDogY2FsYyh2YXIoLS13Y3AtYmFzZS1zaXplLCAxMHB4KSAqIDQuMik7XG59XG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWU2IyOTBJam9pTDJodmJXVXZjblZ1Ym1WeUwzZHZjbXN2WTJ4cFpXNTBMMk5zYVdWdWRDOXpjbU12Y0d4MVoybHVjeTl3Y21WMmFXVjNMM0J5WlhacFpYY3RaV1JwZEc5eUxXeHBibXNpTENKemIzVnlZMlZ6SWpwYkluQnlaWFpwWlhjdFpXUnBkRzl5TFd4cGJtc3VjR3gxWjJsdUxuTmpjM01pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUlVFN1JVRkRSVHRGUVVOQk8wVkJSVUVpTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKQWRYTmxJQ2RBTDNOMGVXeGxjeTkxZEdsc2N5Y2dZWE1nZFhScGJITTdYRzVjYmpwb2IzTjBJSHRjYmlBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ1lXeHBaMjR0YVhSbGJYTTZJR05sYm5SbGNqdGNibHh1SUNCdGFXNHRhR1ZwWjJoME9pQjFkR2xzY3k1emFYcGxLRFF1TWlrN1hHNTlYRzRpWFgwPSAqIiwic291cmNlc0NvbnRlbnQiOlsiQHVzZSAnQC9zdHlsZXMvdXRpbHMnIGFzIHV0aWxzO1xuXG46aG9zdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgbWluLWhlaWdodDogdXRpbHMuc2l6ZSg0LjIpO1xufVxuIiwiOmhvc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtaW4taGVpZ2h0OiBjYWxjKHZhcigtLXdjcC1iYXNlLXNpemUsIDEwcHgpICogNC4yKTtcbn1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZTYjI5MElqb2lMMmh2YldVdmNuVnVibVZ5TDNkdmNtc3ZZMnhwWlc1MEwyTnNhV1Z1ZEM5emNtTXZjR3gxWjJsdWN5OXdjbVYyYVdWM0wzQnlaWFpwWlhjdFpXUnBkRzl5TFd4cGJtc2lMQ0p6YjNWeVkyVnpJanBiSW5CeVpYWnBaWGN0WldScGRHOXlMV3hwYm1zdWNHeDFaMmx1TG5OamMzTWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJSVUU3UlVGRFJUdEZRVU5CTzBWQlJVRWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpBZFhObElDZEFMM04wZVd4bGN5OTFkR2xzY3ljZ1lYTWdkWFJwYkhNN1hHNWNianBvYjNOMElIdGNiaUFnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2JseHVJQ0J0YVc0dGFHVnBaMmgwT2lCMWRHbHNjeTV6YVhwbEtEUXVNaWs3WEc1OVhHNGlYWDA9ICovIl19 */`;\n", "import { html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement, eventOptions, property } from 'lit/decorators.js';\n\nimport { ColorSchemable } from '@/mixins/color-schemable.mixin.js';\nimport { listen } from '@/utils/decorator.utils.js';\nimport { getRelativeBoundary } from '@/utils/dom.utils.js';\n\nimport styles from './preview-editor-link-hint.component.scss';\n\n/**\n * Shows a hint to a given preview element.\n *\n * @cssprop --wcp-preview-editor-link-hint-button-passive-background - The background color of the hint button in passive state.\n * @cssprop --wcp-preview-editor-link-hint-button-active-background - The background color of the hint button in active state.\n * @cssprop --wcp-preview-editor-link-hint-button-passive-size - Size of the hint button in passive state.\n * @cssprop --wcp-preview-editor-link-hint-button-active-size - Size of the hint button in active state.\n *\n * @cssprop --wcp-preview-editor-link-hint-debug-border-width - Border width of the debugging fields.\n * @cssprop --wcp-preview-editor-link-hint-debug-background-opacity - Opacity of the debugging fields background.\n *\n * @cssprop --wcp-preview-editor-link-hint-debug-stripe-distance - Distance of the stripes of the debugging field background.\n * @cssprop --wcp-preview-editor-link-hint-debug-stripe-tilt - Tilt of the stripes of the debugging field background in degrees.\n * @cssprop --wcp-preview-editor-link-hint-debug-stripe-width - Width of the stripes of the debugging field background.\n * @cssprop --wcp-preview-editor-link-hint-debug-stripe-dash-size - Length of the dashes of the debugging field background.\n * @cssprop --wcp-preview-editor-link-hint-debug-stripe-dash-gap - Gap between the dashes of the debugging field background.\n *\n * @cssprop --wcp-preview-editor-link-hint-debug-dark-background - Debugging field background color in dark mode.\n * @cssprop --wcp-preview-editor-link-hint-debug-dark-stroke - Debugging field dash and border color in dark mode.\n *\n * @cssprop --wcp-preview-editor-link-hint-debug-light-background - Debugging field background color in light mode.\n * @cssprop --wcp-preview-editor-link-hint-debug-light-stroke - Debugging field dash and border color in light mode.\n */\n@customElement('wcp-preview-editor-link-hint')\nexport class PreviewEditorLinkHint extends ColorSchemable(LitElement) {\n  static override readonly styles = unsafeCSS(styles);\n\n  #observer = new ResizeObserver(() => this.updatePosition());\n  #element?: HTMLElement;\n  #scrollParent?: HTMLElement;\n\n  @property({ type: Boolean, reflect: true })\n  debug = false;\n\n  @property({ type: String, reflect: true })\n  label = 'Open in editor';\n\n  @property({ attribute: false, noAccessor: true })\n  set element(element: HTMLElement | undefined) {\n    this.#element = element;\n    this.#observeElement();\n    this.updatePosition();\n  }\n\n  @property({ attribute: false, noAccessor: true })\n  set scrollParent(element: HTMLElement | undefined) {\n    this.#scrollParent = element;\n    this.updatePosition();\n  }\n\n  /**\n   * Allows to update the position of the hint.\n   */\n  updatePosition() {\n    if (this.#element === undefined) {\n      this.removeAttribute('style');\n    } else {\n      const { height, width, x, y } = getRelativeBoundary(this.#element, this.#scrollParent);\n      const { scrollTop = 0, scrollLeft = 0 } = this.#scrollParent ?? (this.#element.offsetParent as HTMLElement) ?? {};\n\n      this.style.setProperty('top', `${y + scrollTop}px`);\n      this.style.setProperty('left', `${x + scrollLeft}px`);\n      this.style.setProperty('height', `${height}px`);\n      this.style.setProperty('width', `${width}px`);\n    }\n  }\n\n  #observeElement() {\n    if (this.#element === undefined) return;\n    this.#observer.disconnect();\n    this.#observer.observe(this.#element);\n  }\n\n  @eventOptions({ passive: true })\n  @listen('wcp-preview-simulate-viewports:changed', 'window')\n  protected handleStageChange() {\n    this.updatePosition();\n  }\n\n  override disconnectedCallback() {\n    this.#observer.disconnect();\n    super.disconnectedCallback();\n  }\n\n  protected override render(): TemplateResult {\n    return html`<button aria-label=\"${this.label}\"></button>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-preview-editor-link-hint': PreviewEditorLinkHint;\n  }\n}\n", "export default `:host {\n  ---wcp-preview-editor-link-hint-button-passive-background: var(--wcp-preview-editor-link-hint-button-passive-background, #d22f2f);\n  ---wcp-preview-editor-link-hint-button-active-background: var(--wcp-preview-editor-link-hint-button-active-background, #dd4f4f);\n  ---wcp-preview-editor-link-hint-button-passive-size: var(--wcp-preview-editor-link-hint-button-passive-size, 10px);\n  ---wcp-preview-editor-link-hint-button-active-size: var(--wcp-preview-editor-link-hint-button-active-size, 20px);\n  ---wcp-preview-editor-link-hint-debug-border-width: var(--wcp-preview-editor-link-hint-debug-border-width, 1px);\n  ---wcp-preview-editor-link-hint-debug-background-opacity: var(--wcp-preview-editor-link-hint-debug-background-opacity, 0.7);\n  ---wcp-preview-editor-link-hint-debug-stripe-distance: var(--wcp-preview-editor-link-hint-debug-stripe-distance, 10px);\n  ---wcp-preview-editor-link-hint-debug-stripe-tilt: var(--wcp-preview-editor-link-hint-debug-stripe-tilt, 45deg);\n  ---wcp-preview-editor-link-hint-debug-stripe-width: var(--wcp-preview-editor-link-hint-debug-stripe-width, 1px);\n  ---wcp-preview-editor-link-hint-debug-stripe-dash-size: var(--wcp-preview-editor-link-hint-debug-stripe-dash-size, 5px);\n  ---wcp-preview-editor-link-hint-debug-stripe-dash-gap: var(--wcp-preview-editor-link-hint-debug-stripe-dash-gap, 3px);\n  ---wcp-preview-editor-link-hint-debug-dark-background: var(--wcp-preview-editor-link-hint-debug-dark-background, #8575ee);\n  ---wcp-preview-editor-link-hint-debug-dark-stroke: var(--wcp-preview-editor-link-hint-debug-dark-stroke, #5e23aa);\n  ---wcp-preview-editor-link-hint-debug-light-background: var(--wcp-preview-editor-link-hint-debug-light-background, #8575ee);\n  ---wcp-preview-editor-link-hint-debug-light-stroke: var(--wcp-preview-editor-link-hint-debug-light-stroke, #5e23aa);\n}\n\n:host {\n  ---wcp-preview-editor-link-hint-button-background: var(---wcp-preview-editor-link-hint-button-passive-background);\n  ---wcp-preview-editor-link-hint-button-size: var(---wcp-preview-editor-link-hint-button-passive-size);\n  position: absolute;\n  display: block;\n  box-sizing: border-box;\n  cursor: pointer;\n}\n@media (prefers-color-scheme: dark) {\n  :host {\n    ---wcp-preview-editor-link-hint-debug-background: var(---wcp-preview-editor-link-hint-debug-dark-background);\n    ---wcp-preview-editor-link-hint-debug-stroke: var(---wcp-preview-editor-link-hint-debug-dark-stroke);\n  }\n}\n:host([color-scheme=dark]):host {\n  ---wcp-preview-editor-link-hint-debug-background: var(---wcp-preview-editor-link-hint-debug-dark-background);\n  ---wcp-preview-editor-link-hint-debug-stroke: var(---wcp-preview-editor-link-hint-debug-dark-stroke);\n}\n\n@media (prefers-color-scheme: light) {\n  :host {\n    ---wcp-preview-editor-link-hint-debug-background: var(---wcp-preview-editor-link-hint-debug-light-background);\n    ---wcp-preview-editor-link-hint-debug-stroke: var(---wcp-preview-editor-link-hint-debug-light-stroke);\n  }\n}\n:host([color-scheme=light]):host {\n  ---wcp-preview-editor-link-hint-debug-background: var(---wcp-preview-editor-link-hint-debug-light-background);\n  ---wcp-preview-editor-link-hint-debug-stroke: var(---wcp-preview-editor-link-hint-debug-light-stroke);\n}\n\n:host(:hover) {\n  ---wcp-preview-editor-link-hint-button-background: var(---wcp-preview-editor-link-hint-button-active-background);\n  ---wcp-preview-editor-link-hint-button-size: var(---wcp-preview-editor-link-hint-button-active-size);\n}\n\nbutton {\n  all: unset;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: auto;\n  left: auto;\n  transform: translate(50%, -50%);\n  z-index: 3;\n  display: block;\n  height: var(---wcp-preview-editor-link-hint-button-size);\n  width: var(---wcp-preview-editor-link-hint-button-size);\n  background-clip: content-box;\n  background-color: var(---wcp-preview-editor-link-hint-button-background);\n  border: calc(var(---wcp-preview-editor-link-hint-button-active-size) - var(---wcp-preview-editor-link-hint-button-passive-size)) solid transparent;\n  border-radius: 50%;\n  transition: var(--wcp-fx-default-duration) ease-out;\n  transition-property: background-color, border-width, height, width;\n  will-change: background-color, border-width, height, width;\n}\n:host([debug]) button {\n  top: calc(var(---wcp-preview-editor-link-hint-debug-border-width) * -1);\n  right: calc(var(---wcp-preview-editor-link-hint-debug-border-width) * -1);\n}\n\n:host([debug]) {\n  border: var(---wcp-preview-editor-link-hint-debug-border-width) dashed var(---wcp-preview-editor-link-hint-debug-stroke);\n}\n:host([debug])::before, :host([debug])::after {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n:host([debug])::before {\n  z-index: 0;\n  background-color: var(---wcp-preview-editor-link-hint-debug-background);\n  opacity: var(---wcp-preview-editor-link-hint-debug-background-opacity);\n  mix-blend-mode: multiply;\n}\n:host([debug])::after {\n  z-index: 1;\n  background: repeating-linear-gradient(var(---wcp-preview-editor-link-hint-debug-stripe-tilt), transparent, transparent var(---wcp-preview-editor-link-hint-debug-stripe-distance), var(---wcp-preview-editor-link-hint-debug-stroke) var(---wcp-preview-editor-link-hint-debug-stripe-distance), var(---wcp-preview-editor-link-hint-debug-stroke) calc(var(---wcp-preview-editor-link-hint-debug-stripe-distance) + var(---wcp-preview-editor-link-hint-debug-stripe-width)));\n  -webkit-mask-image: repeating-linear-gradient(calc(var(---wcp-preview-editor-link-hint-debug-stripe-tilt) + 90deg), transparent, transparent var(---wcp-preview-editor-link-hint-debug-stripe-dash-gap), black var(---wcp-preview-editor-link-hint-debug-stripe-dash-gap), black calc(var(---wcp-preview-editor-link-hint-debug-stripe-dash-gap) + var(---wcp-preview-editor-link-hint-debug-stripe-dash-size)));\n          mask-image: repeating-linear-gradient(calc(var(---wcp-preview-editor-link-hint-debug-stripe-tilt) + 90deg), transparent, transparent var(---wcp-preview-editor-link-hint-debug-stripe-dash-gap), black var(---wcp-preview-editor-link-hint-debug-stripe-dash-gap), black calc(var(---wcp-preview-editor-link-hint-debug-stripe-dash-gap) + var(---wcp-preview-editor-link-hint-debug-stripe-dash-size)));\n}\n/*# sourceMappingURL=data:application/json;base64, */`;\n", "import { html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement, eventOptions, property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { map } from 'lit/directives/map.js';\n\nimport { ColorSchemable } from '@/mixins/color-schemable.mixin.js';\nimport type { PreviewPlugin } from '@/utils/plugin.utils.js';\n\nimport styles from './preview-simulate-viewports.plugin.scss';\n\n// utility union to carry the available viewport for simulation\ntype Viewport = 'mobile' | 'tablet' | 'desktop' | 'wide';\n\n// maps the available viewport simulations to their dimensions\nconst VIEWPORTS = new Map<Viewport, [number, number]>([\n  ['mobile', [390, 844]],\n  ['tablet', [1024, 768]],\n  ['desktop', [1280, 800]],\n  ['wide', [1920, 1080]],\n]);\n\n// maps the available viewport simulations to icons\nconst ICONS = new Map<Viewport, string>([\n  ['mobile', 'smartphone'],\n  ['tablet', 'laptop'],\n  ['desktop', 'screen'],\n  ['wide', 'screen-wide'],\n]);\n\n// internal identifiers for styling\nconst STYLE_ID = 'preview-plugin-viewport';\nconst DECORATION_CLASS = 'simulate-viewport-decoration';\nconst PROPORTION_CLASS = 'simulate-viewport-proportion';\nconst SIZE_CLASS = 'simulate-viewport-size';\nconst SCALE_CLASS = 'simulate-viewport-scale';\n\n// to add some spacing we scale a bit further than actually needed\nconst SCALE_FACTOR = 1;\n\n/**\n * Simulates various viewports for a custom element preview.\n *\n */\n@customElement('wcp-preview-simulate-viewports')\nexport class PreviewSimulateViewports extends ColorSchemable(LitElement) implements PreviewPlugin {\n  static override readonly styles = unsafeCSS(styles);\n\n  readonly name = 'viewport';\n  readonly label = 'Viewport';\n\n  readonly container?: HTMLElement;\n\n  @property({ type: String, reflect: true, attribute: 'preview-tag-name' })\n  readonly previewTagName!: string;\n\n  @property({ type: Boolean, reflect: true })\n  readonly available = true;\n\n  @property({ type: String, reflect: true, attribute: 'simulate-viewport' })\n  private simulateViewport?: Viewport;\n\n  @property({ type: Boolean, reflect: true, attribute: 'invert-simulated-viewport' })\n  private invertSimulatedViewport = false;\n\n  protected get defaultStyle(): string {\n    return `\n      .${DECORATION_CLASS} {\n        border-radius: 10px;\n        outline: 1px solid currentColor;\n        overflow: hidden;\n      }\n    `;\n  }\n\n  protected removeStyle() {\n    this.container?.querySelector<HTMLStyleElement>(`style#${STYLE_ID}`)?.remove();\n  }\n\n  protected resetStyle() {\n    this.prepareStyle().textContent = this.defaultStyle;\n  }\n\n  protected prepareStyle(): HTMLStyleElement {\n    // check if a style element already exists\n    let style = this.container?.querySelector<HTMLStyleElement>(`style#${STYLE_ID}`);\n    if (style) return style;\n\n    // create a new style element\n    style = document.createElement('style');\n    style.id = STYLE_ID;\n    style.textContent = this.defaultStyle;\n    this.container?.append(style);\n    return style;\n  }\n\n  /**\n   * Sets the size of the viewport to simulate its dimensions.\n   */\n  protected applyPreviewSize() {\n    if (this.simulateViewport === undefined) return;\n\n    // read the viewport dimensions to apply\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const [w, h] = VIEWPORTS.get(this.simulateViewport)!;\n    // add the size styling to the style element\n    this.prepareStyle().textContent += `\n      .${SIZE_CLASS} {\n        position: absolute;\n        inset: 0 auto auto 0;\n        height: ${this.invertSimulatedViewport ? w : h}px;\n        width: ${this.invertSimulatedViewport ? h : w}px;\n      }\n\n      .${PROPORTION_CLASS} {\n        aspect-ratio: ${this.invertSimulatedViewport ? `${h} / ${w}` : `${w} / ${h}`};\n        width: min(${this.invertSimulatedViewport ? h : w}px, 100%);\n      }\n    `;\n  }\n\n  /**\n   * Scales the sized viewport to fit into the preview container.\n   */\n  protected applyPreviewScale() {\n    if (this.simulateViewport === undefined) return;\n\n    // read the viewport dimensions to apply\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const [w, h] = VIEWPORTS.get(this.simulateViewport)!;\n    // derive the scale to fit the viewport into the preview\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const preview = this.container?.parentElement?.parentElement;\n    if (!preview) return;\n    const scale = Math.min(\n      (preview.clientWidth - 20) / (this.invertSimulatedViewport ? h : w),\n      (preview.clientHeight - 20) / (this.invertSimulatedViewport ? w : h),\n    );\n    // add the scale styling to the style element\n    this.prepareStyle().textContent += `\n      .${SCALE_CLASS} {\n        transform-origin: 0 0;\n        transform: scale(clamp(0.15, ${scale * SCALE_FACTOR}, 1));\n      }\n    `;\n  }\n\n  protected applyPreviewDimensions() {\n    // remove our stuff if we are not simulating a viewport\n    if (this.simulateViewport === undefined) {\n      this.removeStyle();\n      this.container?.parentElement?.classList.remove(DECORATION_CLASS, PROPORTION_CLASS);\n      this.container?.classList.remove(SIZE_CLASS, SCALE_CLASS);\n    }\n    // apply visual changes\n    else {\n      this.resetStyle();\n      this.container?.parentElement?.classList.add(DECORATION_CLASS, PROPORTION_CLASS);\n      this.container?.classList.add(SIZE_CLASS, SCALE_CLASS);\n      this.applyPreviewSize();\n      this.applyPreviewScale();\n    }\n\n    // notify\n    this.emitChange();\n  }\n\n  private emitChange() {\n    const detail = { viewport: this.simulateViewport, inverted: this.invertSimulatedViewport };\n    const event = new CustomEvent('wcp-preview-simulate-viewports:changed', { detail, bubbles: true, composed: true });\n    this.dispatchEvent(event);\n  }\n\n  @eventOptions({ passive: true })\n  private handleSimulateViewport(event: Event) {\n    // update state\n    const { dataset } = event.currentTarget as HTMLButtonElement;\n    const viewport = dataset.viewport as Viewport;\n    this.simulateViewport = this.simulateViewport === viewport ? undefined : viewport;\n\n    // apply visual changes\n    this.applyPreviewDimensions();\n  }\n\n  @eventOptions({ passive: true })\n  handleInvertSimulatedViewport() {\n    // update state\n    this.invertSimulatedViewport = !this.invertSimulatedViewport;\n\n    // apply visual changes\n    this.applyPreviewDimensions();\n  }\n\n  override disconnectedCallback() {\n    this.removeStyle();\n    super.disconnectedCallback();\n  }\n\n  // without ShadowDOM, we need to manually inject the styles\n  protected override render(): TemplateResult {\n    return html`\n      ${map(\n        VIEWPORTS.keys(),\n        (viewport) => html`\n          <wcp-button\n            kind=\"icon\"\n            data-viewport=\"${viewport}\"\n            class=\"${classMap({ active: viewport === this.simulateViewport })}\"\n            @click=\"${this.handleSimulateViewport}\"\n          >\n            <wcp-icon name=\"${ifDefined(ICONS.get(viewport))}\"></wcp-icon>\n          </wcp-button>\n        `,\n      )}\n\n      <wcp-button\n        kind=\"icon\"\n        ?disabled=\"${this.simulateViewport === undefined}\"\n        class=\"${classMap({ active: this.simulateViewport !== undefined && this.invertSimulatedViewport })}\"\n        @click=\"${this.handleInvertSimulatedViewport}\"\n      >\n        <wcp-icon name=\"ratio\" style=\"--wcp-icon-size: 19\"></wcp-icon>\n      </wcp-button>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementEventMap {\n    'wcp-preview-simulate-viewports:changed': CustomEvent<{ viewport: Viewport; inverted: boolean }>;\n  }\n\n  interface HTMLElementTagNameMap {\n    'wcp-preview-simulate-viewports': PreviewSimulateViewports;\n  }\n}\n", "export default `:host {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: calc(10px * 0.5);\n  gap: calc(var(--wcp-base-size, 10px) * 0.5);\n}\n\nwcp-button:not([data-viewport]) {\n  margin-left: calc(10px * 0.5);\n  margin-left: calc(var(--wcp-base-size, 10px) * 0.5);\n  transition: transform var(--wcp-fx-default-duration) ease-in-out;\n}\nwcp-button:not([data-viewport]):enabled:hover {\n  transform: rotate(45deg);\n}\nwcp-button:not([data-viewport]).active:hover {\n  transform: rotate(-45deg);\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2NsaWVudC9jbGllbnQvc3JjL3BsdWdpbnMvcHJldmlldy9wcmV2aWV3LXNpbXVsYXRlLXZpZXdwb3J0cy9wcmV2aWV3LXNpbXVsYXRlLXZpZXdwb3J0cy5wbHVnaW4uc2NzcyIsIjpob3N0JTIwJTdCJTBBJTIwJTIwZGlzcGxheTolMjBmbGV4OyUwQSUyMCUyMGZsZXgtZGlyZWN0aW9uOiUyMHJvdzslMEElMjAlMjBhbGlnbi1pdGVtczolMjBjZW50ZXI7JTBBJTIwJTIwZ2FwOiUyMGNhbGModmFyKC0td2NwLWJhc2Utc2l6ZSwlMjAxMHB4KSUyMColMjAwLjUpOyUwQSU3RCUwQSUwQXdjcC1idXR0b246bm90KCU1QmRhdGEtdmlld3BvcnQlNUQpJTIwJTdCJTBBJTIwJTIwbWFyZ2luLWxlZnQ6JTIwY2FsYyh2YXIoLS13Y3AtYmFzZS1zaXplLCUyMDEwcHgpJTIwKiUyMDAuNSk7JTBBJTIwJTIwdHJhbnNpdGlvbjolMjB0cmFuc2Zvcm0lMjB2YXIoLS13Y3AtZngtZGVmYXVsdC1kdXJhdGlvbiklMjBlYXNlLWluLW91dDslMEElN0QlMEF3Y3AtYnV0dG9uOm5vdCglNUJkYXRhLXZpZXdwb3J0JTVEKTplbmFibGVkOmhvdmVyJTIwJTdCJTBBJTIwJTIwdHJhbnNmb3JtOiUyMHJvdGF0ZSg0NWRlZyk7JTBBJTdEJTBBd2NwLWJ1dHRvbjpub3QoJTVCZGF0YS12aWV3cG9ydCU1RCkuYWN0aXZlOmhvdmVyJTIwJTdCJTBBJTIwJTIwdHJhbnNmb3JtOiUyMHJvdGF0ZSgtNDVkZWcpOyUwQSU3RCUwQS8qJTIzJTIwc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWU2IyOTBJam9pTDJodmJXVXZjblZ1Ym1WeUwzZHZjbXN2WTJ4cFpXNTBMMk5zYVdWdWRDOXpjbU12Y0d4MVoybHVjeTl3Y21WMmFXVjNMM0J5WlhacFpYY3RjMmx0ZFd4aGRHVXRkbWxsZDNCdmNuUnpJaXdpYzI5MWNtTmxjeUk2V3lKd2NtVjJhV1YzTFhOcGJYVnNZWFJsTFhacFpYZHdiM0owY3k1d2JIVm5hVzR1YzJOemN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkZRVHRGUVVORk8wVkJRMEU3UlVGRFFUdEZRVU5CT3pzN1FVRkhSanRGUVVORk8wVkJRMEU3TzBGQlJVRTdSVUZEUlRzN1FVRkhSanRGUVVORklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lRSFZ6WlNBblFDOXpkSGxzWlhNdmRYUnBiSE1uSUdGeklIVjBhV3h6TzF4dVhHNDZhRzl6ZENCN1hHNGdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJR1pzWlhndFpHbHlaV04wYVc5dU9pQnliM2M3WEc0Z0lHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYRzRnSUdkaGNEb2dkWFJwYkhNdWMybDZaU2d3TGpVcE8xeHVmVnh1WEc1M1kzQXRZblYwZEc5dU9tNXZkQ2hiWkdGMFlTMTJhV1YzY0c5eWRGMHBJSHRjYmlBZ2JXRnlaMmx1TFd4bFpuUTZJSFYwYVd4ekxuTnBlbVVvTUM0MUtUdGNiaUFnZEhKaGJuTnBkR2x2YmpvZ2RISmhibk5tYjNKdElIWmhjaWd0TFhkamNDMW1lQzFrWldaaGRXeDBMV1IxY21GMGFXOXVLU0JsWVhObExXbHVMVzkxZER0Y2JseHVJQ0FtT21WdVlXSnNaV1E2YUc5MlpYSWdlMXh1SUNBZ0lIUnlZVzV6Wm05eWJUb2djbTkwWVhSbEtEUTFaR1ZuS1R0Y2JpQWdmVnh1WEc0Z0lDWXVZV04wYVhabE9taHZkbVZ5SUh0Y2JpQWdJQ0IwY21GdWMyWnZjbTA2SUhKdmRHRjBaU2d0TkRWa1pXY3BPMXh1SUNCOVhHNTlYRzRpWFgwPSUyMCoiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxtQkFBQTtFQUNBLHFCQUFBO0VBQUEsMkNBQUE7QUNERjs7QURJQTtFQUNFLDZCQUFBO0VBQUEsbURBQUE7RUFDQSxnRUFBQTtBQ0RGO0FER0U7RUFDRSx3QkFBQTtBQ0RKO0FESUU7RUFDRSx5QkFBQTtBQ0ZKIiwiZmlsZSI6Ijpob3N0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZ2FwOiBjYWxjKHZhcigtLXdjcC1iYXNlLXNpemUsIDEwcHgpICogMC41KTtcbn1cblxud2NwLWJ1dHRvbjpub3QoW2RhdGEtdmlld3BvcnRdKSB7XG4gIG1hcmdpbi1sZWZ0OiBjYWxjKHZhcigtLXdjcC1iYXNlLXNpemUsIDEwcHgpICogMC41KTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIHZhcigtLXdjcC1meC1kZWZhdWx0LWR1cmF0aW9uKSBlYXNlLWluLW91dDtcbn1cbndjcC1idXR0b246bm90KFtkYXRhLXZpZXdwb3J0XSk6ZW5hYmxlZDpob3ZlciB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbn1cbndjcC1idXR0b246bm90KFtkYXRhLXZpZXdwb3J0XSkuYWN0aXZlOmhvdmVyIHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcbn1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZTYjI5MElqb2lMMmh2YldVdmNuVnVibVZ5TDNkdmNtc3ZZMnhwWlc1MEwyTnNhV1Z1ZEM5emNtTXZjR3gxWjJsdWN5OXdjbVYyYVdWM0wzQnlaWFpwWlhjdGMybHRkV3hoZEdVdGRtbGxkM0J2Y25Seklpd2ljMjkxY21ObGN5STZXeUp3Y21WMmFXVjNMWE5wYlhWc1lYUmxMWFpwWlhkd2IzSjBjeTV3YkhWbmFXNHVjMk56Y3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGRlFUdEZRVU5GTzBWQlEwRTdSVUZEUVR0RlFVTkJPenM3UVVGSFJqdEZRVU5GTzBWQlEwRTdPMEZCUlVFN1JVRkRSVHM3UVVGSFJqdEZRVU5GSWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaVFIVnpaU0FuUUM5emRIbHNaWE12ZFhScGJITW5JR0Z6SUhWMGFXeHpPMXh1WEc0NmFHOXpkQ0I3WEc0Z0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lHWnNaWGd0WkdseVpXTjBhVzl1T2lCeWIzYzdYRzRnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hHNGdJR2RoY0RvZ2RYUnBiSE11YzJsNlpTZ3dMalVwTzF4dWZWeHVYRzUzWTNBdFluVjBkRzl1T201dmRDaGJaR0YwWVMxMmFXVjNjRzl5ZEYwcElIdGNiaUFnYldGeVoybHVMV3hsWm5RNklIVjBhV3h6TG5OcGVtVW9NQzQxS1R0Y2JpQWdkSEpoYm5OcGRHbHZiam9nZEhKaGJuTm1iM0p0SUhaaGNpZ3RMWGRqY0MxbWVDMWtaV1poZFd4MExXUjFjbUYwYVc5dUtTQmxZWE5sTFdsdUxXOTFkRHRjYmx4dUlDQW1PbVZ1WVdKc1pXUTZhRzkyWlhJZ2UxeHVJQ0FnSUhSeVlXNXpabTl5YlRvZ2NtOTBZWFJsS0RRMVpHVm5LVHRjYmlBZ2ZWeHVYRzRnSUNZdVlXTjBhWFpsT21odmRtVnlJSHRjYmlBZ0lDQjBjbUZ1YzJadmNtMDZJSEp2ZEdGMFpTZ3RORFZrWldjcE8xeHVJQ0I5WEc1OVhHNGlYWDA9ICoiLCJzb3VyY2VzQ29udGVudCI6WyJAdXNlICdAL3N0eWxlcy91dGlscycgYXMgdXRpbHM7XG5cbjpob3N0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZ2FwOiB1dGlscy5zaXplKDAuNSk7XG59XG5cbndjcC1idXR0b246bm90KFtkYXRhLXZpZXdwb3J0XSkge1xuICBtYXJnaW4tbGVmdDogdXRpbHMuc2l6ZSgwLjUpO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gdmFyKC0td2NwLWZ4LWRlZmF1bHQtZHVyYXRpb24pIGVhc2UtaW4tb3V0O1xuXG4gICY6ZW5hYmxlZDpob3ZlciB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICB9XG5cbiAgJi5hY3RpdmU6aG92ZXIge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gIH1cbn1cbiIsIjpob3N0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZ2FwOiBjYWxjKHZhcigtLXdjcC1iYXNlLXNpemUsIDEwcHgpICogMC41KTtcbn1cblxud2NwLWJ1dHRvbjpub3QoW2RhdGEtdmlld3BvcnRdKSB7XG4gIG1hcmdpbi1sZWZ0OiBjYWxjKHZhcigtLXdjcC1iYXNlLXNpemUsIDEwcHgpICogMC41KTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIHZhcigtLXdjcC1meC1kZWZhdWx0LWR1cmF0aW9uKSBlYXNlLWluLW91dDtcbn1cbndjcC1idXR0b246bm90KFtkYXRhLXZpZXdwb3J0XSk6ZW5hYmxlZDpob3ZlciB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbn1cbndjcC1idXR0b246bm90KFtkYXRhLXZpZXdwb3J0XSkuYWN0aXZlOmhvdmVyIHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcbn1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZTYjI5MElqb2lMMmh2YldVdmNuVnVibVZ5TDNkdmNtc3ZZMnhwWlc1MEwyTnNhV1Z1ZEM5emNtTXZjR3gxWjJsdWN5OXdjbVYyYVdWM0wzQnlaWFpwWlhjdGMybHRkV3hoZEdVdGRtbGxkM0J2Y25Seklpd2ljMjkxY21ObGN5STZXeUp3Y21WMmFXVjNMWE5wYlhWc1lYUmxMWFpwWlhkd2IzSjBjeTV3YkhWbmFXNHVjMk56Y3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGRlFUdEZRVU5GTzBWQlEwRTdSVUZEUVR0RlFVTkJPenM3UVVGSFJqdEZRVU5GTzBWQlEwRTdPMEZCUlVFN1JVRkRSVHM3UVVGSFJqdEZRVU5GSWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaVFIVnpaU0FuUUM5emRIbHNaWE12ZFhScGJITW5JR0Z6SUhWMGFXeHpPMXh1WEc0NmFHOXpkQ0I3WEc0Z0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lHWnNaWGd0WkdseVpXTjBhVzl1T2lCeWIzYzdYRzRnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hHNGdJR2RoY0RvZ2RYUnBiSE11YzJsNlpTZ3dMalVwTzF4dWZWeHVYRzUzWTNBdFluVjBkRzl1T201dmRDaGJaR0YwWVMxMmFXVjNjRzl5ZEYwcElIdGNiaUFnYldGeVoybHVMV3hsWm5RNklIVjBhV3h6TG5OcGVtVW9NQzQxS1R0Y2JpQWdkSEpoYm5OcGRHbHZiam9nZEhKaGJuTm1iM0p0SUhaaGNpZ3RMWGRqY0MxbWVDMWtaV1poZFd4MExXUjFjbUYwYVc5dUtTQmxZWE5sTFdsdUxXOTFkRHRjYmx4dUlDQW1PbVZ1WVdKc1pXUTZhRzkyWlhJZ2UxeHVJQ0FnSUhSeVlXNXpabTl5YlRvZ2NtOTBZWFJsS0RRMVpHVm5LVHRjYmlBZ2ZWeHVYRzRnSUNZdVlXTjBhWFpsT21odmRtVnlJSHRjYmlBZ0lDQjBjbUZ1YzJadmNtMDZJSEp2ZEdGMFpTZ3RORFZrWldjcE8xeHVJQ0I5WEc1OVhHNGlYWDA9ICovIl19 */`;\n", "import { html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement, eventOptions, property, state } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { keyed } from 'lit/directives/keyed.js';\n\nimport { ColorSchemable } from '@/mixins/color-schemable.mixin.js';\nimport { debounce } from '@/utils/debounce.utils.js';\nimport { getManifest } from '@/utils/manifest.utils.js';\nimport type * as Parsed from '@/utils/parser.types.js';\nimport type { StagePlugin } from '@/utils/plugin.utils.js';\n\nimport { compressFormData, decompressElementData, type ElementData, prepareInitialData } from './stage-editor.utils.js';\n\nimport styles from './stage-editor.plugin.scss';\n\nconst UPDATE_DEBOUNCE = 300;\n\n/**\n * Allows editing a custom element.\n *\n */\n@customElement('wcp-stage-editor')\nexport class StageEditor extends ColorSchemable(LitElement) implements StagePlugin {\n  static override readonly styles = unsafeCSS(styles);\n\n  readonly #manifest = getManifest();\n\n  readonly #updateFormData = debounce(async (formData: FormData, element: Parsed.Element) => {\n    // dispatch the event to update the url param\n    const data = await compressFormData(formData, element);\n    const event = new CustomEvent('wcp-stage-plugin:data-change', { detail: data });\n    this.dispatchEvent(event);\n  }, UPDATE_DEBOUNCE);\n\n  readonly name = 'editor';\n  readonly label = 'Editor';\n\n  @state()\n  private _element?: Parsed.Element;\n\n  @state()\n  private _elementData?: ElementData;\n\n  @property({ type: String, reflect: true, attribute: 'preview-tag-name' })\n  set previewTagName(previewTagName: string) {\n    this._element = this.#manifest.elements.get(previewTagName);\n  }\n\n  @property({ type: String })\n  set data(data: string | undefined) {\n    this.#prepareElementData(data);\n  }\n\n  @property({ type: Boolean, reflect: true })\n  readonly available = true;\n\n  async #prepareElementData(compressed?: string) {\n    if (this._element === undefined) return;\n\n    // given data is always without default values, thus we have to retrieve them first\n    const initialData = prepareInitialData(this._element);\n\n    // read element data from compressed data param\n    if (compressed !== undefined) {\n      // merge given data on top of the initial data\n      const elementData = await decompressElementData(compressed);\n      this._elementData = {\n        attributes: { ...initialData.attributes, ...elementData.attributes },\n        fields: { ...initialData.fields, ...elementData.fields },\n        slots: { ...initialData.slots, ...elementData.slots },\n      };\n    }\n    // otherwise we reset the data\n    else {\n      this._elementData = initialData;\n    }\n  }\n\n  protected getElementReference(): Element | undefined {\n    if (this._element === undefined) return undefined;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.renderRoot.querySelector(this._element.tagName!) ?? undefined;\n  }\n\n  @eventOptions({ passive: true })\n  protected async handleControlsInput({ detail }: CustomEvent<FormData>) {\n    if (this._element === undefined) return;\n    this.#updateFormData(detail, this._element);\n  }\n\n  protected override firstUpdated() {\n    this.#prepareElementData();\n  }\n\n  protected override render(): TemplateResult {\n    return html`${keyed(\n      this._element?.tagName ?? '',\n      html`\n        <wcp-stage-editor-preview\n          preview-tag-name=\"${ifDefined(this._element?.tagName)}\"\n          .data=\"${this._elementData}\"\n        ></wcp-stage-editor-preview>\n\n        <wcp-stage-editor-controls\n          preview-tag-name=\"${ifDefined(this._element?.tagName)}\"\n          .data=\"${this._elementData}\"\n          @wcp-stage-editor-controls:input=\"${this.handleControlsInput}\"\n        ></wcp-stage-editor-controls>\n      `,\n    )}`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-stage-editor': StageEditor;\n  }\n}\n", "export function debounce<T extends (...args: Parameters<T>) => void>(this: ThisParameterType<T>, fn: T, wait = 300) {\n  let timeoutId: number;\n  return (...args: Parameters<T>) => {\n    window.clearTimeout(timeoutId);\n    timeoutId = window.setTimeout(() => fn.call(null, ...args), wait);\n  };\n}\n", "import { compress, decompress } from '@/utils/compression.utils.js';\nimport type * as Parsed from '@/utils/parser.types.js';\nimport { litKey } from '@/utils/parser.utils.js';\n\nconst URI_DATA_PARAM_COMPRESSION: CompressionFormat = 'deflate-raw';\n\n/**\n * State of the custom element.\n */\nexport type ElementData = {\n  /**\n   * Additional attributes mapped by attribute name to attribute value.\n   * Should not overlap with reflected attributes from fields.\n   */\n  attributes: Record<string, string | undefined>;\n\n  /**\n   * Field state mapped by property name to property value.\n   */\n  fields: Record<string, string | number | boolean | undefined>;\n\n  /**\n   * Slot state mapped by slot name to slot (html) content.\n   */\n  slots: Record<string, string>;\n};\n\n/**\n * Empty state object of the element data.\n */\nexport const EMPTY_ELEMENT_DATA: ElementData = {\n  attributes: {},\n  fields: {},\n  slots: {},\n};\n\n/**\n * Prepares an initial state object for the given element definition.\n */\nexport function prepareInitialData(element: Parsed.Element): ElementData {\n  return {\n    attributes: {},\n    fields:\n      Array.from(element.fields.values()).reduce((acc, field) => {\n        if (field.isControllable) {\n          const value = field.default;\n          if (value !== undefined) {\n            return { ...acc, [litKey(field)]: value };\n          }\n        }\n        return acc;\n      }, {}) ?? {},\n    slots:\n      Array.from(element.slots.values()).reduce((acc, slot) => {\n        return { ...acc, [slot.name]: slot.default };\n      }, {}) ?? {},\n  };\n}\n\n/**\n * Retrieve the current value of a given field parsed to the correct type\n */\nexport function parseFieldValue(\n  field: Parsed.Field,\n  value: unknown,\n): ElementData['fields'][keyof ElementData['fields']] {\n  if (field.isBoolean) {\n    return value === 'on';\n  }\n  if (field.isNumber) {\n    return Number(value);\n  }\n  if (field.isString) {\n    return (value as string).trim() ? (value as string) : undefined;\n  }\n  return undefined;\n}\n\n/**\n * There seems to be a bug in Safari with the native FormAssociated implementation regarding\n * checkboxes: https://bugs.webkit.org/show_bug.cgi?id=259781\n */\nexport function alignFormDataWebkit(\n  formData: FormData,\n  elements: HTMLFormControlsCollection,\n  element: Parsed.Element,\n): FormData {\n  // filter out unchecked checkboxes for Safari\n  Array.from(element.fields.entries())\n    .filter(([, field]) => field.isControllable && field.isBoolean)\n    .forEach(([, field]) => {\n      const name = `field.${field.name}`;\n      const checkbox = elements.namedItem(name) as HTMLInputElement;\n      if (!checkbox.checked) formData.delete(name);\n    });\n\n  // give away aligned form data\n  return formData;\n}\n\n/**\n * Maps the given form data by the given element definition to a stateful data object\n */\nexport function mapFormData(data: FormData, element: Parsed.Element): ElementData {\n  return Array.from(data.entries()).reduce((acc, [key, value]) => {\n    // the name consists of the group and the actual name, separated by a dot\n    const [group, name] = key.split('.');\n\n    // map slots\n    if (group === 'slot') {\n      return { ...acc, slots: { ...acc.slots, [name]: `${value}` } };\n    }\n\n    // map the field data\n    if (group === 'field') {\n      const field = element.fields.get(name);\n      if (field === undefined) return acc;\n\n      // pass the key-value pair into the data set\n      return { ...acc, fields: { ...acc.fields, [litKey(field)]: parseFieldValue(field, value) } };\n    }\n\n    // map the attribute data\n    if (group === 'attribute') {\n      // pass the key-value pair into the data set\n      return { ...acc, attributes: { ...acc.attributes, [name]: `${value}` } };\n    }\n\n    return acc;\n  }, EMPTY_ELEMENT_DATA);\n}\n\n/**\n * Prepares the data to be set as compressed url param\n */\nexport async function compressFormData(formData: FormData, element: Parsed.Element): Promise<string> {\n  const data = mapFormData(formData, element);\n  return encodeURIComponent(await compress(JSON.stringify(data), URI_DATA_PARAM_COMPRESSION));\n}\n\n/**\n * Decompresses and parses the given element data\n */\nexport async function decompressElementData(compressed: string): Promise<ElementData> {\n  const raw = await decompress(decodeURIComponent(compressed), URI_DATA_PARAM_COMPRESSION);\n  return JSON.parse(raw);\n}\n", "export default `:host {\n  display: flex;\n  flex-direction: column;\n  gap: calc(10px * 2);\n  gap: calc(var(--wcp-base-size, 10px) * 2);\n  padding-top: calc(10px * 2);\n  padding-top: calc(var(--wcp-base-size, 10px) * 2);\n}\n\nwcp-stage-editor-stage {\n  flex: 1 1 auto;\n}\nwcp-stage-editor-controls {\n  flex: 0 0 auto;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2NsaWVudC9jbGllbnQvc3JjL3BsdWdpbnMvc3RhZ2Uvc3RhZ2UtZWRpdG9yL3N0YWdlLWVkaXRvci5wbHVnaW4uc2NzcyIsIjpob3N0JTIwJTdCJTBBJTIwJTIwZGlzcGxheTolMjBmbGV4OyUwQSUyMCUyMGZsZXgtZGlyZWN0aW9uOiUyMGNvbHVtbjslMEElMjAlMjBnYXA6JTIwY2FsYyh2YXIoLS13Y3AtYmFzZS1zaXplLCUyMDEwcHgpJTIwKiUyMDIpOyUwQSUyMCUyMHBhZGRpbmctdG9wOiUyMGNhbGModmFyKC0td2NwLWJhc2Utc2l6ZSwlMjAxMHB4KSUyMColMjAyKTslMEElN0QlMEElMEF3Y3Atc3RhZ2UtZWRpdG9yLXN0YWdlJTIwJTdCJTBBJTIwJTIwZmxleDolMjAxJTIwMSUyMGF1dG87JTBBJTdEJTBBd2NwLXN0YWdlLWVkaXRvci1jb250cm9scyUyMCU3QiUwQSUyMCUyMGZsZXg6JTIwMCUyMDAlMjBhdXRvOyUwQSU3RCUwQS8qJTIzJTIwc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWU2IyOTBJam9pTDJodmJXVXZjblZ1Ym1WeUwzZHZjbXN2WTJ4cFpXNTBMMk5zYVdWdWRDOXpjbU12Y0d4MVoybHVjeTl6ZEdGblpTOXpkR0ZuWlMxbFpHbDBiM0lpTENKemIzVnlZMlZ6SWpwYkluTjBZV2RsTFdWa2FYUnZjaTV3YkhWbmFXNHVjMk56Y3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGRlFUdEZRVU5GTzBWQlEwRTdSVUZEUVR0RlFVTkJPenM3UVVGSlFUdEZRVU5GT3p0QlFVZEdPMFZCUTBVaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SkFkWE5sSUNkQUwzTjBlV3hsY3k5MWRHbHNjeWNnWVhNZ2RYUnBiSE03WEc1Y2JqcG9iM04wSUh0Y2JpQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdabXhsZUMxa2FYSmxZM1JwYjI0NklHTnZiSFZ0Ymp0Y2JpQWdaMkZ3T2lCMWRHbHNjeTV6YVhwbEtESXBPMXh1SUNCd1lXUmthVzVuTFhSdmNEb2dkWFJwYkhNdWMybDZaU2d5S1R0Y2JuMWNibHh1ZDJOd0xYTjBZV2RsTFdWa2FYUnZjaUI3WEc0Z0lDWXRjM1JoWjJVZ2UxeHVJQ0FnSUdac1pYZzZJREVnTVNCaGRYUnZPMXh1SUNCOVhHNWNiaUFnSmkxamIyNTBjbTlzY3lCN1hHNGdJQ0FnWm14bGVEb2dNQ0F3SUdGMWRHODdYRzRnSUgxY2JuMWNiaUpkZlE9PSUyMCoiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtFQUFBLHlDQUFBO0VBQ0EsMkJBQUE7RUFBQSxpREFBQTtBQ0RGOztBREtFO0VBQ0UsY0FBQTtBQ0ZKO0FES0U7RUFDRSxjQUFBO0FDSEoiLCJmaWxlIjoiOmhvc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBnYXA6IGNhbGModmFyKC0td2NwLWJhc2Utc2l6ZSwgMTBweCkgKiAyKTtcbiAgcGFkZGluZy10b3A6IGNhbGModmFyKC0td2NwLWJhc2Utc2l6ZSwgMTBweCkgKiAyKTtcbn1cblxud2NwLXN0YWdlLWVkaXRvci1zdGFnZSB7XG4gIGZsZXg6IDEgMSBhdXRvO1xufVxud2NwLXN0YWdlLWVkaXRvci1jb250cm9scyB7XG4gIGZsZXg6IDAgMCBhdXRvO1xufVxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVlNiMjkwSWpvaUwyaHZiV1V2Y25WdWJtVnlMM2R2Y21zdlkyeHBaVzUwTDJOc2FXVnVkQzl6Y21NdmNHeDFaMmx1Y3k5emRHRm5aUzl6ZEdGblpTMWxaR2wwYjNJaUxDSnpiM1Z5WTJWeklqcGJJbk4wWVdkbExXVmthWFJ2Y2k1d2JIVm5hVzR1YzJOemN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkZRVHRGUVVORk8wVkJRMEU3UlVGRFFUdEZRVU5CT3pzN1FVRkpRVHRGUVVORk96dEJRVWRHTzBWQlEwVWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpBZFhObElDZEFMM04wZVd4bGN5OTFkR2xzY3ljZ1lYTWdkWFJwYkhNN1hHNWNianBvYjNOMElIdGNiaUFnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnWm14bGVDMWthWEpsWTNScGIyNDZJR052YkhWdGJqdGNiaUFnWjJGd09pQjFkR2xzY3k1emFYcGxLRElwTzF4dUlDQndZV1JrYVc1bkxYUnZjRG9nZFhScGJITXVjMmw2WlNneUtUdGNibjFjYmx4dWQyTndMWE4wWVdkbExXVmthWFJ2Y2lCN1hHNGdJQ1l0YzNSaFoyVWdlMXh1SUNBZ0lHWnNaWGc2SURFZ01TQmhkWFJ2TzF4dUlDQjlYRzVjYmlBZ0ppMWpiMjUwY205c2N5QjdYRzRnSUNBZ1pteGxlRG9nTUNBd0lHRjFkRzg3WEc0Z0lIMWNibjFjYmlKZGZRPT0gKiIsInNvdXJjZXNDb250ZW50IjpbIkB1c2UgJ0Avc3R5bGVzL3V0aWxzJyBhcyB1dGlscztcblxuOmhvc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBnYXA6IHV0aWxzLnNpemUoMik7XG4gIHBhZGRpbmctdG9wOiB1dGlscy5zaXplKDIpO1xufVxuXG53Y3Atc3RhZ2UtZWRpdG9yIHtcbiAgJi1zdGFnZSB7XG4gICAgZmxleDogMSAxIGF1dG87XG4gIH1cblxuICAmLWNvbnRyb2xzIHtcbiAgICBmbGV4OiAwIDAgYXV0bztcbiAgfVxufVxuIiwiOmhvc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBnYXA6IGNhbGModmFyKC0td2NwLWJhc2Utc2l6ZSwgMTBweCkgKiAyKTtcbiAgcGFkZGluZy10b3A6IGNhbGModmFyKC0td2NwLWJhc2Utc2l6ZSwgMTBweCkgKiAyKTtcbn1cblxud2NwLXN0YWdlLWVkaXRvci1zdGFnZSB7XG4gIGZsZXg6IDEgMSBhdXRvO1xufVxud2NwLXN0YWdlLWVkaXRvci1jb250cm9scyB7XG4gIGZsZXg6IDAgMCBhdXRvO1xufVxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVlNiMjkwSWpvaUwyaHZiV1V2Y25WdWJtVnlMM2R2Y21zdlkyeHBaVzUwTDJOc2FXVnVkQzl6Y21NdmNHeDFaMmx1Y3k5emRHRm5aUzl6ZEdGblpTMWxaR2wwYjNJaUxDSnpiM1Z5WTJWeklqcGJJbk4wWVdkbExXVmthWFJ2Y2k1d2JIVm5hVzR1YzJOemN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkZRVHRGUVVORk8wVkJRMEU3UlVGRFFUdEZRVU5CT3pzN1FVRkpRVHRGUVVORk96dEJRVWRHTzBWQlEwVWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpBZFhObElDZEFMM04wZVd4bGN5OTFkR2xzY3ljZ1lYTWdkWFJwYkhNN1hHNWNianBvYjNOMElIdGNiaUFnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnWm14bGVDMWthWEpsWTNScGIyNDZJR052YkhWdGJqdGNiaUFnWjJGd09pQjFkR2xzY3k1emFYcGxLRElwTzF4dUlDQndZV1JrYVc1bkxYUnZjRG9nZFhScGJITXVjMmw2WlNneUtUdGNibjFjYmx4dWQyTndMWE4wWVdkbExXVmthWFJ2Y2lCN1hHNGdJQ1l0YzNSaFoyVWdlMXh1SUNBZ0lHWnNaWGc2SURFZ01TQmhkWFJ2TzF4dUlDQjlYRzVjYmlBZ0ppMWpiMjUwY205c2N5QjdYRzRnSUNBZ1pteGxlRG9nTUNBd0lHRjFkRzg3WEc0Z0lIMWNibjFjYmlKZGZRPT0gKi8iXX0= */`;\n", "import { html, LitElement, nothing, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement, eventOptions, property, state } from 'lit/decorators.js';\nimport { map } from 'lit/directives/map.js';\nimport { until } from 'lit/directives/until.js';\nimport { when } from 'lit/directives/when.js';\nimport { withStatic } from 'lit/static-html.js';\n\nimport { ColorSchemable } from '@/mixins/color-schemable.mixin.js';\nimport { getManifest } from '@/utils/manifest.utils.js';\nimport { renderMarkdown } from '@/utils/markdown.utils.js';\nimport type * as Parsed from '@/utils/parser.types.js';\nimport { litKey } from '@/utils/parser.utils.js';\n\nimport { alignFormDataWebkit, type ElementData } from '../stage-editor.utils.js';\n\nimport styles from './stage-editor-controls.component.scss';\n\n/**\n * @cssprop --wcp-stage-editor-controls-headline-size - The font size of the headline.\n * @cssprop --wcp-stage-editor-controls-headline-weight - The font weight of the headline.\n * @cssprop --wcp-stage-editor-controls-headline-spacing - The inner spacing of the headline.\n *\n * @cssprop --wcp-stage-editor-controls-dark-border-color - The border color of the element in dark mode.\n * @cssprop --wcp-stage-editor-controls-light-border-color - The border color of the element in light mode.\n *\n * @emits {CustomEvent<FormData>} wcp-stage-editor-controls:input - Fires when the user changes a control value.\n */\n@customElement('wcp-stage-editor-controls')\nexport class StageEditorControls extends ColorSchemable(LitElement) {\n  static override readonly styles = unsafeCSS(styles);\n\n  readonly #manifest = getManifest();\n\n  @state()\n  private _element?: Parsed.Element;\n\n  @property({ type: String, reflect: true, attribute: 'preview-tag-name' })\n  set previewTagName(previewTagName: string) {\n    this._element = this.#manifest.elements.get(previewTagName);\n  }\n\n  @property({ type: Object })\n  readonly data?: ElementData;\n\n  @eventOptions({ passive: true })\n  protected handleFormInput(event: InputEvent): void {\n    if (this._element === undefined) return;\n\n    // prepare form data\n    const form = event.currentTarget as HTMLFormElement;\n    const formData = alignFormDataWebkit(new FormData(form), form.elements, this._element);\n\n    // broadcast form data\n    this.dispatchEvent(\n      new CustomEvent('wcp-stage-editor-controls:input', {\n        bubbles: true,\n        composed: true,\n        detail: formData,\n      }),\n    );\n  }\n\n  // content is derived from documentation which can be written in markdown\n  protected renderHint(content?: string): TemplateResult {\n    return when(\n      content,\n      () => withStatic(html)`<div slot=\"hint\" .innerHTML=\"${until(renderMarkdown(content as string, false))}\"></div>`,\n    );\n  }\n\n  protected renderFieldControl(field: Parsed.Field): TemplateResult {\n    if (!field.isControllable) return html`${nothing}`;\n    const key = litKey(field);\n\n    return html`\n      ${when(\n        field.isBoolean,\n        () => html`\n          <wcp-input-checkbox\n            name=\"field.${field.name}\"\n            label=\"${field.name}\"\n            ?checked=\"${Boolean(this.data?.fields[key])}\"\n          >\n            ${this.renderHint(field.description)}\n          </wcp-input-checkbox>\n        `,\n      )}\n      ${when(\n        !field.isEnum && field.isString,\n        () => html`\n          <wcp-input-text\n            name=\"field.${field.name}\"\n            label=\"${field.attribute ?? field.name}\"\n            .value=\"${this.data?.fields[key] as string | undefined}\"\n          >\n            ${this.renderHint(field.description)}\n          </wcp-input-text>\n        `,\n      )}\n      ${when(\n        !field.isEnum && field.isNumber,\n        () => html`\n          <wcp-input-number\n            name=\"field.${field.name}\"\n            label=\"${field.attribute ?? field.name}\"\n            .value=\"${this.data?.fields[key] as number | undefined}\"\n          >\n            ${this.renderHint(field.description)}\n          </wcp-input-number>\n        `,\n      )}\n      ${when(\n        field.isEnum && field.isString,\n        () => html`\n          <wcp-input-select\n            name=\"field.${field.name}\"\n            label=\"${field.attribute ?? field.name}\"\n            .value=\"${this.data?.fields[key] as string | undefined}\"\n          >\n            ${map(\n              field.enumValues,\n              (option) => html`\n                <wcp-input-select-option label=\"${option}\" .value=\"${option}\"></wcp-input-select-option>\n              `,\n            )}\n            ${this.renderHint(field.description)}\n          </wcp-input-select>\n        `,\n      )}\n    `;\n  }\n\n  protected renderSlotControl(slot: Parsed.Slot): TemplateResult {\n    return html`\n      <wcp-input-code\n        autosize\n        name=\"slot.${slot.name}\"\n        label=\"${slot.name.trim() ? slot.name : 'Default'}\"\n        .value=\"${this.data?.slots[slot.name]}\"\n      >\n        ${when(slot.hasDescription, () => html`${this.renderHint(slot.description)}`)}\n      </wcp-input-code>\n    `;\n  }\n\n  protected renderAttributeControls(): TemplateResult {\n    return html`\n      <wcp-input-key-value-pairs\n        name=\"attribute.\"\n        .pairs=\"${Object.entries(this.data?.attributes ?? {})}\"\n      ></wcp-input-key-value-pairs>\n    `;\n  }\n\n  protected override render(): TemplateResult {\n    return html`\n      <form @input=\"${this.handleFormInput}\">\n        <wcp-tabs\n          .tabs=\"${{\n            fields: { label: 'Fields', disabled: !this._element?.hasFields },\n            slots: { label: 'Slots', disabled: !this._element?.hasSlots },\n            attributes: { label: 'Attributes' },\n          }}\"\n          active-tab=\"fields\"\n        >\n          ${when(\n            this._element?.hasFields,\n            () => html`\n              <fieldset slot=\"fields\">\n                ${map(this._element?.fields.values(), (field) => this.renderFieldControl(field))}\n              </fieldset>\n            `,\n          )}\n          ${when(\n            this._element?.hasSlots,\n            () => html`\n              <fieldset slot=\"slots\">\n                ${map(this._element?.slots.values(), (slot) => this.renderSlotControl(slot))}\n              </fieldset>\n            `,\n          )}\n          <fieldset slot=\"attributes\">${this.renderAttributeControls()}</fieldset>\n        </wcp-tabs>\n      </form>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementEventMap {\n    'wcp-stage-editor-controls:input': CustomEvent<FormData>;\n  }\n\n  interface HTMLElementTagNameMap {\n    'wcp-stage-editor-controls': StageEditorControls;\n  }\n}\n", "export default `:host {\n  ---wcp-stage-editor-controls-headline-size: var(--wcp-stage-editor-controls-headline-size, .8em);\n  ---wcp-stage-editor-controls-headline-weight: var(--wcp-stage-editor-controls-headline-weight, 200);\n  ---wcp-stage-editor-controls-headline-spacing: var(--wcp-stage-editor-controls-headline-spacing, .1em);\n  ---wcp-stage-editor-controls-dark-border-color: var(--wcp-stage-editor-controls-dark-border-color, var(--wcp-color-grey-24));\n  ---wcp-stage-editor-controls-light-border-color: var(--wcp-stage-editor-controls-light-border-color, var(--wcp-color-blue-55));\n}\n@media (prefers-color-scheme: dark) {\n  :host {\n    ---wcp-stage-editor-controls-border-color: var(---wcp-stage-editor-controls-dark-border-color);\n  }\n}\n:host([color-scheme=dark]):host {\n  ---wcp-stage-editor-controls-border-color: var(---wcp-stage-editor-controls-dark-border-color);\n}\n\n@media (prefers-color-scheme: light) {\n  :host {\n    ---wcp-stage-editor-controls-border-color: var(---wcp-stage-editor-controls-light-border-color);\n  }\n}\n:host([color-scheme=light]):host {\n  ---wcp-stage-editor-controls-border-color: var(---wcp-stage-editor-controls-light-border-color);\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n  gap: calc(10px * 2);\n  gap: calc(var(--wcp-base-size, 10px) * 2);\n}\n\nfieldset {\n  all: unset;\n  display: flex;\n  flex-direction: column;\n  gap: calc(10px * 1);\n  gap: calc(var(--wcp-base-size, 10px) * 1);\n  padding: calc(10px * 1) 0;\n  padding: calc(var(--wcp-base-size, 10px) * 1) 0;\n}\n\nlegend {\n  all: unset;\n  display: block;\n  width: 100%;\n  padding: calc(10px * 1) 0;\n  padding: calc(var(--wcp-base-size, 10px) * 1) 0;\n  border-top: 1px solid var(---wcp-stage-editor-controls-border-color);\n  font-size: var(---wcp-stage-editor-controls-headline-size);\n  font-weight: var(---wcp-stage-editor-controls-headline-weight);\n  letter-spacing: var(---wcp-stage-editor-controls-headline-spacing);\n  line-height: 1;\n  text-transform: uppercase;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n[slot=hint] {\n  display: block;\n  max-width: var(--wcp-layout-flowing-width);\n}\n[slot=hint] p {\n  margin: 0;\n}\n/*# sourceMappingURL=data:application/json;base64, */`;\n", null, "import { spread } from '@open-wc/lit-helpers';\nimport { html, LitElement, nothing, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { keyed } from 'lit/directives/keyed.js';\nimport { map } from 'lit/directives/map.js';\nimport { unsafeHTML } from 'lit/directives/unsafe-html.js';\nimport { when } from 'lit/directives/when.js';\nimport { unsafeStatic, withStatic } from 'lit/static-html.js';\n\nimport type { ElementData } from '../stage-editor.utils.js';\n\nimport styles from './stage-editor-preview.component.scss';\n\n@customElement('wcp-stage-editor-preview')\nexport class StageEditorPreview extends LitElement {\n  static override readonly styles = unsafeCSS(styles);\n\n  @property({ type: String, reflect: true, attribute: 'preview-tag-name' })\n  previewTagName?: string;\n\n  @property({ type: Object })\n  data?: ElementData;\n\n  /**\n   * Takes the given attributes record, eliminates the empty keys and aligns boolean attributes.\n   * @private\n   */\n  #alignAttributes(attributes: ElementData['attributes']): ElementData['attributes'] {\n    return Object.entries(attributes ?? {}).reduce((acc, [key, value]) => {\n      // align the ky by removing forbidden characters\n      key = key.replace(/[^a-zA-Z0-9-]/g, '');\n      // skip empty keys\n      if (key === '') return acc;\n      // missing value means boolean attribute\n      if (['', null, undefined].includes(value)) {\n        return { ...acc, [`?${key}`]: true };\n      }\n      // otherwise, just return the pair\n      return { ...acc, [key]: value };\n    }, {});\n  }\n\n  /**\n   * Prepares a record of lit aware attributes and properties.\n   * @private\n   */\n  #prepareProps(): Record<string, unknown> {\n    return {\n      // set the attributes first, as they may be overwritten by the fields...\n      ...this.#alignAttributes(this.data?.attributes ?? {}),\n      // ... if the same key is used in both\n      ...(this.data?.fields ?? {}),\n    };\n  }\n\n  protected renderSlots(): TemplateResult {\n    return html`\n      ${map(\n        Object.entries(this.data?.slots ?? {})\n          // do not render empty slots\n          .filter(([, content]) => content.trim() !== ''),\n        ([name, content]) => withStatic(html)`\n          ${when(\n            name === '',\n            () => unsafeHTML(content),\n            () => withStatic(html)`<div slot=\"${name}\">${unsafeHTML(content)}</div>`,\n          )}\n        `,\n      )}\n    `;\n  }\n\n  protected override render(): TemplateResult {\n    // we need the tag name to be defined and the iframe ready\n    if (this.previewTagName === undefined || !this.previewTagName.length) return html`${nothing}`;\n\n    // prepare the tag name and render it along with the slots and properties\n    const tag = unsafeStatic(this.previewTagName);\n    return html`\n      <wcp-preview preview-tag-name=\"${this.previewTagName}\">\n        ${keyed(\n          this.data,\n          withStatic(html)`\n            <${tag} ${spread(this.#prepareProps())}>\n              ${this.renderSlots()}\n            </${tag}>\n          `,\n        )}\n      </wcp-preview>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-stage-editor-preview': StageEditorPreview;\n  }\n}\n", "export default ``;\n", "import { html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { map } from 'lit/directives/map.js';\nimport { until } from 'lit/directives/until.js';\n\nimport { ColorSchemable } from '@/mixins/color-schemable.mixin.js';\nimport { getManifest } from '@/utils/manifest.utils.js';\nimport { renderMarkdown } from '@/utils/markdown.utils.js';\nimport type * as Parsed from '@/utils/parser.types.js';\nimport type { StagePlugin } from '@/utils/plugin.utils.js';\n\nimport styles from './stage-examples.plugin.scss';\n\n/**\n * Shows the examples of a custom element manifest.\n *\n * @cssprop --wcp-stage-examples-spacing - Spacing between examples.\n */\n@customElement('wcp-stage-examples')\nexport class StageExamples extends ColorSchemable(LitElement) implements StagePlugin {\n  static override readonly styles = unsafeCSS(styles);\n\n  readonly #manifest = getManifest();\n\n  readonly name = 'examples';\n  readonly label = 'Examples';\n\n  @state()\n  private _element?: Parsed.Element;\n\n  @property({ type: Boolean, reflect: true })\n  available = false;\n\n  @property({ type: String, reflect: true, attribute: 'preview-tag-name' })\n  set previewTagName(previewTagName: string) {\n    this._element = this.#manifest.elements.get(previewTagName);\n    const available = this._element?.hasExamples ?? false;\n\n    // update the property if changed\n    if (this.available !== available) {\n      this.available = available;\n\n      // notify about availability change\n      const event = new CustomEvent('wcp-stage-plugin:availability-change', {\n        detail: this.available,\n        bubbles: true,\n        composed: true,\n      });\n      this.dispatchEvent(event);\n    }\n  }\n\n  protected override render(): TemplateResult {\n    return html`\n      ${map(\n        this._element?.examples ?? [],\n        (example: string) =>\n          html`<section .innerHTML=\"${until(renderMarkdown(example, true, this._element?.tagName))}\"></section>`,\n      )}\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementEventMap {\n    'wcp-stage-plugin:availability-change': CustomEvent<boolean>;\n  }\n  interface HTMLElementTagNameMap {\n    'wcp-stage-examples': StageExamples;\n  }\n}\n", "export default `:host {\n  ---wcp-stage-examples-spacing: var(--wcp-stage-examples-spacing, calc(var(--wcp-base-size, 10px) * 3));\n}\n\nsection ~ section {\n  margin-top: var(---wcp-stage-examples-spacing);\n}\n\nwcp-markdown-example {\n  max-width: var(--wcp-layout-fixed-width);\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2NsaWVudC9jbGllbnQvc3JjL3BsdWdpbnMvc3RhZ2Uvc3RhZ2UtZXhhbXBsZXMvc3RhZ2UtZXhhbXBsZXMucGx1Z2luLnNjc3MiLCI6aG9zdCUyMCU3QiUwQSUyMCUyMC0tLXdjcC1zdGFnZS1leGFtcGxlcy1zcGFjaW5nOiUyMHZhcigtLXdjcC1zdGFnZS1leGFtcGxlcy1zcGFjaW5nLCUyMGNhbGModmFyKC0td2NwLWJhc2Utc2l6ZSwlMjAxMHB4KSUyMColMjAzKSk7JTBBJTdEJTBBJTBBc2VjdGlvbiUyMH4lMjBzZWN0aW9uJTIwJTdCJTBBJTIwJTIwbWFyZ2luLXRvcDolMjB2YXIoLS0td2NwLXN0YWdlLWV4YW1wbGVzLXNwYWNpbmcpOyUwQSU3RCUwQSUwQXdjcC1tYXJrZG93bi1leGFtcGxlJTIwJTdCJTBBJTIwJTIwbWF4LXdpZHRoOiUyMHZhcigtLXdjcC1sYXlvdXQtZml4ZWQtd2lkdGgpOyUwQSU3RCUwQS8qJTIzJTIwc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWU2IyOTBJam9pTDJodmJXVXZjblZ1Ym1WeUwzZHZjbXN2WTJ4cFpXNTBMMk5zYVdWdWRDOXpjbU12Y0d4MVoybHVjeTl6ZEdGblpTOXpkR0ZuWlMxbGVHRnRjR3hsY3lJc0luTnZkWEpqWlhNaU9sc2ljM1JoWjJVdFpYaGhiWEJzWlhNdWNHeDFaMmx1TG5OamMzTWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJSMEU3UlVGRFJUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlNJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYklrQjFjMlVnSjBBdmMzUjViR1Z6TDNWMGFXeHpKeUJoY3lCMWRHbHNjenRjYmx4dUx5OGdjSEpsZEhScFpYSXRhV2R1YjNKbFhHNDZhRzl6ZENCN1hHNGdJQzB0TFhkamNDMXpkR0ZuWlMxbGVHRnRjR3hsY3kxemNHRmphVzVuT2lCMllYSW9MUzEzWTNBdGMzUmhaMlV0WlhoaGJYQnNaWE10YzNCaFkybHVaeXdnSTN0MWRHbHNjeTV6YVhwbEtETXBmU2s3WEc1OVhHNWNibk5sWTNScGIyNGdmaUJ6WldOMGFXOXVJSHRjYmlBZ2JXRnlaMmx1TFhSdmNEb2dkbUZ5S0MwdExYZGpjQzF6ZEdGblpTMWxlR0Z0Y0d4bGN5MXpjR0ZqYVc1bktUdGNibjFjYmx4dWQyTndMVzFoY210a2IzZHVMV1Y0WVcxd2JHVWdlMXh1SUNCdFlYZ3RkMmxrZEdnNklIWmhjaWd0TFhkamNDMXNZWGx2ZFhRdFptbDRaV1F0ZDJsa2RHZ3BPMXh1ZlZ4dUlsMTklMjAqIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBO0VBQ0Usc0dBQUE7QUNGRjs7QURLQTtFQUNFLDhDQUFBO0FDRkY7O0FES0E7RUFDRSx3Q0FBQTtBQ0ZGIiwiZmlsZSI6Ijpob3N0IHtcbiAgLS0td2NwLXN0YWdlLWV4YW1wbGVzLXNwYWNpbmc6IHZhcigtLXdjcC1zdGFnZS1leGFtcGxlcy1zcGFjaW5nLCBjYWxjKHZhcigtLXdjcC1iYXNlLXNpemUsIDEwcHgpICogMykpO1xufVxuXG5zZWN0aW9uIH4gc2VjdGlvbiB7XG4gIG1hcmdpbi10b3A6IHZhcigtLS13Y3Atc3RhZ2UtZXhhbXBsZXMtc3BhY2luZyk7XG59XG5cbndjcC1tYXJrZG93bi1leGFtcGxlIHtcbiAgbWF4LXdpZHRoOiB2YXIoLS13Y3AtbGF5b3V0LWZpeGVkLXdpZHRoKTtcbn1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZTYjI5MElqb2lMMmh2YldVdmNuVnVibVZ5TDNkdmNtc3ZZMnhwWlc1MEwyTnNhV1Z1ZEM5emNtTXZjR3gxWjJsdWN5OXpkR0ZuWlM5emRHRm5aUzFsZUdGdGNHeGxjeUlzSW5OdmRYSmpaWE1pT2xzaWMzUmhaMlV0WlhoaGJYQnNaWE11Y0d4MVoybHVMbk5qYzNNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlIwRTdSVUZEUlRzN08wRkJSMFk3UlVGRFJUczdPMEZCUjBZN1JVRkRSU0lzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWtCMWMyVWdKMEF2YzNSNWJHVnpMM1YwYVd4ekp5QmhjeUIxZEdsc2N6dGNibHh1THk4Z2NISmxkSFJwWlhJdGFXZHViM0psWEc0NmFHOXpkQ0I3WEc0Z0lDMHRMWGRqY0MxemRHRm5aUzFsZUdGdGNHeGxjeTF6Y0dGamFXNW5PaUIyWVhJb0xTMTNZM0F0YzNSaFoyVXRaWGhoYlhCc1pYTXRjM0JoWTJsdVp5d2dJM3QxZEdsc2N5NXphWHBsS0RNcGZTazdYRzU5WEc1Y2JuTmxZM1JwYjI0Z2ZpQnpaV04wYVc5dUlIdGNiaUFnYldGeVoybHVMWFJ2Y0RvZ2RtRnlLQzB0TFhkamNDMXpkR0ZuWlMxbGVHRnRjR3hsY3kxemNHRmphVzVuS1R0Y2JuMWNibHh1ZDJOd0xXMWhjbXRrYjNkdUxXVjRZVzF3YkdVZ2UxeHVJQ0J0WVhndGQybGtkR2c2SUhaaGNpZ3RMWGRqY0Mxc1lYbHZkWFF0Wm1sNFpXUXRkMmxrZEdncE8xeHVmVnh1SWwxOSAqIiwic291cmNlc0NvbnRlbnQiOlsiQHVzZSAnQC9zdHlsZXMvdXRpbHMnIGFzIHV0aWxzO1xuXG4vLyBwcmV0dGllci1pZ25vcmVcbjpob3N0IHtcbiAgLS0td2NwLXN0YWdlLWV4YW1wbGVzLXNwYWNpbmc6IHZhcigtLXdjcC1zdGFnZS1leGFtcGxlcy1zcGFjaW5nLCAje3V0aWxzLnNpemUoMyl9KTtcbn1cblxuc2VjdGlvbiB+IHNlY3Rpb24ge1xuICBtYXJnaW4tdG9wOiB2YXIoLS0td2NwLXN0YWdlLWV4YW1wbGVzLXNwYWNpbmcpO1xufVxuXG53Y3AtbWFya2Rvd24tZXhhbXBsZSB7XG4gIG1heC13aWR0aDogdmFyKC0td2NwLWxheW91dC1maXhlZC13aWR0aCk7XG59XG4iLCI6aG9zdCB7XG4gIC0tLXdjcC1zdGFnZS1leGFtcGxlcy1zcGFjaW5nOiB2YXIoLS13Y3Atc3RhZ2UtZXhhbXBsZXMtc3BhY2luZywgY2FsYyh2YXIoLS13Y3AtYmFzZS1zaXplLCAxMHB4KSAqIDMpKTtcbn1cblxuc2VjdGlvbiB+IHNlY3Rpb24ge1xuICBtYXJnaW4tdG9wOiB2YXIoLS0td2NwLXN0YWdlLWV4YW1wbGVzLXNwYWNpbmcpO1xufVxuXG53Y3AtbWFya2Rvd24tZXhhbXBsZSB7XG4gIG1heC13aWR0aDogdmFyKC0td2NwLWxheW91dC1maXhlZC13aWR0aCk7XG59XG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWU2IyOTBJam9pTDJodmJXVXZjblZ1Ym1WeUwzZHZjbXN2WTJ4cFpXNTBMMk5zYVdWdWRDOXpjbU12Y0d4MVoybHVjeTl6ZEdGblpTOXpkR0ZuWlMxbGVHRnRjR3hsY3lJc0luTnZkWEpqWlhNaU9sc2ljM1JoWjJVdFpYaGhiWEJzWlhNdWNHeDFaMmx1TG5OamMzTWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJSMEU3UlVGRFJUczdPMEZCUjBZN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlNJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYklrQjFjMlVnSjBBdmMzUjViR1Z6TDNWMGFXeHpKeUJoY3lCMWRHbHNjenRjYmx4dUx5OGdjSEpsZEhScFpYSXRhV2R1YjNKbFhHNDZhRzl6ZENCN1hHNGdJQzB0TFhkamNDMXpkR0ZuWlMxbGVHRnRjR3hsY3kxemNHRmphVzVuT2lCMllYSW9MUzEzWTNBdGMzUmhaMlV0WlhoaGJYQnNaWE10YzNCaFkybHVaeXdnSTN0MWRHbHNjeTV6YVhwbEtETXBmU2s3WEc1OVhHNWNibk5sWTNScGIyNGdmaUJ6WldOMGFXOXVJSHRjYmlBZ2JXRnlaMmx1TFhSdmNEb2dkbUZ5S0MwdExYZGpjQzF6ZEdGblpTMWxlR0Z0Y0d4bGN5MXpjR0ZqYVc1bktUdGNibjFjYmx4dWQyTndMVzFoY210a2IzZHVMV1Y0WVcxd2JHVWdlMXh1SUNCdFlYZ3RkMmxrZEdnNklIWmhjaWd0TFhkamNDMXNZWGx2ZFhRdFptbDRaV1F0ZDJsa2RHZ3BPMXh1ZlZ4dUlsMTkgKi8iXX0= */`;\n", "import { html, LitElement, nothing, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\n\nimport { ColorSchemable } from '@/mixins/color-schemable.mixin.js';\nimport { getManifest } from '@/utils/manifest.utils.js';\nimport type * as Parsed from '@/utils/parser.types.js';\nimport type { StagePlugin } from '@/utils/plugin.utils.js';\n\nimport styles from './stage-readme.plugin.scss';\n\n/**\n * Shows the readme of a custom element.\n *\n */\n@customElement('wcp-stage-readme')\nexport class StageReadme extends ColorSchemable(LitElement) implements StagePlugin {\n  static override readonly styles = unsafeCSS(styles);\n\n  readonly #manifest = getManifest();\n\n  readonly name = 'readme';\n  readonly label = 'Readme';\n\n  @state()\n  private _element?: Parsed.Element;\n\n  @property({ type: Boolean, reflect: true })\n  available = false;\n\n  @property({ type: String, reflect: true, attribute: 'preview-tag-name' })\n  set previewTagName(previewTagName: string) {\n    this._element = this.#manifest.elements.get(previewTagName);\n    const available = this._element?.hasReadme ?? false;\n\n    // update the property if changed\n    if (this.available !== available) {\n      this.available = available;\n\n      // notify about availability change\n      const event = new CustomEvent('wcp-stage-plugin:availability-change', {\n        detail: this.available,\n        bubbles: true,\n        composed: true,\n      });\n      this.dispatchEvent(event);\n    }\n  }\n\n  // without ShadowDOM, we need to manually inject the styles\n  protected override render(): TemplateResult {\n    return html`\n      ${this.available\n        ? html`\n            <wcp-readme\n              add-code-preview\n              preview-tag-name=\"${ifDefined(this._element?.tagName)}\"\n              markdown=\"${this._element?.readme ?? ''}\"\n            ></wcp-readme>\n          `\n        : nothing}\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementEventMap {\n    'wcp-stage-plugin:availability-change': CustomEvent<boolean>;\n  }\n  interface HTMLElementTagNameMap {\n    'wcp-stage-readme': StageReadme;\n  }\n}\n", "export default ``;\n", "import { html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement, eventOptions, property, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport type { TopbarPlugin } from '@/utils/plugin.utils.js';\nimport { persist, read } from '@/utils/state.utils.js';\n\nimport styles from './topbar-preview-editor-link-toggle.plugin.scss';\n\n/**\n * Toggles all preview editor link plugins to show or hide the debug hints.\n *\n */\n@customElement('wcp-topbar-preview-editor-link-toggle')\nexport class TopbarPreviewEditorLinkToggle extends LitElement implements TopbarPlugin {\n  static override readonly styles = unsafeCSS(styles);\n\n  readonly name = 'editor-link-toggle';\n  readonly label = 'Toggle all editor link hints globally';\n\n  @state()\n  private enabled = read('editor-link-hint-visible') ?? false;\n\n  @property({ type: Boolean, reflect: true })\n  available = true;\n\n  @eventOptions({ passive: true })\n  protected handleToggleClick() {\n    this.enabled = !this.enabled;\n    persist('editor-link-hint-visible', this.enabled);\n  }\n\n  protected override render(): TemplateResult {\n    return html`\n      <wcp-button\n        kind=\"icon\"\n        class=\"${classMap({ active: this.enabled })}\"\n        ?disabled=\"${!this.available}\"\n        @click=\"${this.handleToggleClick}\"\n      >\n        <wcp-icon name=\"terminal\"></wcp-icon>\n      </wcp-button>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'wcp-topbar-preview-editor-link-toggle': TopbarPreviewEditorLinkToggle;\n  }\n}\n", "export default ``;\n"],
  "mappings": "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",
  "names": ["require_prism", "__commonJSMin", "exports", "module", "_self", "Prism", "lang", "uniqueId", "plainTextGrammar", "_", "encode", "tokens", "Token", "o", "obj", "deepClone", "visited", "clone", "id", "key", "v", "i", "element", "m", "language", "err", "src", "scripts", "className", "defaultActivation", "no", "classList", "redef", "inside", "before", "insert", "root", "grammar", "ret", "token", "newToken", "old", "value", "DFS", "callback", "type", "objId", "property", "propertyType", "async", "container", "env", "parent", "code", "insertHighlightedCode", "highlightedCode", "worker", "evt", "text", "rest", "tokenList", "LinkedList", "addAfter", "matchGrammar", "toArray", "name", "hooks", "callbacks", "content", "alias", "matchedStr", "stringify", "s", "e", "aliases", "attributes", "matchPattern", "pattern", "pos", "lookbehind", "match", "lookbehindLength", "startNode", "startPos", "rematch", "patterns", "patternObj", "greedy", "flags", "currentNode", "str", "removeCount", "from", "to", "p", "k", "matchStr", "after", "reach", "removeFrom", "removeRange", "wrapped", "nestedRematch", "head", "tail", "list", "node", "next", "newNode", "count", "array", "message", "immediateClose", "script", "highlightAutomaticallyCallback", "readyState", "tagName", "includedCdataInside", "def", "attrName", "string", "markup", "LOADING_MESSAGE", "FAILURE_MESSAGE", "status", "FAILURE_EMPTY_MESSAGE", "EXTENSIONS", "STATUS_ATTR", "STATUS_LOADING", "STATUS_LOADED", "STATUS_FAILED", "SELECTOR", "loadFile", "success", "error", "xhr", "parseRange", "range", "start", "comma", "end", "pre", "extension", "autoloader", "lines", "elements", "logged", "ke", "e", "t", "v", "r", "n", "o", "c", "l", "s", "i", "Pe", "Se", "a", "D", "x", "f", "h", "p", "u", "d", "T", "O", "xe", "L", "I", "H", "$", "k", "G", "Y", "g", "m", "M", "R", "S", "be", "X", "Z", "F", "y", "J", "Q", "Ee", "W", "N", "ee", "te", "re", "ne", "j", "z", "se", "ie", "ae", "oe", "_", "K", "ce", "A", "le", "he", "fe", "ue", "pe", "de", "ge", "P", "C", "w", "Re", "ye", "b", "B", "q", "U", "V", "E", "me", "init_urlpattern", "__esmMin", "#i", "#n", "#t", "#e", "#s", "#u", "#c", "#p", "#d", "#g", "#P", "#l", "#r", "#h", "#f", "#T", "#O", "#S", "#C", "#E", "#x", "#b", "#R", "#A", "#w", "#y", "#o", "#k", "#m", "#a", "urlpattern_polyfill_exports", "__export", "me", "init_urlpattern_polyfill", "__esmMin", "init_urlpattern", "html", "LitElement", "unsafeCSS", "customElement", "ifDefined", "map", "property", "defaultConfig", "mergeConfigWithDefaults", "config", "loadConfig", "url", "response", "getConfig", "STORAGE_PREFIX", "STATE_EVENT_NAME", "persist", "key", "value", "serializedValue", "keyWithPrefix", "persistence", "getConfig", "_", "read", "colorSchemables", "getColorSchemeState", "read", "addColorSchemable", "element", "removeColorSchemable", "handleColorSchemeChange", "detail", "colorScheme", "colorSchemable", "ColorSchemable", "superClass", "ColorSchemableElement", "getColorSchemeState", "addColorSchemable", "removeColorSchemable", "__decorateClass", "property", "markdown_example_component_default", "MARKDOWN_EXAMPLE_TABS", "_config", "MarkdownExample", "ColorSchemable", "LitElement", "__privateAdd", "getConfig", "html", "ifDefined", "__privateGet", "map", "tab", "unsafeCSS", "markdown_example_component_default", "__decorateClass", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "eventOptions", "property", "ifDefined", "when", "navigation_component_default", "Navigation", "ColorSchemable", "LitElement", "event", "html", "when", "ifDefined", "unsafeCSS", "navigation_component_default", "__decorateClass", "property", "eventOptions", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "property", "ifDefined", "when", "navigation_item_component_default", "NavigationItem", "ColorSchemable", "LitElement", "html", "when", "ifDefined", "unsafeCSS", "navigation_item_component_default", "__decorateClass", "property", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "eventOptions", "property", "when", "navigation_search_component_default", "_updateSearchTerm", "updateSearchTerm_fn", "NavigationSearch", "ColorSchemable", "LitElement", "__privateAdd", "event", "value", "__privateMethod", "html", "when", "term", "unsafeCSS", "navigation_search_component_default", "__decorateClass", "property", "eventOptions", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "eventOptions", "property", "state", "map", "ref", "when", "staticHtml", "unsafeStatic", "listen", "type", "bindTo", "ctor", "name", "target", "listener", "boundListener", "eventOptions", "capture", "passive", "once", "connectedCallback", "disconnectedCallback", "args", "preview_component_default", "_config", "Preview", "ColorSchemable", "LitElement", "__privateAdd", "getConfig", "container", "html", "ref", "when", "map", "__privateGet", "plugin", "index", "staticHtml", "unsafeStatic", "unsafeCSS", "preview_component_default", "__decorateClass", "state", "property", "eventOptions", "listen", "customElement", "LitElement", "unsafeCSS", "customElement", "property", "until", "html", "_getDefaults", "_defaults", "changeDefaults", "newDefaults", "escapeTest", "escapeReplace", "escapeTestNoEncode", "escapeReplaceNoEncode", "escapeReplacements", "getEscapeReplacement", "ch", "escape", "html", "encode", "unescapeTest", "unescape", "_", "n", "caret", "edit", "regex", "opt", "source", "obj", "name", "val", "valSource", "cleanUrl", "href", "noopTest", "splitCells", "tableRow", "count", "row", "match", "offset", "str", "escaped", "curr", "cells", "i", "rtrim", "c", "invert", "l", "suffLen", "currChar", "findClosingBracket", "b", "level", "outputLink", "cap", "link", "raw", "lexer", "title", "text", "token", "indentCodeCompensation", "matchIndentToCode", "indentToCode", "node", "matchIndentInNode", "indentInNode", "_Tokenizer", "options", "src", "trimmed", "top", "tokens", "bull", "isordered", "list", "itemRegex", "itemContents", "endsWithBlankLine", "endEarly", "line", "t", "nextLine", "indent", "blankLine", "nextBulletRegex", "hrRegex", "fencesBeginRegex", "headingBeginRegex", "rawLine", "istask", "ischecked", "spacers", "hasMultipleLineBreaks", "tag", "headers", "aligns", "rows", "item", "align", "header", "cell", "trimmedUrl", "rtrimSlash", "lastParenIndex", "linkLen", "links", "linkString", "maskedSrc", "prevChar", "lLength", "rDelim", "rLength", "delimTotal", "midDelimTotal", "endReg", "lastCharLength", "hasNonSpaceChars", "hasSpaceCharsOnBothEnds", "prevCapZero", "newline", "blockCode", "fences", "hr", "heading", "bullet", "lheading", "_paragraph", "blockText", "_blockLabel", "def", "_tag", "_comment", "paragraph", "blockquote", "blockNormal", "gfmTable", "blockGfm", "blockPedantic", "inlineCode", "br", "inlineText", "_punctuation", "punctuation", "blockSkip", "emStrongLDelim", "emStrongRDelimAst", "emStrongRDelimUnd", "anyPunctuation", "autolink", "_inlineComment", "_inlineLabel", "reflink", "nolink", "reflinkSearch", "inlineNormal", "inlinePedantic", "inlineGfm", "inlineBreaks", "block", "inline", "_Lexer", "__Lexer", "rules", "next", "leading", "tabs", "lastToken", "cutSrc", "lastParagraphClipped", "extTokenizer", "startIndex", "tempSrc", "tempStart", "getStartIndex", "errMsg", "keepPrevChar", "_Renderer", "code", "infostring", "lang", "quote", "body", "ordered", "start", "type", "startatt", "task", "checked", "content", "flags", "cleanHref", "out", "_TextRenderer", "_Parser", "__Parser", "genericToken", "ret", "headingToken", "codeToken", "tableToken", "j", "k", "blockquoteToken", "listToken", "loose", "itemBody", "checkbox", "htmlToken", "paragraphToken", "textToken", "renderer", "escapeToken", "tagToken", "linkToken", "imageToken", "strongToken", "emToken", "codespanToken", "delToken", "_Hooks", "markdown", "Marked", "#parseMarkdown", "args", "callback", "values", "childTokens", "extensions", "pack", "opts", "ext", "prevRenderer", "extLevel", "prop", "rendererProp", "rendererFunc", "tokenizer", "tokenizerProp", "tokenizerFunc", "prevTokenizer", "hooks", "hooksProp", "hooksFunc", "prevHook", "arg", "walkTokens", "packWalktokens", "parser", "origOpt", "throwError", "#onError", "e", "silent", "async", "msg", "markedInstance", "marked", "setOptions", "use", "parseInline", "parser", "_Parser", "lexer", "_Lexer", "markedHighlight", "options", "token", "lang", "getLang", "updateToken", "code", "infoString", "escaped", "classAttr", "escape", "escapeTest", "escapeReplace", "escapeTestNoEncode", "escapeReplaceNoEncode", "escapeReplacements", "getEscapeReplacement", "ch", "html", "encode", "Prism", "getCodeExample", "slot", "acc", "el", "CustomRenderer", "_Renderer", "addCodePreview", "previewTagName", "#rawCodeMap", "raw", "highlighted", "code", "language", "escaped", "resolveRelativePath", "path", "stripLeadingSlash", "str", "url", "prefixRelativeUrls", "markdown", "currentPath", "basePath", "currentDir", "_", "before", "ext", "hash", "after", "isMarkdownLink", "hasPath", "hasHash", "nextPath", "link", "section", "mapLangToGrammar", "lang", "renderMarkdown", "renderer", "marked", "markedHighlight", "readme_component_default", "Readme", "ColorSchemable", "LitElement", "section", "element", "el", "html", "until", "renderMarkdown", "unsafeCSS", "readme_component_default", "__decorateClass", "property", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "readme_frame_component_default", "ReadmeFrame", "LitElement", "html", "unsafeCSS", "readme_frame_component_default", "__decorateClass", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "eventOptions", "property", "queryAssignedElements", "state", "ifDefined", "map", "when", "LOG_PREFIX", "log", "args", "getConfig", "isPlugin", "element", "isStagePlugin", "isPreviewPlugin", "stage_component_default", "Stage", "ColorSchemable", "LitElement", "activePlugin", "event", "plugins", "isStagePlugin", "log", "tab", "currentTarget", "target", "tabs", "available", "label", "name", "alignedActivePlugin", "html", "when", "ifDefined", "map", "unsafeCSS", "stage_component_default", "__decorateClass", "queryAssignedElements", "state", "property", "eventOptions", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "eventOptions", "toggle_color_scheme_component_default", "ToggleColorScheme", "ColorSchemable", "LitElement", "colorScheme", "persist", "html", "unsafeCSS", "toggle_color_scheme_component_default", "__decorateClass", "eventOptions", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "eventOptions", "toggle_sidebar_component_default", "ToggleSidebar", "LitElement", "persist", "read", "html", "unsafeCSS", "toggle_sidebar_component_default", "__decorateClass", "eventOptions", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "topbar_component_default", "Topbar", "ColorSchemable", "LitElement", "html", "unsafeCSS", "topbar_component_default", "__decorateClass", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "eventOptions", "property", "html", "nothing", "unsafeCSS", "property", "when", "editable_mixin_default", "Editable", "hasHintSlot", "hasBeforeSlot", "hasAfterSlot", "hasBorder", "superClass", "EditableElement", "ColorSchemable", "unsafeCSS", "editable_mixin_default", "_", "html", "nothing", "name", "when", "__decorateClass", "property", "input_checkbox_component_default", "InputCheckbox", "Editable", "LitElement", "props", "name", "old", "value", "event", "input", "id", "html", "__superGet", "unsafeCSS", "input_checkbox_component_default", "__decorateClass", "property", "eventOptions", "customElement", "import_prismjs", "e", "t", "o", "i", "r", "l", "s", "n", "a", "c", "html", "LitElement", "unsafeCSS", "customElement", "eventOptions", "property", "query", "input_code_component_default", "_initialValue", "InputCode", "Editable", "LitElement", "__privateAdd", "value", "props", "__privateSet", "__privateGet", "event", "code", "id", "html", "__superGet", "unsafeCSS", "input_code_component_default", "__decorateClass", "query", "property", "eventOptions", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "eventOptions", "property", "input_key_value_component_default", "_value", "_initialName", "_initialValue", "InputKeyValue", "Editable", "LitElement", "__privateAdd", "value", "oldValue", "__privateGet", "__privateSet", "props", "event", "id", "html", "__superGet", "unsafeCSS", "input_key_value_component_default", "__decorateClass", "property", "eventOptions", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "eventOptions", "property", "query", "map", "when", "input_key_value_pairs_component_default", "_rawValue", "_prefixedValue", "_valuePairs", "_initialValue", "_hasEmptyPair", "hasEmptyPair_get", "InputKeyValuePairs", "Editable", "LitElement", "__privateAdd", "value", "oldValue", "__privateGet", "formData", "__privateSet", "key", "rawKey", "preKey", "pairs", "props", "event", "button", "before", "after", "html", "map", "index", "when", "__superGet", "unsafeCSS", "input_key_value_pairs_component_default", "__decorateClass", "query", "property", "eventOptions", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "eventOptions", "property", "query", "input_number_component_default", "_initialValue", "InputNumber", "Editable", "LitElement", "__privateAdd", "props", "__privateSet", "__privateGet", "name", "oldValue", "newValue", "event", "input", "id", "html", "__superGet", "unsafeCSS", "input_number_component_default", "__decorateClass", "query", "property", "eventOptions", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "eventOptions", "property", "input_radio_component_default", "_checked", "_initialChecked", "InputRadio", "Editable", "LitElement", "__privateAdd", "checked", "__privateSet", "__privateGet", "props", "event", "input", "id", "html", "__superGet", "unsafeCSS", "input_radio_component_default", "__decorateClass", "property", "eventOptions", "customElement", "LitElement", "customElement", "property", "InputSelectOption", "LitElement", "__decorateClass", "property", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "eventOptions", "property", "query", "input_select_component_default", "_initialValue", "InputSelect", "Editable", "LitElement", "__privateAdd", "props", "__privateSet", "__privateGet", "name", "oldValue", "newValue", "event", "options", "element", "InputSelectOption", "option", "copy", "input", "id", "html", "__superGet", "unsafeCSS", "input_select_component_default", "__decorateClass", "query", "property", "eventOptions", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "eventOptions", "property", "query", "input_text_component_default", "_initialValue", "InputText", "Editable", "LitElement", "__privateAdd", "props", "__privateSet", "__privateGet", "name", "oldValue", "newValue", "event", "input", "id", "html", "__superGet", "unsafeCSS", "input_text_component_default", "__decorateClass", "query", "property", "eventOptions", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "eventOptions", "property", "aside_component_default", "Aside", "ColorSchemable", "LitElement", "persist", "detail", "small", "visible", "read", "html", "unsafeCSS", "aside_component_default", "__decorateClass", "property", "eventOptions", "listen", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "layout_component_default", "Layout", "ColorSchemable", "LitElement", "html", "unsafeCSS", "layout_component_default", "__decorateClass", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "property", "main_component_default", "Main", "LitElement", "html", "unsafeCSS", "main_component_default", "__decorateClass", "property", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "eventOptions", "property", "query", "state", "ifDefined", "map", "when", "staticHtml", "unsafeStatic", "ROUTE_ELEMENTS", "ROUTE_READMES", "prepareReadmeLink", "url", "prepareElementLink", "element", "prepareNavigation", "manifest", "config", "items", "group", "readmes", "name", "elements", "matchesSearch", "content", "terms", "minSearchLength", "contents", "term", "filterItems", "filtered", "item", "filteredItems", "searchable", "isCustomElementDeclarationWithTagName", "declaration", "isCustomElementField", "field", "WRAPPED_STRING_REGEX", "unwrapString", "value", "getEnumValues", "trimmed", "CemField", "_field", "#types", "getEnumValues", "#enumValues", "unwrapString", "t", "p", "WRAPPED_STRING_REGEX", "CemSlot", "_slot", "t", "p", "CemElement", "_element", "#fields", "isCustomElementField", "map", "field", "CemField", "#slots", "slot", "CemSlot", "t", "p", "CemParser", "_data", "exclude", "#elements", "module", "isCustomElementDeclarationWithTagName", "element", "map", "CemElement", "t", "p", "fallbackGroupName", "sortGroupedElements", "a", "b", "addGroupedElement", "group", "currentGroup", "nestedGroups", "currentMap", "name", "prepareElementLink", "sortedMap", "elements", "CEM_PARSERS", "CemParser", "parseCEM", "data", "exclude", "schemaVersion", "parser", "loadManifest", "manifestUrl", "excludeElements", "manifest", "parseCEM", "getManifest", "areParamsEqual", "a", "b", "exclude", "key", "value", "mergeParams", "oldParams", "newParams", "params", "Router", "_Router", "#host", "#currentPath", "#currentParams", "#currentRoute", "#routes", "path", "currentPath", "exact", "isSamePath", "isNestedPath", "slugs", "log", "routes", "url", "host", "#withBaseUrl", "#createPattern", "#parseUrl", "hash", "#findRouteForUrl", "#findCurrentRoute", "event", "nextPath", "nextUrl", "nextRoute", "outgoingParams", "nextParams", "pastUrl", "pastRoute", "html", "ifDefined", "map", "until", "unsafeStatic", "withStatic", "prepareRoutes", "Router", "firstReadme", "firstElement", "getManifest", "url", "hash", "encoded", "markdown", "response", "prefixRelativeUrls", "html", "until", "ifDefined", "params", "router", "outgoingParams", "hasOutgoingParams", "isSamePath", "alignedParams", "mergeParams", "haveParamsChanged", "areParamsEqual", "tagName", "pluginName", "pluginData", "map", "stagePlugin", "withStatic", "unsafeStatic", "root_component_default", "_router", "Root", "LitElement", "__privateAdd", "Router", "detail", "event", "config", "loadConfig", "manifest", "loadManifest", "prepareNavigation", "routes", "prepareRoutes", "__privateGet", "url", "html", "when", "ifDefined", "getConfig", "logo_default", "map", "plugin", "staticHtml", "unsafeStatic", "unsafeCSS", "root_component_default", "__decorateClass", "state", "query", "property", "eventOptions", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "eventOptions", "property", "queryAll", "state", "map", "when", "root_navigation_component_default", "_items", "_searchTerms", "_altKeyPressed", "_handleKeyDown", "_handleKeyUp", "RootNavigation", "LitElement", "__privateAdd", "__privateGet", "terms", "__privateSet", "filterItems", "items", "event", "navigation", "name", "link", "html", "Router", "nested", "map", "group", "element", "when", "unsafeCSS", "root_navigation_component_default", "__decorateClass", "queryAll", "state", "property", "eventOptions", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "root_splash_component_default", "RootSplash", "LitElement", "html", "unsafeCSS", "root_splash_component_default", "__decorateClass", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "eventOptions", "property", "ifDefined", "when", "button_component_default", "_internals", "Button", "ColorSchemable", "LitElement", "__privateAdd", "__privateGet", "html", "when", "ifDefined", "unsafeCSS", "button_component_default", "__decorateClass", "property", "eventOptions", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "code_component_default", "Code", "ColorSchemable", "LitElement", "html", "unsafeCSS", "code_component_default", "__decorateClass", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "property", "icon_component_default", "Icon", "LitElement", "html", "unsafeCSS", "icon_component_default", "__decorateClass", "property", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "eventOptions", "property", "queryAll", "map", "tabs_component_default", "Tabs", "ColorSchemable", "LitElement", "event", "activeTab", "tabs", "html", "map", "tab", "label", "disabled", "unsafeCSS", "tabs_component_default", "__decorateClass", "queryAll", "property", "eventOptions", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "property", "title_component_default", "Title", "LitElement", "html", "unsafeCSS", "title_component_default", "__decorateClass", "property", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "eventOptions", "property", "classMap", "compress", "data", "encoding", "stream", "buffer", "binary", "x", "decompress", "m", "isElementWithin", "element", "container", "currentElement", "getRelativeBoundary", "parent", "height", "width", "x", "y", "relX", "relY", "getAncestorPath", "check", "ancestors", "isDescendantOf", "ancestor", "isMatch", "tagName", "litKey", "field", "IGNORED_ATTRIBUTES", "readCurrentElementData", "ref", "elementData", "getManifest", "skipAttributes", "fields", "acc", "field", "value", "litKey", "attributes", "attribute", "attr", "slots", "slot", "selector", "content", "node", "preview_editor_link_plugin_default", "_manifest", "_overlay", "_checkAvailability", "checkAvailability_fn", "_attachOverlay", "attachOverlay_fn", "_detachOverlay", "detachOverlay_fn", "_findContainerSlot", "findContainerSlot_fn", "_observeContainerSlot", "observeContainerSlot_fn", "_unobserveContainerSlot", "unobserveContainerSlot_fn", "_observeContainerScroll", "observeContainerScroll_fn", "_unobserveContainerScroll", "unobserveContainerScroll_fn", "_handleContainerScroll", "_handleContainerSlotChange", "_attachHints", "attachHints_fn", "_attachHint", "attachHint_fn", "_detachHints", "detachHints_fn", "_setupHints", "setupHints_fn", "_teardownHints", "teardownHints_fn", "_openViewer", "openViewer_fn", "PreviewEditorLink", "LitElement", "__privateAdd", "getManifest", "read", "__privateGet", "__privateMethod", "enabled", "html", "classMap", "available", "isDescendantOf", "event", "assigned", "element", "hint", "data", "readCurrentElementData", "param", "compress", "link", "Router", "unsafeCSS", "preview_editor_link_plugin_default", "__decorateClass", "property", "eventOptions", "listen", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "eventOptions", "property", "preview_editor_link_hint_component_default", "_observer", "_element", "_scrollParent", "_observeElement", "observeElement_fn", "PreviewEditorLinkHint", "ColorSchemable", "LitElement", "__privateAdd", "element", "__privateSet", "__privateMethod", "__privateGet", "height", "width", "x", "y", "getRelativeBoundary", "scrollTop", "scrollLeft", "html", "unsafeCSS", "preview_editor_link_hint_component_default", "__decorateClass", "property", "eventOptions", "listen", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "eventOptions", "property", "classMap", "ifDefined", "map", "preview_simulate_viewports_plugin_default", "VIEWPORTS", "ICONS", "STYLE_ID", "DECORATION_CLASS", "PROPORTION_CLASS", "SIZE_CLASS", "SCALE_CLASS", "SCALE_FACTOR", "PreviewSimulateViewports", "ColorSchemable", "LitElement", "style", "w", "h", "preview", "scale", "detail", "event", "dataset", "viewport", "html", "map", "classMap", "ifDefined", "unsafeCSS", "preview_simulate_viewports_plugin_default", "__decorateClass", "property", "eventOptions", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "eventOptions", "property", "state", "ifDefined", "keyed", "debounce", "fn", "wait", "timeoutId", "args", "URI_DATA_PARAM_COMPRESSION", "EMPTY_ELEMENT_DATA", "prepareInitialData", "element", "acc", "field", "value", "litKey", "slot", "parseFieldValue", "alignFormDataWebkit", "formData", "elements", "name", "mapFormData", "data", "key", "group", "compressFormData", "compress", "decompressElementData", "compressed", "raw", "decompress", "stage_editor_plugin_default", "UPDATE_DEBOUNCE", "_manifest", "_updateFormData", "_prepareElementData", "prepareElementData_fn", "StageEditor", "ColorSchemable", "LitElement", "__privateAdd", "getManifest", "debounce", "formData", "element", "data", "compressFormData", "event", "previewTagName", "__privateGet", "__privateMethod", "detail", "html", "keyed", "ifDefined", "compressed", "initialData", "prepareInitialData", "elementData", "decompressElementData", "unsafeCSS", "stage_editor_plugin_default", "__decorateClass", "state", "property", "eventOptions", "customElement", "html", "LitElement", "nothing", "unsafeCSS", "customElement", "eventOptions", "property", "state", "map", "until", "when", "withStatic", "stage_editor_controls_component_default", "_manifest", "StageEditorControls", "ColorSchemable", "LitElement", "__privateAdd", "getManifest", "previewTagName", "__privateGet", "event", "form", "formData", "alignFormDataWebkit", "content", "when", "withStatic", "html", "until", "renderMarkdown", "field", "nothing", "key", "litKey", "map", "option", "slot", "unsafeCSS", "stage_editor_controls_component_default", "__decorateClass", "state", "property", "eventOptions", "customElement", "nothing", "directive", "AsyncDirective", "SpreadPropsDirective", "_spreadData", "part", "spreadData", "_a", "data", "prevData", "element", "key", "value", "spreadProps", "SpreadEventsDirective", "eventName", "eventValue", "event", "eventData", "name", "spreadEvents", "SpreadDirective", "spread", "html", "LitElement", "nothing", "unsafeCSS", "customElement", "property", "keyed", "map", "unsafeHTML", "when", "unsafeStatic", "withStatic", "stage_editor_preview_component_default", "_alignAttributes", "alignAttributes_fn", "_prepareProps", "prepareProps_fn", "StageEditorPreview", "LitElement", "__privateAdd", "html", "map", "content", "name", "withStatic", "when", "unsafeHTML", "nothing", "tag", "unsafeStatic", "keyed", "spread", "__privateMethod", "attributes", "acc", "key", "value", "unsafeCSS", "stage_editor_preview_component_default", "__decorateClass", "property", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "property", "state", "map", "until", "stage_examples_plugin_default", "_manifest", "StageExamples", "ColorSchemable", "LitElement", "__privateAdd", "getManifest", "previewTagName", "__privateGet", "available", "event", "html", "map", "example", "until", "renderMarkdown", "unsafeCSS", "stage_examples_plugin_default", "__decorateClass", "state", "property", "customElement", "html", "LitElement", "nothing", "unsafeCSS", "customElement", "property", "state", "ifDefined", "stage_readme_plugin_default", "_manifest", "StageReadme", "ColorSchemable", "LitElement", "__privateAdd", "getManifest", "previewTagName", "__privateGet", "available", "event", "html", "ifDefined", "nothing", "unsafeCSS", "stage_readme_plugin_default", "__decorateClass", "state", "property", "customElement", "html", "LitElement", "unsafeCSS", "customElement", "eventOptions", "property", "state", "classMap", "topbar_preview_editor_link_toggle_plugin_default", "TopbarPreviewEditorLinkToggle", "LitElement", "read", "persist", "html", "classMap", "unsafeCSS", "topbar_preview_editor_link_toggle_plugin_default", "__decorateClass", "state", "property", "eventOptions", "customElement"]
}
