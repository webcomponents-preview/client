@mixin with-color-scheme-attribute($color-scheme, $shadow: true, $append: false) {
  $modifier: '[color-scheme="#{$color-scheme}"]';
  $modified: if($shadow, ':host(#{$modifier})', $modifier);

  @if $append == root {
    @at-root (without: all) {
      #{$modified}#{&} {
        @content;
      }
    }
  } @else if $append == parent {
    @at-root (without: all) {
      #{&}#{$modified} {
        @content;
      }
    }
  } @else {
    #{$modified} {
      @content;
    }
  }
}

@mixin with-color-scheme-media($color-scheme) {
  @media (prefers-color-scheme: #{$color-scheme}) {
    @content;
  }
}

/// Color Scheme mixin
/// Allows to apply styles based on the OS default color scheme and an override by an attribute selector
@mixin color-scheme(
  $shadow: true,
  $append: root,
  $color-schemes: (
    dark,
    light,
  )
) {
  @each $color-scheme in $color-schemes {
    // match to media query by OS default
    @include with-color-scheme-media($color-scheme) {
      @content ($color-scheme);
    }
    // match to element attribute selector override
    @include with-color-scheme-attribute($color-scheme, $shadow, $append) {
      @content ($color-scheme);
    }
    // match to element attribute selector override
    @include with-color-scheme-attribute($color-scheme, $append-root, $no-shadow) {
      @content ($color-scheme);
    }
  }
}
