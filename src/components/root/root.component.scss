@use 'sass:map';
@use 'sass:math';
@use '@/styles/utils' as utils;

// global custom properties, normally declared in `:root`
:host {
  --wcp-base-size: 10px;
  --wcp-border-radius: calc(var(--wcp-base-size) * 0.5);

  --wcp-color-opacity: 1;

  /// defines the hsl colors along with a raw notation to be used with runtime opacity calculation, so e.g.:
  /// ```scss
  /// define-color('red', hsl(0deg 100% 50%), 1); // will define the following custom properties:
  /// --wcp-color-red-raw: hsl(0deg 100% 50%);
  /// --wcp-color-red: hsl(var(--wcp-color-red-raw) / 1);
  /// ```
  @include utils.define-color('grey-100', hsl(0deg 0% 100%), var(--wcp-color-opacity));
  @include utils.define-color('grey-96', hsl(0deg 0% 96%), var(--wcp-color-opacity));
  @include utils.define-color('grey-90', hsl(0deg 0% 90%), var(--wcp-color-opacity));
  @include utils.define-color('grey-80', hsl(0deg 0% 80%), var(--wcp-color-opacity));
  @include utils.define-color('grey-65', hsl(0deg 0% 65%), var(--wcp-color-opacity));
  @include utils.define-color('grey-24', hsl(0deg 0% 24%), var(--wcp-color-opacity));
  @include utils.define-color('grey-17', hsl(0deg 0% 17%), var(--wcp-color-opacity));

  @include utils.define-color('blue-13', hsl(225deg 6% 13%), var(--wcp-color-opacity));
  @include utils.define-color('blue-17', hsl(215deg 28% 17%), var(--wcp-color-opacity));
  @include utils.define-color('blue-20', hsl(217deg 19% 20%), var(--wcp-color-opacity));
  @include utils.define-color('blue-24', hsl(217deg 19% 24%), var(--wcp-color-opacity));
  @include utils.define-color('blue-27', hsl(217deg 19% 27%), var(--wcp-color-opacity));
  @include utils.define-color('blue-34', hsl(215deg 14% 34%), var(--wcp-color-opacity));
  @include utils.define-color('blue-55', hsl(215deg 14% 55%), var(--wcp-color-opacity));
  @include utils.define-color('blue-65', hsl(218deg 11% 65%), var(--wcp-color-opacity));
  @include utils.define-color('blue-80', hsl(220deg 13% 80%), var(--wcp-color-opacity));
  @include utils.define-color('blue-91', hsl(220deg 13% 91%), var(--wcp-color-opacity));
  @include utils.define-color('blue-93', hsl(220deg 13% 93%), var(--wcp-color-opacity));
  @include utils.define-color('blue-96', hsl(220deg 14% 96%), var(--wcp-color-opacity));

  --wcp-fx-default-duration: 0.2s;
  --wcp-fx-layout-duration: 0.4s;

  --wcp-font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue',
    Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';

  /// flowing contents, e.g. text and other inline contents, should be limited to this width
  --wcp-layout-flowing-width: 800px;
  /// fixed contents, e.g. tables and code examples, should be limited to this width
  --wcp-layout-fixed-width: 1200px;
}

// host (wcp-root) specific custom properties
// prettier-ignore
:host {
  ---wcp-root-dark-background: var(--wcp-root-dark-background, var(--wcp-color-blue-17));
  ---wcp-root-dark-color: var(--wcp-root-dark-color, var(--wcp-color-grey-96));

  ---wcp-root-light-background: var(--wcp-root-light-background, var(--wcp-color-blue-80));
  ---wcp-root-light-color: var(--wcp-root-light-color, var(--wcp-color-grey-96));
}

:host {
  display: block;

  background-color: var(---wcp-root-background);
  color: var(---wcp-root-color);

  font-family: var(--wcp-font-family);
  font-feature-settings: normal;
  font-size: 15px;
  line-height: 1.3;

  @include utils.color-scheme() using ($color-scheme) {
    ---wcp-root-background: var(---wcp-root-#{$color-scheme}-background);
    ---wcp-root-color: var(---wcp-root-#{$color-scheme}-color);
  }

  @include utils.breakpoint(sm) {
    font-size: 13px;
  }

  @include utils.breakpoint(md) {
    font-size: 15px;
  }

  @include utils.breakpoint(lg) {
    font-size: 17px;
  }
}

:host(:not([inline])) {
  width: 100vw;

  @supports not (height: 100dvh) {
    height: 100vh;
  }

  @supports (height: 100dvh) {
    height: 100dvh;
  }
}

wcp-preview-controls {
  position: sticky;
  inset: 0 0 auto;

  @include utils.color-scheme() using ($color-scheme) {
    background: var(---wcp-root-#{$color-scheme}-background);
  }
}
