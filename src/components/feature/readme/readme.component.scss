@use 'sass:meta' as meta;
@use '@/styles/utils' as utils;

// a small example of basic markdown styling can be found in the NextCloud project:
// https://github.com/nextcloud/deck/blob/main/src/css/markdown.scss

// prettier-ignore
:host {
  ---wcp-readme-dark-color: var(--wcp-readme-dark-color, var(--wcp-color-grey-96));
  ---wcp-readme-dark-color-accent: var(--wcp-readme-dark-color-accent, #58a6ff);
  ---wcp-readme-dark-color-muted: var(--wcp-readme-dark-color-muted, var(--wcp-color-grey-80));
  ---wcp-readme-dark-border-color: var(--wcp-readme-dark-border-color, var(--wcp-color-grey-24));
  ---wcp-readme-dark-highlight-background: var(--wcp-readme-dark-highlight-background, var(--wcp-color-grey-17));

  ---wcp-readme-light-color: var(--wcp-readme-light-color, var(--wcp-color-grey-17));
  ---wcp-readme-light-color-accent: var(--wcp-readme-light-color-accent, #122df5);
  ---wcp-readme-light-color-muted: var(--wcp-readme-light-color-muted, var(--wcp-color-grey-24));
  ---wcp-readme-light-border-color: var(--wcp-readme-light-border-color, var(--wcp-color-grey-65));
  ---wcp-readme-light-highlight-background: var(--wcp-readme-light-highlight-background, var(--wcp-color-blue-91));
}

// map some theming specific variables to the host scope
:host {
  @include utils.color-scheme(false, parent) using ($color-scheme) {
    ---wcp-readme-border-color: var(---wcp-readme-#{$color-scheme}-border-color);
    ---wcp-readme-color: var(---wcp-readme-#{$color-scheme}-color);
    ---wcp-readme-color-accent: var(---wcp-readme-#{$color-scheme}-color-accent);
    ---wcp-readme-color-muted: var(---wcp-readme-#{$color-scheme}-color-muted);
    ---wcp-readme-highlight-background: var(---wcp-readme-#{$color-scheme}-highlight-background);
  }
}

// add some default styles from GitHub for the rendered readme for the time being
@include meta.load-css('@/styles/includes/github-markdown.scss');

.markdown-body {
  // first, reset some defaults, to be inherited from the global scope
  background-color: inherit;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;

  display: block;
  color: var(---wcp-readme-color);

  // override some of the github styles to blend in with the rest
  // limit styles to non-preview contents
  :not(wcp-preview *) {
    // as these are wrapped in our custom `wcp-readme-example` component,
    // we need to reset the spacing on the projected pre elements
    wcp-readme-example pre {
      background: 0;
      margin: 0;
      padding: 0;
    }

    // all non-previewable code example shall receive the correct border radius
    wcp-code pre {
      border-radius: var(--wcp-border-radius);
      width: fit-content;
    }

    table tr {
      background-color: transparent;
    }

    img {
      background: none;
    }

    // limit flowing content sizes
    // prettier-ignore
    h1, h2, h3, h4, h5, h6, p, ul, ol, dl {
      max-width: var(--wcp-layout-flowing-width);
    }

    // enforce a maximum width for fixed content
    // prettier-ignore
    table, pre, blockquote {
      max-width: min(100%, var(--wcp-layout-fixed-width));
    }

    // as hash routing may be used, we can't rely on the `:target` pseudo selector, thus we set a class
    .target {
      text-decoration: underline;
    }

    a {
      color: var(---wcp-readme-color-accent);
    }

    blockquote {
      border-left-color: var(---wcp-readme-border-color);
      color: var(---wcp-readme-color-muted);
    }

    // prettier-ignore
    table td, table th, table tr,
    h1, h2, h3, h4, h5, h6 {
      border-color: var(---wcp-readme-border-color);
    }

    > pre,
    table tr:nth-child(2n) {
      background-color: var(---wcp-readme-highlight-background);
    }

    wcp-code pre {
      background-color: var(---wcp-readme-highlight-background);
    }
  }
}
