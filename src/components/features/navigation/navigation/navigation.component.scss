@use '@/styles/utils' as utils;

// prettier-ignore
:host {
  ---wcp-navigation-spacing: var(--wcp-navigation-spacing, #{0 0 utils.size(1)});
  ---wcp-navigation-spacing-items: var(--wcp-navigation-spacing-items, 0);
  ---wcp-navigation-spacing-headline: var(--wcp-navigation-spacing-headline, #{utils.size(1.5) 0 utils.size(1) utils.size(2)});
  ---wcp-navigation-spacing-headline-togglable: var(--wcp-navigation-spacing-headline-togglable, #{utils.size(1) utils.size(1) utils.size(1) utils.size(2)});

  ---wcp-navigation-inset: var(--wcp-navigation-inset, #{utils.size(1.5)});
  
  ---wcp-navigation-dark-border-color: var(--wcp-navigation-headline-dark-border-color, var(--wcp-color-grey-24));
  ---wcp-navigation-light-border-color: var(--wcp-navigation-headline-light-border-color, var(--wcp-color-blue-24));

  ---wcp-navigation-headline-size: var(--wcp-navigation-headline-size, .8em);
  ---wcp-navigation-headline-weight: var(--wcp-navigation-headline-weight, 200);
  ---wcp-navigation-headline-spacing: var(--wcp-navigation-headline-spacing, .1em);

  ---wcp-navigation-headline-dark-background: var(--wcp-navigation-headline-dark-background, var(--wcp-color-blue-13));
  ---wcp-navigation-headline-light-background: var(--wcp-navigation-headline-light-background, var(--wcp-color-blue-17));

  @include utils.color-scheme() using ($color-scheme) {
    ---wcp-navigation-headline-background: var(---wcp-navigation-headline-#{$color-scheme}-background);
    ---wcp-navigation-border-color: var(---wcp-navigation-#{$color-scheme}-border-color);
  }
}

:host {
  display: block;
}

// set the border on top of the whole element if no headline is given;
// otherwise, the headline will have this border, which is then part
// of the sticky headline element üç≠üç≠üç≠
:host(:not([headline])) {
  border-top: 1px solid var(---wcp-navigation-border-color);
}

h3 {
  display: flex;
  flex-direction: row;
  gap: 1em;
  align-items: center;

  margin: 0;
  padding: var(---wcp-navigation-spacing-headline);

  background-color: var(---wcp-navigation-headline-background);

  span {
    flex: 1 1 auto;
    display: block;

    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  :host([togglable]) & {
    cursor: pointer;
    padding: var(---wcp-navigation-spacing-headline-togglable);

    font-size: inherit;
    font-weight: inherit;

    wcp-icon {
      flex: 0 1 auto;
      pointer-events: none;
      color: var(---wcp-navigation-border-color);
      --wcp-icon-size: 20;
    }
  }

  // static first level headlines are treated as sticky categories with a separator
  :host(:not([togglable])) & {
    position: sticky;
    top: 0;
    z-index: 1;

    font-size: var(---wcp-navigation-headline-size);
    font-weight: var(---wcp-navigation-headline-weight);
    letter-spacing: var(---wcp-navigation-headline-spacing);
    line-height: 1;
    text-transform: uppercase;
    font-weight: inherit;

    &::before {
      content: '';

      position: absolute;
      inset: -1px 0 auto;
      height: 1px;

      background-color: var(---wcp-navigation-border-color);
    }
  }
}

nav {
  position: relative;
  margin-left: var(---wcp-navigation-inset);
  padding: var(---wcp-navigation-spacing);

  display: flex;
  flex-direction: column;
  gap: var(---wcp-navigation-spacing-items);

  :host([togglable]:not([open])) & {
    display: none;
  }
}
