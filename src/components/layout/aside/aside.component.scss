@use '@/styles/utils' as utils;

// prettier-ignore
:host {
  ---wcp-aside-max-width: var(--wcp-aside-max-width, #{utils.size(24)});

  ---wcp-aside-spacing: var(--wcp-aside-spacing, 0);

  ---wcp-aside-dark-background: var(--wcp-aside-dark-background, var(--wcp-color-blue-13));
  ---wcp-aside-dark-color: var(--wcp-aside-dark-color, var(--wcp-color-blue-96));
  
  ---wcp-aside-light-background: var(--wcp-aside-dark-background, var(--wcp-color-blue-17));
  ---wcp-aside-light-color: var(--wcp-aside-dark-color, var(--wcp-color-blue-96));
  
  ---wcp-aside-toggle-size: var(--wcp-aside-toggle-size, #{utils.size(2)});

  @include utils.color-scheme() using ($color-scheme) {
    ---wcp-aside-background: var(---wcp-aside-#{$color-scheme}-background);
    ---wcp-aside-color: var(---wcp-aside-#{$color-scheme}-color);
  }
}

:host {
  position: fixed;
  inset: 0;
  z-index: 3;

  display: flex;
  flex-direction: column;
  box-sizing: border-box;
  padding: var(---wcp-aside-spacing);

  height: 100%;
  max-width: 100%;
  min-width: 100%;

  background-color: var(---wcp-aside-background);
  color: var(---wcp-aside-color);

  transition: transform ease-in-out var(--wcp-fx-layout-duration);
  will-change: transform;

  @include utils.breakpoint(sm) {
    position: relative;
    max-width: var(---wcp-aside-max-width);
    min-width: var(---wcp-aside-max-width);

    transition: margin-left ease-in-out var(--wcp-fx-layout-duration);
    will-change: margin-left;
  }
}

:host([hidden]) {
  transform: translateX(-100%);

  @include utils.breakpoint(sm) {
    transform: none;
    margin-left: calc(var(---wcp-aside-max-width) * -1);
  }
}

header {
  position: sticky;
  inset: 0 0 auto;
  z-index: 4;
}

section {
  overflow: auto;
  overflow-x: hidden;
}

wcp-button {
  position: absolute;
  top: utils.size(0.4);
  right: utils.size(1.5);

  @include utils.breakpoint(sm) {
    display: none;
  }
}
