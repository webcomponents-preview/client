import { readFile } from 'node:fs/promises';
import rootPath from '../../../jest-root-path-helper.cjs';
import { parseCEM } from './parse.js';

const root = `file://${rootPath}/`;

describe('parse', () => {
  describe('parseCEM', () => {
    it('fails on missing schema version', () => {
      const parse = () => parseCEM({});
      expect(parse).toThrowError('No schema version found in manifest data. Was it generated by a CEM compliant tool?');
    });

    it('fails on outdated schema versions', () => {
      const parse = () => parseCEM({ schemaVersion: '0.0.10' });
      expect(parse).toThrowError('No parser for CEM version 0.0.10 found.');
    });

    it.each`
      name        | lib
      ${'SAB UI'} | ${'sab-ui'}
      ${'WCP'}    | ${'wcp-client'}
      ${'ZUi'}    | ${'zui'}
    `('parses the $name manifest', async ({ lib }) => {
      const path = new URL(`./fixtures/manifests/${lib}.json`, root);
      const raw = await readFile(path, 'utf-8');
      const data = parseCEM(JSON.parse(raw));

      expect(data).toHaveProperty('elements');
    });
  });
});
